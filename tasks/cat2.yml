---

- name: "MEDIUM | WN11-00-000005 | AUDIT | Domain-joined systems must use Windows 11 Enterprise Edition 64-bit version."
  when:
    - wn11_00_000005
    - discovered_domain_joined
    - ansible_architecture != "64-bit"
  tags:
    - WN11-00-000005
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253254r991589_rule
    - V-253254
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000005 | AUDIT | Domain-joined systems must use Windows 11 Enterprise Edition 64-bit version. | Warning."
      ansible.builtin.debug:
        msg:
          - "Warning!! You need to be on a 64-bit operating system when joined to a domain."
          - "This is a requirement for STIG compliance"

    - name: "MEDIUM | WN11-00-000005 | AUDIT | Domain-joined systems must use Windows 11 Enterprise Edition 64-bit version. | Warn Count."
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000005'

- name: "MEDIUM | WN11-00-000010 | AUDIT | Windows 11 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use."
  when:
    - wn11_00_000010
    - discovered_domain_joined
    - not discovered_vdi_non_persistent
  tags:
    - WN11-00-000010
    - CAT2
    - CCI-002421
    - SRG-OS-000424-GPOS-00188
    - SV-253255r971547_rule
    - V-253255
    - NIST800-53R4_SC-8_1
  block:
    - name: "MEDIUM | WN11-00-000010 | AUDIT | Windows 11 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Get TPM status."
      ansible.windows.win_command: wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get * /format:textvaluelist.xsl
      changed_when: false
      failed_when: false
      register: wn11_00_000010_tpm_status

    - name: "MEDIUM | WN11-00-000010 | AUDIT | Windows 11 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Running Instances Check."
      when: "'No Instance' in wn11_00_000010_tpm_status.stderr_lines | string"
      ansible.builtin.debug:
        msg:
          - "Warning!! Please confirm TPM status is Ready for use, there are no instances currently running."

    - name: "MEDIUM | WN11-00-000010 | AUDIT | Windows 11 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Full TPM Check."
      when:
        - "'No Instance' not in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'IsActivated_InitialValue=TRUE' in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'IsEnabled_InitialValue=TRUE' in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'IsOwned_InitialValue=TRUE' in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'SpecVersion=2.0' in wn11_00_000010_tpm_status.stderr_lines | string"
      ansible.builtin.debug:
        msg:
          - "Warning!! Please confirm TPM status is Ready for use. Current settings do not meet STIG requirements."

    - name: "MEDIUM | WN11-00-000010 | AUDIT | Windows 11 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Warn Count."
      when:
        - "'No Instance' not in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'IsActivated_InitialValue=TRUE' in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'IsEnabled_InitialValue=TRUE' in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'IsOwned_InitialValue=TRUE' in wn11_00_000010_tpm_status.stderr_lines | string"
        - "'SpecVersion=2.0' in wn11_00_000010_tpm_status.stderr_lines | string or
          'No Instance' in wn11_00_000010_tpm_status.stderr_lines | string"
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000010'

- name: "MEDIUM | WN11-00-000015 | AUDIT | Windows 11 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS."
  when:
    - wn11_00_000015
    - not discovered_vdi_non_persistent
  tags:
    - WN11-00-000015
    - CAT2
    - CCI-002421
    - SRG-OS-000424-GPOS-00188
    - SV-253256r971547_rule
    - V-253256
    - NIST800-53R4_SC-8_1
  block:
    - name: "MEDIUM | WN11-00-000015 | AUDIT | Windows 11 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS | Check For UEFI Status."
      ansible.windows.win_shell: $env:firmware_type
      changed_when: false
      failed_when: false
      register: wn11_00_000015_system_firmware_check

    - name: "MEDIUM | WN11-00-000015 | AUDIT | Windows 11 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS | Legacy BIOS Error."
      when: "'UEFI' not in wn11_00_000015_system_firmware_check.stdout_lines | string"
      ansible.builtin.debug:
        msg:
          - "Warning!! Your system firmware is configured to run in Legacy BIOS."
          - "UEFI is the requirement for STIG to be in compliance."

    - name: "MEDIUM | WN11-00-000015 | AUDIT | Windows 11 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS | Warn Count."
      when: "'UEFI' not in wn11_00_000015_system_firmware_check.stdout_lines | string"
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000015'

- name: "MEDIUM | WN11-00-000020 | AUDIT | Secure Boot must be enabled on Windows 11 systems."
  when:
    - wn11_00_000020
    - not discovered_vdi_non_persistent
  tags:
    - WN11-00-000020
    - CAT2
    - CCI-002421
    - SRG-OS-000424-GPOS-00188
    - SV-253257r971547_rule
    - V-253257
    - NIST800-53R4_SC-8_1
  block:
    - name: "MEDIUM | WN11-00-000020 | AUDIT | Secure Boot must be enabled on Windows 11 systems. | Check secure boot."
      ansible.windows.win_shell: Confirm-SecureBootUEFI
      changed_when: false
      failed_when: false
      register: wn11_00_000020_secure_boot_audit

    - name: "MEDIUM | WN11-00-000020 | AUDIT | Secure Boot must be enabled on Windows 11 systems. | Virtual System Check."
      when: "'undefined' in wn11_00_000020_secure_boot_audit.stderr | string"
      ansible.builtin.debug:
        msg:
          - "Warning!! Your running a virtual system that does not support Secure Boot."
          - "Please take note for audit purposes and verify it is compliant with sites policies to be STIG compliant."

    - name: "MEDIUM | WN11-00-000020 | AUDIT | Secure Boot must be enabled on Windows 11 systems. | Hardware Not supported Check."
      when: "'CMdlet' in wn11_00_000020_secure_boot_audit.stderr | string"
      ansible.builtin.debug:
        msg:
          - "Warning!! Your computers hardware does not support Secure Boot."
          - "Please take note for audit purposes and verify it is compliant with sites policies to be STIG compliant."

    - name: "MEDIUM | WN11-00-000020 | AUDIT | Secure Boot must be enabled on Windows 11 systems. | Secure Boot Set To Disabled."
      when: "'False' in wn11_00_000020_secure_boot_audit.stdout | string"
      ansible.builtin.debug:
        msg:
          - "Warning!! Secure Boot is set to DISABLED."
          - "Please take note for audit purposes and verify it is compliant with sites policies to be STIG compliant."

    - name: "MEDIUM | WN11-00-000020 | AUDIT | Secure Boot must be enabled on Windows 11 systems. | Warn Count."
      when: "('undefined' in wn11_00_000020_secure_boot_audit.stderr | string) or ('CMdlet' in wn11_00_000020_secure_boot_audit.stderr | string) or ('False' in wn11_00_000020_secure_boot_audit.stdout | string)"
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000020'

- name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)"
  when: wn11_00_000025
  tags:
    - WN11-00-000025
    - CAT2
    - CCI-000366
    - SRG-OS-000191-GPOS-00080
    - SV-253258r1000099_rule
    - V-253258
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Check if an ESS software is specified"
      when: win11stig_ess_software.name | length == 0
      ansible.builtin.debug:
        msg: "No ESS software specified in defaults/main.yml. Skipping scan. Warning Message To Follow!"

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Check to see if ESS Software is installed."
      when: win11stig_ess_software.name | length > 0
      ansible.windows.win_shell: |
        $installedApps = Get-WmiObject -Class Win32_Product | Select-Object -ExpandProperty Name
        if ($installedApps -contains "{{ win11stig_ess_software.name }}") {
            Write-Output "Installed: {{ win11stig_ess_software.name }}"
        } else {
            Write-Output "ESS Not Found"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000025_ess_check

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Set Fact For ESS Software is installed."
      when: win11stig_ess_software.name | length > 0
      ansible.builtin.set_fact:
        wn11_00_000025_ess_installed: "{{ 'ESS Not Found' not in wn11_00_000025_ess_check.stdout }}"

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Check running services for ESS Software"
      when: wn11_00_000025_ess_installed | default(false)
      ansible.windows.win_shell: |
        $runningServices = Get-Service | Where-Object { $_.Status -eq 'Running' } | Select-Object -ExpandProperty Name
        $foundServices = @()
        {% for service in win11stig_ess_software.services %}
        if ($runningServices -contains "{{ service }}") {
            $foundServices += "{{ service }}"
        }
        {% endfor %}
        if ($foundServices.Count -gt 0) {
            Write-Output "Running: $($foundServices -join ', ')"
        } else {
            Write-Output "ESS Service Not Running"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000025_ess_service_check

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Set fact if services for ESS are running"
      when: wn11_00_000025_ess_installed | default(false)
      ansible.builtin.set_fact:
        wn11_00_000025_ess_running: "{{ 'ESS Service Not Running' not in wn11_00_000025_ess_service_check.stdout }}"

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Warning."
      when: win11stig_ess_software.name | length == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! Please install DoD-approved ESS software and ensure it is operating continuously"
          - "Ask site ISSM for documentation fo the ESS software installation and configuration"
          - "Example of documentation can be a copy of the site's CCB approved Software Baseline with"
          - "version of software noted or a memo from the ISSM stating current ESS software and version."

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Warning For ESS Defined But Missing."
      when: win11stig_ess_software.name | length > 0 and not wn11_00_000025_ess_installed | default(false)
      ansible.builtin.debug:
        msg:
          - "Warning!! ESS Software defined in win11stig_ess_software is not installed! Please read"
          - "the notes for the variable and make the necessary change to the variable to properly check for compliance."
          - "FINDING: {{ win11stig_ess_software.name }} is NOT installed! Install DoD-approved ESS software."

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Warning For ESS Installed But Service Not Running."
      when: win11stig_ess_software.name | length > 0 and wn11_00_000025_ess_installed | default(false) and not wn11_00_000025_ess_running | default(false)
      ansible.builtin.debug:
        msg:
          - "Warning!! ESS Software defined in win11stig_ess_software is installed! Please read"
          - "the notes for the variable and make the necessary change to the variable to properly check for compliance."
          - "If all information is correct then you will need to start the service."
          - "FINDING: {{ win11stig_ess_software.name }} is installed but its services are NOT running!"

    - name: "MEDIUM | WN11-00-000025 | AUDIT | Windows 11 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: Continuously, where ESS is used; 30 days, for any additional internal network scans not covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Warn Count."
      when: (win11stig_ess_software.name | length == 0) or (win11stig_ess_software.name | length > 0 and not wn11_00_000025_ess_installed | default(false)) or (win11stig_ess_software.name | length > 0 and wn11_00_000025_ess_installed | default(false) and not wn11_00_000025_ess_running | default(false))
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000025'

- name: "MEDIUM | WN11-00-000032 | PATCH | Windows 11 systems must use a BitLocker PIN with a minimum length of 6 digits for pre-boot authentication."
  when:
    - wn11_00_000032
    - not (discovered_vdi_non_persistent or discovered_avd_no_data_at_rest)
  tags:
    - WN11-00-000032
    - CAT2
    - CCI-000804
    - SRG-OS-000121-GPOS-00062
    - SV-253261r958504_rule
    - V-253261
    - NIST800-53_IA-8
    - NIST800-53A_IA-8.1
    - NIST800-53R4_IA-8
  block:
    - name: "MEDIUM | WN11-00-000032 | PATCH | Windows 11 systems must use a BitLocker PIN with a minimum length of 6 digits for pre-boot authentication. | Apply Pin Length"
      when: win11stig_bitlocker_min_pin_length >= 6
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\FVE
        name: MinimumPIN
        data: "{{ win11stig_bitlocker_min_pin_length }}"
        type: dword

    - name: "MEDIUM | WN11-00-000032 | AUDIT | Windows 11 systems must use a BitLocker PIN with a minimum length of 6 digits for pre-boot authentication. | Warning Message."
      when: win11stig_bitlocker_min_pin_length < 6
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_bitlocker_min_pin_length. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-00-000032 | AUDIT | Windows 11 systems must use a BitLocker PIN with a minimum length of 6 digits for pre-boot authentication. | Warn Count."
      when: win11stig_bitlocker_min_pin_length < 6
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000032'

- name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."
  when: wn11_00_000035
  tags:
    - WN11-00-000035
    - CAT2
    - CCI-001774
    - SRG-OS-000370-GPOS-00155
    - SV-253262r958808_rule
    - V-253262
    - NIST800-53R4_CM-7_5_b
  block:
    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Check if AppLocker is enabled"
      ansible.windows.win_shell: |
        $applockerStatus = Get-AppLockerPolicy -Effective -Xml
        if ($applockerStatus) {
            Write-Output "AppLocker is Enabled"
        } else {
            Write-Output "AppLocker is NOT Enabled"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000035_applocker_check

    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Applocker XML Out."
      when:
        - "'AppLocker is Enabled' in wn11_00_000035_applocker_check.stdout"
        - win11stig_applocker_output == 1
      ansible.windows.win_shell: Get-AppLockerPolicy -Effective -XML > {{ win11stig_applocker_xml_output }}
      changed_when: false
      failed_when: false

    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Check XML File Warning."
      when:
        - "'AppLocker is Enabled' in wn11_00_000035_applocker_check.stdout"
        - win11stig_applocker_output == 1
      ansible.builtin.debug:
        msg:
          - "Warning!! Please review the configuration of Applocker using the XML file located in directory"
          - "{{ win11stig_applocker_xml_output }} to confirm you have a deny-all policy in place that utilizes"
          - "a whitelist for applications. There is an AppLocker white paper from NSA that can be used as a guide"
          - "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/applocker-policies-deployment-guide"

    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Check For Applocker To Stdout."
      when:
        - "'AppLocker is Enabled' in wn11_00_000035_applocker_check.stdout"
        - win11stig_applocker_output != 1
      ansible.windows.win_shell: Get-AppLockerPolicy -Effective -XML
      changed_when: false
      failed_when: false
      register: wn11_00_000035_applocker_output

    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Check Stdout Print Out."
      when:
        - "'AppLocker is Enabled' in wn11_00_000035_applocker_check.stdout"
        - win11stig_applocker_output != 1
      ansible.builtin.debug:
        msg:
          - "Warning!! Please review the configuration of Applocker to confirm you have a deny-all policy in place that utilizes"
          - "a whitelist for applications. There is an AppLocker white paper from NSA that can be used as a guide"
          - "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/applocker-policies-deployment-guide"
          - "{{ wn11_00_000035_applocker_output.stdout_lines }}"

    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Warning Message When No Applocker."
      when: "'AppLocker is Enabled' not in wn11_00_000035_applocker_check.stdout"
      ansible.builtin.debug:
        msg:
          - "Warning!! Applocker is not in use. Please confirm you have a deny-all policy in place that utilizes a whitelist for applications."
          - "This can be done through a utility like AppLocker to limit applications only to authorized applications"
          - "There is an AppLocker white paper from NSA that can be used as a guide"
          - "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/applocker-policies-deployment-guide"

    - name: "MEDIUM | WN11-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Warn Count."
      when: ('AppLocker is Enabled' not in wn11_00_000035_applocker_check.stdout) or ('AppLocker is Enabled' in wn11_00_000035_applocker_check.stdout and win11stig_applocker_output == 1) or ('AppLocker is Enabled' in wn11_00_000035_applocker_check.stdout and win11stig_applocker_output != 1)
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000035'

- name: "MEDIUM | WN11-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system."
  when: wn11_00_000055
  tags:
    - WN11-00-000055
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253266r991589_rule
    - V-253266
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Run Check"
      ansible.windows.win_shell: |
        $bcdEntries = bcdedit /enum firmware | Select-String "description"
        $windowsEntries = $bcdEntries | Where-Object { $_ -match "{{ win11stig_os_keyword }}" }

        $otherOSEntries = @()
        {% for os_name in win11stig_non_windows_os_keywords %}
        $matches = $bcdEntries | Where-Object { $_ -match "{{ os_name }}" }
        if ($matches) {
            $otherOSEntries += $matches
        }
        {% endfor %}

        if ($windowsEntries.Count -eq 1 -and $otherOSEntries.Count -eq 0) {
            Write-Output "Windows is the only OS installed."
        } else {
            Write-Output "FINDING: Non-compliant OS configuration detected!"
            if ($windowsEntries.Count -gt 1) {
                Write-Output "Multiple Windows installations detected!"
                Write-Output $windowsEntries
            }
            if ($otherOSEntries.Count -gt 0) {
                Write-Output "Other OS detected!"
                Write-Output $otherOSEntries
            }
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000055_os_check

    - name: "MEDIUM | WN11-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Report Finding - Multiple Windows Installations Detected"
      when: "'Multiple Windows installations detected!' in wn11_00_000055_os_check.stdout"
      ansible.builtin.debug:
        msg:
          - "Warning!! Multiple Windows installations detected! Only one should exist."
          - "Results:"
          - "{{ wn11_00_000055_os_check.stdout_lines }}"

    - name: "MEDIUM | WN11-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Report Finding - Other OS Detected"
      when: "'Other OS detected!' in wn11_00_000055_os_check.stdout"
      ansible.builtin.debug:
        msg:
          - "Warning!! Non-Windows OS detected in boot configuration! Ensure only Windows is installed."
          - "Results:"
          - "{{ wn11_00_000055_os_check.stdout_lines }}"

    - name: "MEDIUM | WN11-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Report Finding - Non-Compliant OS Configuration"
      when: "'FINDING: Non-compliant OS configuration detected!' in wn11_00_000055_os_check.stdout"
      ansible.builtin.debug:
        msg:
          - "Warning!! System has multiple OS configurations, review boot entries!"
          - "Results:"
          - "{{ wn11_00_000055_os_check.stdout_lines }}"

    - name: "MEDIUM | WN11-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Warn Count."
      when: >
        ('Multiple Windows installations detected!' in wn11_00_000055_os_check.stdout) or ('Other OS detected!' in wn11_00_000055_os_check.stdout) or ('FINDING: Non-compliant OS configuration detected!' in wn11_00_000055_os_check.stdout)
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000055'

- name: "MEDIUM | WN11-00-000060 | PATCH | Non system-created file shares on a system must limit access to groups that require it."
  when: wn11_00_000060
  tags:
    - WN11-00-000060
    - CAT2
    - CCI-001090
    - SRG-OS-000138-GPOS-00069
    - SV-253267r958524_rule
    - V-253267
    - NIST800-53_SC-4
    - NIST800-53A_SC-4.1
    - NIST800-53R4_SC-4
  block:
    - name: "MEDIUM | WN11-00-000060 | AUDIT | Non system-created file shares on a system must limit access to groups that require it. | Get Share Names"
      ansible.windows.win_shell: Get-SmbShare | Where-Object { ($_.Name -notlike "ADMIN$") -and ($_.Name -notlike 'C$') -and ($_.Name -notlike 'IPC$') } | Select-Object -Property Name | format-table -hidetableheaders
      changed_when: false
      failed_when: false
      register: wn11_00_000060_share_names

    - name: "MEDIUM | WN11-00-000060 | AUDIT | Non system-created file shares on a system must limit access to groups that require it. | Alert Share Names"
      when: wn11_00_000060_share_names.stdout_lines | select() | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have shares that non-system created. Please manually review those"
          - "shares listed below to make sure appropriate permissions are applied"
          - "{{ wn11_00_000060_share_names.stdout_lines | select() | list }}"

    - name: "MEDIUM | WN11-00-000060 | AUDIT | Non system-created file shares on a system must limit access to groups that require it. | Warn Count."
      when: wn11_00_000060_share_names.stdout_lines | select() | length > 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000060'

- name: "MEDIUM | WN11-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group."
  when:
    - wn11_00_000075
  tags:
    - WN11-00-000075
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253270r991589_rule
    - V-253270
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group. | Get Backup Operator users"
      ansible.windows.win_shell: get-localgroupmember -Name "Backup Operators" | Select-Object -Property Name | Format-Table -hidetableheaders
      changed_when: false
      failed_when: false
      register: wn11_00_000075_bo_members

    - name: "MEDIUM | WN11-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group. | Display Backup Operator users"
      when: wn11_00_000075_bo_members.stdout_lines | select() | list | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! Below are the users in the Backup Operators group. Please review accounts are appropriate."
          - "If the group contains no accounts, this is not a finding."
          - "If the group contains any accounts, the accounts must be specifically for backup functions."
          - "If the group contains any standard user accounts used for performing normal user tasks, this is a finding."
          - "{{ wn11_00_000075_bo_members.stdout_lines | select() | list }}"

    - name: "MEDIUM | WN11-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group. | Warn Count."
      when: wn11_00_000075_bo_members.stdout_lines | select() | list | length > 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000075'

- name: "MEDIUM | WN11-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 11 systems."
  when: wn11_00_000080
  tags:
    - WN11-00-000080
    - CAT2
    - CCI-002165
    - SRG-OS-000095-GPOS-00049
    - SV-253271r958702_rule
    - V-253271
    - NIST800-53R4_AC-3_4
  block:
    - name: "MEDIUM | WN11-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 11 systems. | Get Hyper-V group users"
      ansible.windows.win_shell: get-localgroupmember -Name "Hyper-V Administrators" | Select-Object -Property Name | Format-Table -hidetableheaders
      changed_when: false
      failed_when: false
      register: wn11_00_000080_hyperv_members

    - name: "MEDIUM | WN11-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 11 systems. | Display Hyper-V group users"
      when: wn11_00_000080_hyperv_members.stdout_lines | select() | list | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! Below are the users in the Hyper-V Administrators group, please remove any unnecessary accounts"
          - "{{ wn11_00_000080_hyperv_members.stdout_lines | select() | list }}"

    - name: "MEDIUM | WN11-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 11 systems. | Warn Count."
      when: wn11_00_000080_hyperv_members.stdout_lines | select() | list | length > 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000080'

- name: "MEDIUM | WN11-00-000090 | PATCH | Accounts must be configured to require password expiration."
  when: wn11_00_000090
  tags:
    - WN11-00-000090
    - CAT2
    - CCI-000199
    - SRG-OS-000076-GPOS-00044
    - SV-253273r1016425_rule
    - V-253273
    - NIST800-53_IA-5_1_d
    - NIST800-53A_IA-5_1.1_v
    - NIST800-53R4_IA-5_1_d
  block:
    - name: "MEDIUM | WN11-00-000090 | PATCH | Accounts must be configured to require password expiration. | Get list of PW Never Expire users"
      ansible.windows.win_shell: get-localuser | select Name, Enabled, PasswordExpires | Where-Object -Property Enabled -eq True | Where { $_.PasswordExpires -eq $null } | Select-Object -Property Name | Format-Table -hidetableheaders
      changed_when: false
      failed_when: false
      register: wn11_00_000090_neverexpire_passwords

    - name: "MEDIUM | WN11-00-000090 | PATCH | Accounts must be configured to require password expiration. | Set PW to Expire for PW Never Expire users"
      when:
        - wn11_00_000090_neverexpire_passwords.stdout_lines | select() | list | length > 0
        - win11stig_password_expires
      ansible.windows.win_user:
        name: "{{ item }}"
        password_never_expires: false
      with_items:
        - "{{ wn11_00_000090_neverexpire_passwords.stdout_lines | select() | list }}"

    - name: "MEDIUM | WN11-00-000090 | AUDIT | Accounts must be configured to require password expiration. | Display list of PW Never Expire users"
      when:
        - wn11_00_000090_neverexpire_passwords.stdout_lines | select() | list | length > 0
        - not win11stig_password_expires
      ansible.builtin.debug:
        msg:
          - "Warning!! You have some accounts that are set to never expire. Please review the below accounts and set an expiration"
          - "{{ wn11_00_000090_neverexpire_passwords.stdout_lines | select() | list }}"

    - name: "MEDIUM | WN11-00-000090 | AUDIT | Accounts must be configured to require password expiration. | Warn Count."
      when:
        - wn11_00_000090_neverexpire_passwords.stdout_lines | select() | list | length > 0
        - not win11stig_password_expires
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000090'

- name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements."
  when: wn11_00_000095
  tags:
    - WN11-00-000095
    - CAT2
    - CCI-002165
    - SRG-OS-000312-GPOS-00122
    - SV-253274r1016661_rule
    - V-253274
    - NIST800-53R4_AC-3_4
  block:
    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Retrieve ACL entries for C: using icacls"
      ansible.windows.win_shell: 'icacls C:\'
      changed_when: false
      failed_when: false
      register: wn11_00_000095_c_icacls_output

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Parse icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_c_icacls_lines: >-
          {{
            wn11_00_000095_c_icacls_output.stdout.splitlines() |
            select("search", "^(?!Successfully processed)") |
            select("search", "^(?!^$)") | list
          }}

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Remove leading drive letter from icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_c_normalized_lines: "{{ wn11_00_000095_c_icacls_lines | map('regex_replace', '^[cC]:\\\\\\s*', '') | list }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Remove all whitespace from icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_c_normalized_lines: "{{ wn11_00_000095_c_normalized_lines | map('regex_replace', '\\s+', '') | list }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Normalize expected ACL entries from vars"
      ansible.builtin.set_fact:
        wn11_00_000095_c_normalized_expected_acl: "{{ wn11_00_000095_c_normalized_expected_acl | default([]) + [ (item.IdentityReference | regex_replace('\\s+', '')) ~ ':' ~ (item.Permissions | regex_replace('\\s+', '')) ] }}"
      loop: "{{ win11stig_expected_c_acl }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Retrieve ACL entries for C:\\Program Files using icacls"
      ansible.windows.win_shell: 'icacls "C:\Program Files"'
      changed_when: false
      failed_when: false
      register: wn11_00_000095_programfiles_icacls_output

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Parse icacls output lines for Program Files"
      ansible.builtin.set_fact:
        wn11_00_000095_programfiles_icacls_lines: >-
          {{
            wn11_00_000095_programfiles_icacls_output.stdout.splitlines() |
            select("search", "^(?!Successfully processed)") |
            select("search", "^(?!^$)") | list
          }}

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Remove leading 'C:\\Program Files' from Program Files icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_programfiles_normalized_lines: "{{ wn11_00_000095_programfiles_icacls_lines | map('regex_replace', '^[cC]:\\\\Program Files\\\\?\\s*', '') | list }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Remove all whitespace from Program Files icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_programfiles_normalized_lines: "{{ wn11_00_000095_programfiles_normalized_lines | map('regex_replace', '\\s+', '') | list }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Normalize expected ACL entries for Program Files from vars"
      ansible.builtin.set_fact:
        wn11_00_000095_programfiles_normalized_expected_acl: "{{ wn11_00_000095_programfiles_normalized_expected_acl | default([]) + [ (item.IdentityReference | regex_replace('\\s+', '')) ~ ':' ~ (item.Permissions | regex_replace('\\s+', '')) ] }}"
      loop: "{{ win11stig_expected_programfiles_acl }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Retrieve ACL entries for C:\\Windows using icacls"
      ansible.windows.win_shell: 'icacls "C:\Windows"'
      changed_when: false
      failed_when: false
      register: wn11_00_000095_windows_icacls_output

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Parse icacls output lines for Windows"
      ansible.builtin.set_fact:
        wn11_00_000095_windows_icacls_lines: >-
          {{
            wn11_00_000095_windows_icacls_output.stdout.splitlines() |
            select("search", "^(?!Successfully processed)") |
            select("search", "^(?!^$)") | list
          }}

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Remove leading 'C:\\Windows' from Windows icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_windows_normalized_lines: "{{ wn11_00_000095_windows_icacls_lines | map('regex_replace', '^[cC]:\\\\Windows\\\\?\\s*', '') | list }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Remove all whitespace from Windows icacls output lines"
      ansible.builtin.set_fact:
        wn11_00_000095_windows_normalized_lines: "{{ wn11_00_000095_windows_normalized_lines | map('regex_replace', '\\s+', '') | list }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Normalize expected ACL entries for Windows from vars"
      ansible.builtin.set_fact:
        wn11_00_000095_windows_normalized_expected_acl: "{{ wn11_00_000095_windows_normalized_expected_acl | default([]) + [ (item.IdentityReference | regex_replace('\\s+', '')) ~ ':' ~ (item.Permissions | regex_replace('\\s+', '')) ] }}"
      loop: "{{ win11stig_expected_windows_acl }}"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Display ACL Compliance Results for C:, Program Files, and Windows"
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "            Windows ACL STIG Compliance Check Summary               "
          - "═══════════════════════════════════════════════════════════════════"
          - "C:"
          - "Expected ACL Entries:"
          - "{{ wn11_00_000095_c_normalized_expected_acl }}"
          - "Actual ACL Entries:"
          - "{{ wn11_00_000095_c_normalized_lines }}"
          - "C: Mismatches:"
          - "{{ (wn11_00_000095_c_normalized_expected_acl | difference(wn11_00_000095_c_normalized_lines)) if (wn11_00_000095_c_normalized_expected_acl | difference(wn11_00_000095_c_normalized_lines)) | length > 0 else 'None' }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - "C:\\Program Files"
          - "Expected ACL Entries:"
          - "{{ wn11_00_000095_programfiles_normalized_expected_acl }}"
          - "Actual ACL Entries:"
          - "{{ wn11_00_000095_programfiles_normalized_lines }}"
          - "C:\\Program Files Mismatches:"
          - "{{ (wn11_00_000095_programfiles_normalized_expected_acl | difference(wn11_00_000095_programfiles_normalized_lines)) if (wn11_00_000095_programfiles_normalized_expected_acl | difference(wn11_00_000095_programfiles_normalized_lines)) | length > 0 else 'None' }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - "C:\\Windows"
          - "Expected ACL Entries:"
          - "{{ wn11_00_000095_windows_normalized_expected_acl }}"
          - "Actual ACL Entries:"
          - "{{ wn11_00_000095_windows_normalized_lines }}"
          - "C:\\Windows Mismatches:"
          - "{{ (wn11_00_000095_windows_normalized_expected_acl | difference(wn11_00_000095_windows_normalized_lines)) if (wn11_00_000095_windows_normalized_expected_acl | difference(wn11_00_000095_windows_normalized_lines)) | length > 0 else 'None' }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"

    - name: "MEDIUM | WN11-00-000095 | AUDIT | Permissions for system files and directories must conform to minimum requirements. | Warn Count."
      when: >
        ((wn11_00_000095_windows_normalized_expected_acl | difference(wn11_00_000095_windows_normalized_lines)) | length > 0) or
        ((wn11_00_000095_programfiles_normalized_expected_acl | difference(wn11_00_000095_programfiles_normalized_lines)) | length > 0) or
        ((wn11_00_000095_c_normalized_expected_acl | difference(wn11_00_000095_c_normalized_lines)) | length > 0)
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000095'

- name: "MEDIUM | WN11-00-000105 | PATCH | Simple Network Management Protocol (SNMP) must not be installed on the system."
  when: wn11_00_000105
  tags:
    - WN11-00-000105
    - CAT2
    - CCI-000382
    - SRG-OS-000096-GPOS-00050
    - SV-253276r958480_rule
    - V-253276
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_iii
    - NIST800-53R4_CM-7_b
  block:
    - name: "MEDIUM | WN11-00-000105 | AUDIT | Simple Network Management Protocol (SNMP) must not be installed on the system. | Check if SNMP is installed via Windows Capability"
      ansible.windows.win_shell: |
        $feature = Get-WindowsCapability -Online | Where-Object Name -like "SNMP.Client*"
        if ($feature.State -eq "Installed") {
            Write-Output "SNMP Service is installed"
            exit 1
        } else {
            Write-Output "SNMP Service is NOT installed"
            exit 0
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000105_snmp_check

    - name: "MEDIUM | WN11-00-000105 | PATCH | Simple Network Management Protocol (SNMP) must not be installed on the system. | Remove SNMP Installation"
      when: "'SNMP Service is installed' in wn11_00_000105_snmp_check.stdout"
      ansible.windows.win_shell: Remove-WindowsCapability -Online -Name "SNMP.Client~~~~0.0.1.0"
      notify: Change_Requires_Reboot

    - name: "MEDIUM | WN11-00-000105 | PATCH | Simple Network Management Protocol (SNMP) must not be installed on the system. | Ensure SNMP service is stopped and disabled"
      ansible.windows.win_service:
        name: SNMP
        state: stopped
        start_mode: disabled
      failed_when: false

    - name: "MEDIUM | WN11-00-000105 | AUDIT | Simple Network Management Protocol (SNMP) must not be installed on the system. | Check if SNMP binary exists in System32"
      ansible.windows.win_shell: |
        if (Test-Path "C:\Windows\System32\snmp.exe") {
            Write-Output "SNMP binary found (Finding)"
            exit 1
        } else {
            Write-Output "SNMP binary NOT found"
            exit 0
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000105_snmp_binary_check

    - name: "MEDIUM | WN11-00-000105 | AUDIT | Simple Network Management Protocol (SNMP) must not be installed on the system. | Take ownership of SNMP file and grant permissions"
      when: "'SNMP binary found (Finding)' in wn11_00_000105_snmp_binary_check.stdout"
      ansible.windows.win_shell: |
        takeown /f "C:\Windows\System32\snmp.exe" /a
        icacls "C:\Windows\System32\snmp.exe" /grant Administrators:F /c /l /q
      changed_when: false
      failed_when: false
      register: wn11_00_000105_snmp_permission_fix

    - name: "MEDIUM | WN11-00-000105 | PATCH | Simple Network Management Protocol (SNMP) must not be installed on the system. | Remove SNMP binary if found"
      when:
        - "'SNMP binary found (Finding)' in wn11_00_000105_snmp_binary_check.stdout"
        - "'SUCCESS:' in wn11_00_000105_snmp_permission_fix.stdout"
      ansible.windows.win_file:
        path: "C:\\Windows\\System32\\snmp.exe"
        state: absent

- name: "MEDIUM | WN11-00-000110 | PATCH | Simple TCP/IP Services must not be installed on the system."
  when: wn11_00_000110
  tags:
    - WN11-00-000110
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253277r958478_rule
    - V-253277
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_optional_feature:
    name: SimpleTCP
    state: absent

- name: "MEDIUM | WN11-00-000115 | PATCH | The Telnet Client must not be installed on the system."
  when: wn11_00_000115
  tags:
    - WN11-00-000115
    - CAT2
    - CCI-000382
    - SRG-OS-000096-GPOS-00050
    - SV-253278r958480_rule
    - V-253278
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_optional_feature:
    name: TelnetClient
    state: absent

- name: "MEDIUM | WN11-00-000120 | PATCH | The TFTP Client must not be installed on the system."
  when: wn11_00_000120
  tags:
    - WN11-00-000120
    - CAT2
    - CCI-000382
    - SRG-OS-000096-GPOS-00050
    - SV-253279r958480_rule
    - V-253279
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_optional_feature:
    name: TFTP
    state: absent

- name: "MEDIUM | WN11-00-000130 | PATCH | Software certificate installation files must be removed from Windows 11."
  when:
    - wn11_00_000130
    - win11stig_lengthy_search
  tags:
    - WN11-00-000130
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253280r991589_rule
    - V-253280
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 11. | Get Drive Letters"
      ansible.windows.win_shell: Get-Volume | Where-Object { $_.DriveType -eq 'Fixed' -and $_.DriveLetter } | Select-Object -ExpandProperty DriveLetter
      changed_when: false
      failed_when: false
      register: wn11_00_000130_drive_letters

    - name: "MEDIUM | WN11-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 11. | Get Drive Letters"
      ansible.builtin.set_fact:
        wn11_00_000130_drive_letters_list: "{{ wn11_00_000130_drive_letters.stdout_lines }}"

    - name: "MEDIUM | WN11-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 11. | Search for files"
      ansible.windows.win_find:
        paths: '{{ item }}:\\'
        recurse: true
        patterns: ['*.p12', '*.pfx']
      loop: "{{ wn11_00_000130_drive_letters_list }}"
      register: wn11_00_000130_files

    - name: "MEDIUM | WN11-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 11. | Filter out excluded certificate files"
      ansible.builtin.set_fact:
        wn11_00_000130_filtered_certificate_files: >-
          {{ wn11_00_000130_files.results | map(attribute='files') | flatten | rejectattr('path', 'search', win11stig_certificate_exclusion_paths | join('|')) | list }}

    - name: "MEDIUM | WN11-00-000130 | PATCH | Software certificate installation files must be removed from Windows 11. | Remove unauthorized certificate installation files"
      changed_when: wn11_00_000130_filtered_certificate_files | length > 0
      when:
        - win11stig_auto_remediate_files
        - wn11_00_000130_filtered_certificate_files | length > 0
      ansible.windows.win_file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ wn11_00_000130_filtered_certificate_files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: "MEDIUM | WN11-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 11. | Alert on unauthorized certificate installation files"
      when: not win11stig_auto_remediate_files
      ansible.builtin.debug:
        msg:
          - "Warning!! You have unauthorized .p12 and/or .pfx files on your system."
          - "Please review and remove the following files manually or set"
          - "win11stig_auto_remediate_files: true to remove the files automatically."
          - "{{ filtered_certificate_files | map(attribute='path') | list }}"

    - name: "MEDIUM | WN11-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 11. | Warn Count."
      when: not win11stig_auto_remediate_files
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000130'

- name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system."
  when: wn11_00_000135
  tags:
    - WN11-00-000135
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253281r991589_rule
    - V-253281
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Initialize firewall detection variables"
      ansible.builtin.set_fact:
        wn11_00_000135_firewall_installed: false
        wn11_00_000135_firewall_name: []

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Check for third-party firewalls (SecurityCenter2)"
      ansible.windows.win_shell: |
        $firewall = Get-CimInstance -Namespace root\SecurityCenter2 -ClassName FirewallProduct | ConvertTo-Json -Compress
        if ($firewall) { $firewall } else { '[]' }
      changed_when: false
      failed_when: false
      register: wn11_00_000135_firewall_product_check

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Check if Windows Defender Firewall is enabled"
      ansible.windows.win_shell: |
        Get-NetFirewallProfile | Select-Object Name, Enabled | ConvertTo-Json -Compress
      changed_when: false
      failed_when: false
      register: wn11_00_000135_defender_firewall_check

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Set fact if a firewall is installed"
      ansible.builtin.set_fact:
        wn11_00_000135_firewall_installed: >-
          {{
            (wn11_00_000135_firewall_product_check.stdout | from_json | length > 0) or
            ('"Enabled":1' in wn11_00_000135_defender_firewall_check.stdout)
          }}
        wn11_00_000135_firewall_name: >-
          {{
            (wn11_00_000135_firewall_product_check.stdout | from_json | map(attribute='displayName') | list)
            + (['Windows Defender Firewall'] if '"Enabled":1' in wn11_00_000135_defender_firewall_check.stdout else [])
          }}

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Check if third-party firewall is running (SecurityCenter2)"
      when: wn11_00_000135_firewall_installed | bool
      ansible.windows.win_shell: |
        $firewall = Get-CimInstance -Namespace root\SecurityCenter2 -ClassName FirewallProduct
        if ($firewall -and $firewall.enabled -eq 1) {
          Write-Output "Running"
        } else {
          Write-Output "Not Running"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000135_third_party_firewall_running_status

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Check if Windows Defender Firewall is running"
      when: "'Windows Defender Firewall' in wn11_00_000135_firewall_name"
      ansible.windows.win_shell: |
        $profiles = Get-NetFirewallProfile | Where-Object { $_.Enabled -eq "True" }
        if ($profiles) {
          Write-Output "Running"
        } else {
          Write-Output "Not Running"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000135_defender_firewall_running_status

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Set fact if a firewall is running"
      ansible.builtin.set_fact:
        wn11_00_000135_firewall_running: >-
          {{
            ('Running' in wn11_00_000135_third_party_firewall_running_status.stdout | default(''))
            or ('Running' in wn11_00_000135_defender_firewall_running_status.stdout | default(''))
          }}

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Check Windows Defender Firewall profiles"
      ansible.windows.win_shell: |
        Get-NetFirewallProfile | Select-Object Name, Enabled | ConvertTo-Json -Compress
      changed_when: false
      failed_when: false
      register: wn11_00_000135_defender_profiles

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Parse Windows Defender Firewall profiles"
      ansible.builtin.set_fact:
        wn11_00_000135_defender_profiles_json: "{{ wn11_00_000135_defender_profiles.stdout | from_json }}"

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Extract enabled Windows Defender Firewall profiles"
      ansible.builtin.set_fact:
        wn11_00_000135_enabled_profiles: >-
          {{ wn11_00_000135_defender_profiles_json
             | selectattr('Enabled', 'equalto', 1)
             | map(attribute='Name')
             | list }}

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Check for disabled Windows Defender firewall profiles"
      ansible.builtin.set_fact:
        wn11_00_000135_disabled_profiles: >-
          {{ wn11_00_000135_defender_profiles_json
             | selectattr('Enabled', 'equalto', 0)
             | map(attribute='Name')
             | list }}

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Warning Windows Defender Firewall Profile Status"
      when: wn11_00_000135_disabled_profiles | length > 0
      ansible.builtin.debug:
        msg:
          - "══════════════════════════════════════════════════════════════════════"
          - "                 Windows Defender Firewall Profile Status              "
          - "══════════════════════════════════════════════════════════════════════"
          - "Warning!! One or more Windows Defender Firewall profiles are DISABLED!"
          - "Verify profiles (Domain, Private, Public) are properly Enabled"
          - "and configured to comply with STIG."
          - "----------------------------------------------------------------------"
          - " Domain Profile:  {{ 'Enabled' if 'Domain' in wn11_00_000135_enabled_profiles else 'Disabled' }}"
          - " Private Profile: {{ 'Enabled' if 'Private' in wn11_00_000135_enabled_profiles else 'Disabled' }}"
          - " Public Profile:  {{ 'Enabled' if 'Public' in wn11_00_000135_enabled_profiles else 'Disabled' }}"
          - "----------------------------------------------------------------------"
          - "If any profile is Disabled, notate why and document."
          - "══════════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Warn if a firewall is installed but not running"
      when: wn11_00_000135_firewall_installed and not wn11_00_000135_firewall_running | default(false)
      ansible.builtin.debug:
        msg:
          - "Warning!! A firewall is installed but NOT currently running!"
          - "Detected Firewall: {{ wn11_00_000135_firewall_name }}"
          - "Ensure that the firewall is enabled and actively protecting the system."

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Warn if no firewall is detected"
      when:
        - not (wn11_00_000135_firewall_installed | default(false))
        - not (wn11_00_000135_firewall_running | default(false))
      ansible.builtin.debug:
        msg:
          - "Warning!! No active firewall detected!"
          - "Install and enable a host-based firewall to comply with STIG requirements."

    - name: "MEDIUM | WN11-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Trigger warning facts"
      when: >-
        (not wn11_00_000135_firewall_installed) or
        (wn11_00_000135_firewall_installed and not wn11_00_000135_firewall_running | default(false)) or
        (wn11_00_000135_disabled_profiles | length > 0)
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000135'

- name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts."
  when:
    - wn11_00_000140
    - discovered_domain_joined
  tags:
    - WN11-00-000140
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00232
    - SV-253282r991593_rule
    - V-253282
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Check if any firewall product is installed"
      ansible.windows.win_shell: (Get-CimInstance -Namespace root\SecurityCenter2 -ClassName FirewallProduct) | ConvertTo-Json
      changed_when: false
      failed_when: false
      register: wn11_00_000140_firewall_product_check

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Set fact if a firewall product is installed and store name"
      when: wn11_00_000140_firewall_product_check.stdout | default('') | trim != ''
      ansible.builtin.set_fact:
        wn11_00_000140_firewall_installed: "{{ wn11_00_000140_firewall_product_check.stdout | default('') | trim != '' }}"
        wn11_00_000140_firewall_name: "{{ wn11_00_000140_firewall_product_check.stdout | from_json | map(attribute='displayName') | list }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Check if installed firewall is running"
      when: wn11_00_000140_firewall_installed
      ansible.windows.win_shell: |
        $firewall = Get-CimInstance -Namespace root\SecurityCenter2 -ClassName FirewallProduct
        if ($firewall -and $firewall.enabled -eq 1) {
          Write-Output "Running"
        } else {
          Write-Output "Not Running"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000140_firewall_running_status

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Set fact if a firewall is running"
      when: wn11_00_000140_firewall_installed
      ansible.builtin.set_fact:
        wn11_00_000140_firewall_running: "{{ wn11_00_000140_firewall_running_status.stdout | trim == 'Running' }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Get Windows Defender Firewall inbound rules"
      when: "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
      ansible.windows.win_shell: Get-NetFirewallRule -Direction Inbound -Enabled True | Select-Object Name, DisplayName, Enabled, Direction, Action, Profile, RemoteAddress | ConvertTo-Json -Compress
      changed_when: false
      failed_when: false
      register: wn11_00_000140_inbound_firewall_rules

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Set fact for Windows Defender inbound rules"
      when:
        - wn11_00_000140_inbound_firewall_rules.stdout | default('') | trim != ''
        - "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
      ansible.builtin.set_fact:
        wn11_00_000140_active_inbound_rules: "{{ wn11_00_000140_inbound_firewall_rules.stdout | from_json }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Ensure authorized remote management hosts are defined"
      when: "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
      ansible.builtin.set_fact:
        win11stig_authorized_remote_management_hosts: "{{ win11stig_authorized_remote_management_hosts | default([]) }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Identify unauthorized inbound rules"
      when:
        - "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
        - wn11_00_000140_active_inbound_rules | length > 0
        - win11stig_authorized_remote_management_hosts | length > 0
      ansible.builtin.set_fact:
        wn11_00_000140_unauthorized_inbound_rules: "{{ wn11_00_000140_active_inbound_rules | rejectattr('RemoteAddress', 'search', win11stig_authorized_remote_management_hosts | join('|')) | list }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Set fact to store all inbound rules for manual review if no authorized hosts are defined"
      when:
        - "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
        - wn11_00_000140_active_inbound_rules | length > 0
        - win11stig_authorized_remote_management_hosts | length == 0
      ansible.builtin.set_fact:
        wn11_00_000140_all_inbound_rules_for_review: "{{ wn11_00_000140_active_inbound_rules }}"

    # Auto Remediate
    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Remove unauthorized inbound firewall rules auto remediation"
      when:
        - win11stig_remove_unauthorized_hosts | default(false)
        - wn11_00_000140_unauthorized_inbound_rules | length > 0
      ansible.windows.win_shell: |
        {% for rule in wn11_00_000140_unauthorized_inbound_rules %}
        Remove-NetFirewallRule -Name "{{ rule.Name }}"
        {% endfor %}
      changed_when: true
      failed_when: false
      register: wn11_00_000140_fw_remediation

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Log remediated firewall rules"
      when:
        - win11stig_auto_remediate | default(false)
        - wn11_00_000140_fw_remediation is changed
      ansible.builtin.debug:
        msg:
          - "Warning!! Unauthorized inbound rules have been removed."
          - "Auto-remediation is !!!! ENABLED !!!! by setting win11stig_remove_unauthorized_hosts"
          - to true. These rules were deleted:"
          - "{{ wn11_00_000140_unauthorized_inbound_rules }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Warning!! Unauthorized inbound firewall rules detected"
      when:
        - "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
        - win11stig_authorized_remote_management_hosts | length > 0
        - wn11_00_000140_unauthorized_inbound_rules | length > 0
        - not win11stig_remove_unauthorized_hosts
      ansible.builtin.debug:
        msg:
          - "Warning!! Unauthorized inbound firewall rules detected!"
          - "These rules allow remote access from unauthorized IPs."
          - "Please check you variable settings to make sure they are correct"
          - "or remove those hosts from the firewall rules."
          - "Unauthorized Rules:"
          - "{{ wn11_00_000140_unauthorized_inbound_rules }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Displaying all inbound firewall rules for manual review"
      when:
        - "'Windows Defender Firewall' in wn11_00_000140_firewall_name"
        - win11stig_authorized_remote_management_hosts | length == 0
        - wn11_00_000140_all_inbound_rules_for_review | length > 0
        - not win11stig_remove_unauthorized_hosts
      ansible.builtin.debug:
        msg:
          - "Warning!! No authorized remote management hosts are defined in"
          - "win11stig_authorized_remote_management_hosts."
          - "Displaying all inbound firewall rules for manual review:"
          - "{{ wn11_00_000140_all_inbound_rules_for_review }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Message if a third-party firewall is used"
      when:
        - wn11_00_000140_firewall_installed
        - "'Windows Defender Firewall' not in wn11_00_000140_firewall_name"
        - not win11stig_remove_unauthorized_hosts
      ansible.builtin.debug:
        msg:
          - "Warning!! A third-party firewall is in use."
          - "If a third-party firewall is used, configure inbound exceptions to ** only include authorized remote management hosts **."
          - "Detected Firewall: {{ wn11_00_000140_firewall_name }}"

    - name: "MEDIUM | WN11-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 11 domain workstations must only allow authorized remote management hosts. | Warn Count."
      when: >-
        (win11stig_auto_remediate | default(false) and wn11_00_000140_fw_remediation is changed) or
        ("Windows Defender Firewall" in wn11_00_000140_firewall_name and
         win11stig_authorized_remote_management_hosts | length > 0 and
         wn11_00_000140_unauthorized_inbound_rules | length > 0 and
         not win11stig_remove_unauthorized_hosts) or
        ("Windows Defender Firewall" in wn11_00_000140_firewall_name and
         win11stig_authorized_remote_management_hosts | length == 0 and
         wn11_00_000140_all_inbound_rules_for_review | length > 0 and
         not win11stig_remove_unauthorized_hosts) or
        (wn11_00_000140_firewall_installed and
         "Windows Defender Firewall" not in wn11_00_000140_firewall_name and
         not win11stig_remove_unauthorized_hosts)
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000140'

- name: "MEDIUM | WN11-00-000155 | PATCH | The Windows PowerShell 2.0 feature must be disabled on the system."
  when: wn11_00_000155
  tags:
    - WN11-00-000155
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253285r958478_rule
    - V-253285
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_optional_feature:
    name: MicrosoftWindowsPowerShellV2Root
    state: absent

- name: "MEDIUM | WN11-00-000160 | PATCH | The Server Message Block (SMB) v1 protocol must be disabled on the system."
  when: wn11_00_000160
  tags:
    - WN11-00-000160
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253286r958478_rule
    - V-253286
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_optional_feature:
    name: SMB1Protocol
    state: absent

- name: "MEDIUM | WN11-00-000165 | PATCH | The Server Message Block (SMB) v1 protocol must be disabled on the SMB server."
  when: wn11_00_000165
  tags:
    - WN11-00-000165
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253287r958478_rule
    - V-253287
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
    name: SMB1
    data: 0
    type: dword

- name: "MEDIUM | WN11-00-000170 | PATCH | The Server Message Block (SMB) v1 protocol must be disabled on the SMB client."
  when: wn11_00_000170
  tags:
    - WN11-00-000170
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253288r958478_rule
    - V-253288
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\mrxsmb10
    name: Start
    data: 4
    type: dword
  notify: Change_Requires_Reboot

# This service can't be stopped manually (through automation or manually through Services)
# You need to disable then reboot Windows for the service to be stopped
- name: "MEDIUM | WN11-00-000175 | PATCH | The Secondary Logon service must be disabled on Windows 11."
  when: wn11_00_000175
  tags:
    - WN11-00-000175
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253289r958478_rule
    - V-253289
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_service:
    name: seclogon
    start_mode: disabled
  notify: Change_Requires_Reboot

- name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11."
  when: wn11_00_000190
  tags:
    - WN11-00-000190
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253290r991589_rule
    - V-253290
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11. | Check For Orphaned User Accounts."
      ansible.windows.win_shell: Get-WmiObject -Class Win32_UserAccount | Where-Object { $_.SID -match 'S-1-' } | Select-Object Name, SID, Domain | ConvertTo-Json -Compress
      changed_when: false
      failed_when: false
      register: wn11_00_000190_orphaned_user_accounts

    - name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11. | Check For Orphaned Group Accounts."
      ansible.windows.win_shell: Get-WmiObject -Class Win32_Group | Where-Object { $_.SID -match 'S-1-' } | Select-Object Name, SID, Domain | ConvertTo-Json -Compress
      changed_when: false
      failed_when: false
      register: wn11_00_000190_orphaned_group_accounts

    - name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11. | Set fact for orphaned user accounts"
      when: wn11_00_000190_orphaned_user_accounts.stdout | default('') | trim != ''
      ansible.builtin.set_fact:
        wn11_00_000190_orphaned_user_accounts_list: "{{ wn11_00_000190_orphaned_user_accounts.stdout | from_json }}"

    - name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11. | Set fact for orphaned group accounts"
      when: wn11_00_000190_orphaned_group_accounts.stdout | default('') | trim != ''
      ansible.builtin.set_fact:
        wn11_00_000190_orphaned_group_accounts_list: "{{ wn11_00_000190_orphaned_group_accounts.stdout | from_json }}"

    - name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11. | Warning Message"
      when: wn11_00_000190_orphaned_user_accounts_list | length > 0 or wn11_00_000190_orphaned_group_accounts_list | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! Orphaned SIDs detected in User Rights Assignments."
          - "These SIDs belong to deleted or invalid accounts and should be removed."
          - "Note: Valid domain accounts or groups may also show up as unresolved SIDs if a connection"
          - "to the domain cannot be established for some reason."
          - "-------------------------------------------------------------------------"
          - "Orphaned User Accounts:"
          - "{{ wn11_00_000190_orphaned_user_accounts_list | default('None Found') }}"
          - "-------------------------------------------------------------------------"
          - "Orphaned Group Accounts:"
          - "{{ wn11_00_000190_orphaned_group_accounts_list | default('None Found') }}"
          - "-------------------------------------------------------------------------"

    - name: "MEDIUM | WN11-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 11. | Warn Count."
      when: wn11_00_000190_orphaned_user_accounts_list | length > 0 or wn11_00_000190_orphaned_group_accounts_list | length > 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000190'

- name: "MEDIUM | WN11-00-000210 | PATCH | Bluetooth must be turned off unless approved by the organization."
  notify: Change_Requires_Reboot
  when: wn11_00_000210
  tags:
    - WN11-00-000210
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253291r958478_rule
    - V-253291
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  block:
    - name: "MEDIUM | WN11-00-000210 | PATCH | Bluetooth must be turned off unless approved by the organization. | Disable BT in the registry"
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\ActionCenter\QuickActions\All\SystemSettings_Device_BluetoothQuickAction
        name: Type
        data: 1
        type: dword

    - name: "MEDIUM | WN11-00-000210 | PATCH | Bluetooth must be turned off unless approved by the organization. | Disable BT service"
      ansible.windows.win_service:
        name: bthserv
        state: stopped
        start_mode: disabled

- name: "MEDIUM | WN11-00-000220 | AUDIT | Bluetooth must be turned off when not in use."
  when: wn11_00_000220
  tags:
    - WN11-00-000220
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253292r958478_rule
    - V-253292
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  block:
    - name: "MEDIUM | WN11-00-000220 | AUDIT | Bluetooth must be turned off when not in use. | Check if Bluetooth is enabled"
      ansible.windows.win_shell: |
        $btStatus = Get-PnpDevice -Class Bluetooth | Where-Object { $_.Status -eq 'OK' }
        if ($btStatus) {
          Write-Output "Bluetooth Enabled"
        } else {
          Write-Output "Bluetooth Disabled"
        }
      changed_when: false
      failed_when: false
      register: wn11_00_000210_bluetooth_status

    - name: "MEDIUM | WN11-00-000220 | AUDIT | Bluetooth must be turned off when not in use. | Set fact for Bluetooth status"
      ansible.builtin.set_fact:
        wn11_00_000210_bluetooth_enabled: "{{ 'Bluetooth Enabled' in wn11_00_000210_bluetooth_status.stdout }}"

    - name: "MEDIUM | WN11-00-000220 | AUDIT | Bluetooth must be turned off when not in use. | Bluetooth security policy is not properly enforced"
      when: wn11_00_000210_bluetooth_enabled
      ansible.builtin.debug:
        msg:
          - "Warning!! Bluetooth security policy is not properly enforced!"
          - "Bluetooth can allow rogue devices to communicate with the system, posing a security risk."
          - "Ensure Bluetooth radios are turned off when not in use."
          - "The organization must have a policy in place to regulate Bluetooth usage and train personnel on proper security practices."
          - "If no such policy exists, this is a finding."
          - "-------------------------------------------------------------------------"
          - "Recommended Action:"
          - "1. Disable Bluetooth when not required."
          - "2. Implement a formal policy governing Bluetooth usage."
          - "3. Conduct training to educate personnel on Bluetooth security risks."
          - "-------------------------------------------------------------------------"

    - name: "MEDIUM | WN11-00-000220 | AUDIT | Bluetooth must be turned off when not in use. | Warn Count."
      when: wn11_00_000210_bluetooth_enabled
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000210'

- name: "MEDIUM | WN11-00-000230 | PATCH | The system must notify the user when a Bluetooth device attempts to connect."
  when: wn11_00_000230
  tags:
    - WN11-00-000230
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253293r991589_rule
    - V-253293
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Bluetooth
    name: AcceptIncomingRequests
    data: 1
    type: dword

- name: "MEDIUM | WN11-00-000250 | PATCH | Windows 11 non-persistent VM sessions should not exceed 24 hours."
  when:
    - wn11_00_000250
    - discovered_vdi_non_persistent | default(false) or discovered_vdi_persistent
  tags:
    - WN11-00-000250
    - CAT2
    - CCI-001199
    - SRG-OS-000185-GPOS-00079
    - SV-253295r958552_rule
    - V-253295
    - NIST800-53_SC-28
    - NIST800-53A_SC-28.1
    - NIST800-53R4_SC-28
  block:
    - name: "MEDIUM | WN11-00-000250 | PATCH | Windows 11 non-persistent VM sessions should not exceed 24 hours. | Set session timeout set"
      when:
        - win11stig_non_persistent_max_session_timeout | int <= 86400000
        - win11stig_non_persistent_max_session_timeout | length > 0
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Terminal Services
        name: "{{ item.name }}"
        data: "{{ win11stig_non_persistent_max_session_timeout }}"
        type: dword
      loop:
        - { name: "MaxDisconnectionTime" }
        - { name: "MaxIdleTime" }
        - { name: "MaxSessionTime" }
      notify: Change_Requires_Reboot

    - name: "MEDIUM | WN11-00-000250 | AUDIT | Windows 11 non-persistent VM sessions should not exceed 24 hours. | Warning Message"
      when:
        - wn11_00_000250_session_timeout_value | int > 86400000
        - win11stig_non_persistent_max_session_timeout | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have invalid setting for win11stig_non_persistent_max_session_timeout please"
          - "make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-00-000250 | AUDIT | Windows 11 non-persistent VM sessions should not exceed 24 hours. | Manual Check."
      when: win11stig_non_persistent_max_session_timeout | length == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! Verify there is a documented policy or procedure in place that nonpersistent VM"
          - "sessions do not exceed 24 hours. If the system is NOT a nonpersistent VM, this is Not Applicable."
          - "For Azure Virtual Desktop (AVD) implementations with no data at rest, this is Not Applicable."
          - "If there is no such documented policy or procedure in place, this is a finding."
          - "To remediate automatically set a value in win11stig_non_persistent_max_session_timeout."

    - name: "MEDIUM | WN11-00-000250 | AUDIT | Windows 11 non-persistent VM sessions should not exceed 24 hours. | Warn Count."
      when: wn11_00_000250_session_timeout_value | int > 86400000 or win11stig_non_persistent_max_session_timeout | length == 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000250'

# "-------------------------------------------------------------------------"
# Controls wn11_ac_000005, wn11_ac_000010, and wn11_ac_000015 need to be in a different order for cloud based systems (AWS, Azure, etc.) vs non-cloud systems (VMWare, VirtualBox, etc.)
# The task below loads the control group in the correct order for cloud based systems
# "-------------------------------------------------------------------------"
- name: "CAT2 Tasks WN11-AC-000010, WN11-AC-000005, and WN11-AC-000015"
  ansible.builtin.import_tasks: cat2_cloud_lockout_order.yml
  when: discovered_cloud_based_system
  tags:
    - cat2_cloud_lockout_order

- name: "MEDIUM | WN11-AC-000010 | PATCH | The number of allowed bad logon attempts must be configured to 3 or less."
  when:
    - discovered_cloud_based_system
    - wn11_ac_000010
  tags:
    - WN11-AC-000010
    - CAT2
    - CCI-000044
    - SRG-OS-000021-GPOS-00005
    - SV-253298r958388_rule
    - V-253298
    - NIST800-53_AC-7_a
    - NIST800-53A_AC-7.1_ii
    - NIST800-53R4_AC-7_a
  block:
    - name: "MEDIUM | WN11-AC-000010 | PATCH | The number of allowed bad logon attempts must be configured to 3 or less. | Set Variable"
      when:
        - win11stig_bad_login_lockout_count <= 3
        - win11stig_bad_login_lockout_count > 0
      community.windows.win_security_policy:
        section: System Access
        key: LockoutBadCount
        value: "{{ win11stig_bad_login_lockout_count }}"

    - name: "MEDIUM | WN11-AC-000010 | AUDIT | The number of allowed bad logon attempts must be configured to 3 or less. | Verify Variable Not 0 or more then 3 warning."
      when: win11stig_bad_login_lockout_count > 3 or win11stig_bad_login_lockout_count == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of attempts set for win11stig_bad_login_lockout_count. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AC-000010 | AUDIT | The number of allowed bad logon attempts must be configured to 3 or less. | Set warning count."
      when: win11stig_bad_login_lockout_count > 3 or win11stig_bad_login_lockout_count == 0
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000010'

- name: "MEDIUM | WN11-AC-000015 | PATCH | The period of time before the bad logon counter is reset must be configured to 15 minutes."
  when:
    - discovered_cloud_based_system
    - wn11_ac_000015
  tags:
    - WN11-AC-000015
    - CAT2
    - CCI-000044
    - SRG-OS-000021-GPOS-00005
    - SV-253299r958388_rule
    - V-253299
    - NIST800-53_AC-7_a
    - NIST800-53A_AC-7.1_ii
    - NIST800-53R4_AC-7_a
  # The Lockout Duration must be greater or equal to the Reset Account Lockout counter.
  block:
    - name: "MEDIUM | WN11-AC-000015 | PATCH | The period of time before the bad logon counter is reset must be configured to 15 minutes."
      when:
        - win11stig_account_lockout_counter_reset >= 15
        - win11stig_account_lockout_counter_reset <= win11stig_account_lockout_duration
      community.windows.win_security_policy:
        section: System Access
        key: ResetLockoutCount
        value: "{{ win11stig_account_lockout_counter_reset }}"

    - name: "MEDIUM | WN11-AC-000015 | AUDIT | The period of time before the bad logon counter is reset must be configured to 15 minutes. | Verify variable set to 15 or more minutes warning."
      when: win11stig_account_lockout_counter_reset > win11stig_account_lockout_duration or win11stig_account_lockout_counter_reset < 15
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of minutes set for win11stig_account_lockout_counter_reset. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AC-000015 | AUDIT | The period of time before the bad logon counter is reset must be configured to 15 minutes. | Set warning count."
      when: win11stig_account_lockout_counter_reset > win11stig_account_lockout_duration or win11stig_account_lockout_counter_reset < 15
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000015'

- name: "MEDIUM | WN11-AC-000005 | PATCH | Windows 11 account lockout duration must be configured to 15 minutes or greater."
  when:
    - discovered_cloud_based_system
    - wn11_ac_000005
  tags:
    - WN11-AC-000005
    - CAT2
    - CCI-002238
    - SRG-OS-000329-GPOS-00128
    - SV-253297r958736_rule
    - V-253297
    - NIST800-53_AC-7_b
  block:
    - name: "MEDIUM | WN11-AC-000005 | PATCH | Windows 11 account lockout duration must be configured to 15 minutes or greater."
      when: win11stig_account_lockout_duration >= 15 or win11stig_account_lockout_duration == 0
      community.windows.win_security_policy:
        section: System Access
        key: LockoutDuration
        value: "{{ win11stig_account_lockout_duration }}"

    - name: "MEDIUM | WN11-AC-000005 | AUDIT | Windows 11 account lockout duration must be configured to 15 minutes or greater. | Verify variable set to 15 or more minutes warning."
      when: win11stig_account_lockout_duration < 15 and win11stig_account_lockout_duration != 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of minutes set for win11stig_account_lockout_duration please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AC-000005 | AUDIT | Windows 11 account lockout duration must be configured to 15 minutes or greater. | Set warning count."
      when: win11stig_account_lockout_duration < 15 and win11stig_account_lockout_duration != 0
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000005'

- name: "MEDIUM | WN11-AC-000020 | PATCH | The password history must be configured to 24 passwords remembered."
  when: wn11_ac_000020
  tags:
    - WN11-AC-000020
    - CAT2
    - CCI-004061
    - SRG-OS-000077-GPOS-00045
    - SV-253300r1000103_rule
    - V-253300
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "MEDIUM | WN11-AC-000020 | PATCH | The password history must be configured to 24 passwords remembered. | Set Variable."
      when: win11stig_max_passwords_saved == 24
      community.windows.win_security_policy:
        section: System Access
        key: PasswordHistorySize
        value: "{{ win11stig_max_passwords_saved }}"

    - name: "MEDIUM | WN11-AC-000020 | AUDIT | The password history must be configured to 24 passwords remembered. | Check for more then 24 saved passwords warning."
      when: win11stig_max_passwords_saved > 24 or win11stig_max_passwords_saved <= 23
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of maximum passwords set in win11stig_max_passwords_saved, please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AC-000020 | AUDIT | The password history must be configured to 24 passwords remembered. | Set warning count"
      when: win11stig_max_passwords_saved > 24 or win11stig_max_passwords_saved <= 23
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000020'

- name: "MEDIUM | WN11-AC-000025 | PATCH | The maximum password age must be configured to 60 days or less."
  when: wn11_ac_000025
  tags:
    - WN11-AC-000025
    - CAT2
    - CCI-000199
    - SRG-OS-000076-GPOS-00044
    - SV-253301r1016427_rule
    - V-253301
    - NIST800-53_IA-5_1_d
    - NIST800-53A_IA-5_1.1_v
    - NIST800-53R4_IA-5_1_d
  block:
    - name: "MEDIUM | WN11-AC-000025 | PATCH | The maximum password age must be configured to 60 days or less. | Configure Variable Set"
      when:
        - win11stig_maximum_password_age <= 60
        - win11stig_maximum_password_age > 0
      community.windows.win_security_policy:
        section: System Access
        key: MaximumPasswordAge
        value: "{{ win11stig_maximum_password_age }}"

    - name: "MEDIUM | WN11-AC-000025 | AUDIT | The maximum password age must be configured to 60 days or less. | Warning check for maximum password age time."
      when: win11stig_maximum_password_age > 60 or win11stig_maximum_password_age == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid age set for win11stig_maximum_password_age, please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AC-000025 | AUDIT | The maximum password age must be configured to 60 days or less. | Set warning count."
      when: win11stig_maximum_password_age > 60 or win11stig_maximum_password_age == 0
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000025'

- name: "MEDIUM | WN11-AC-000030 | PATCH | The minimum password age must be configured to at least 1 day."
  when: wn11_ac_000030
  tags:
    - WN11-AC-000030
    - CAT2
    - CCI-000198
    - SRG-OS-000075-GPOS-00043
    - SV-253302r1016428_rule
    - V-253302
    - NIST800-53_IA-5_1_d
    - NIST800-53A_IA-5_1.1_v
    - NIST800-53R4_IA-5_1_d
  block:
    - name: "MEDIUM | WN11-AC-000030 | PATCH | The minimum password age must be configured to at least 1 day. | Set Variable"
      when: win11stig_minimum_password_age <= 999 or win11stig_minimum_password_age > 0
      community.windows.win_security_policy:
        section: System Access
        key: MinimumPasswordAge
        value: "{{ win11stig_minimum_password_age }}"

    - name: "MEDIUM | WN11-AC-000030 | PATCH | The minimum password age must be configured to at least 1 day. | Warning check for minimim password age."
      when: win11stig_minimum_password_age > 999 or win11stig_minimum_password_age == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid age set for win11stig_minimum_password_age, please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AC-000030 | PATCH | The minimum password age must be configured to at least 1 day. | Set warning count."
      when: win11stig_minimum_password_age > 999 or win11stig_minimum_password_age == 0
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000030'

- name: "MEDIUM | WN11-AC-000035 | PATCH | Passwords must, at a minimum, be 14 characters."
  when: wn11_ac_000035
  tags:
    - WN11-AC-000035
    - CAT2
    - CCI-000205
    - SRG-OS-000078-GPOS-00046
    - SV-253303r1016429_rule
    - V-253303
    - NIST800-53_IA-5_1_a
    - NIST800-53A_IA-5_1.1_i
    - NIST800-53R4_IA-5_1_a
  block:
    - name: "MEDIUM | WN11-AC-000035 | PATCH | Passwords must, at a minimum, be 14 characters. | Set Variable"
      when: win11stig_minimum_password_length >= 14
      community.windows.win_security_policy:
        section: System Access
        key: MinimumPasswordLength
        value: "{{ win11stig_minimum_password_length }}"

    - name: "MEDIUM | WN11-AC-000035 | AUDIT | Passwords must, at a minimum, be 14 characters. | Warning Check For Variable Standards."
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid length set for win11stig_minimum_password_length, please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."
      when: win11stig_minimum_password_length < 14

    - name: "MEDIUM | WN11-AC-000035 | AUDIT | Passwords must, at a minimum, be 14 characters. | Set warning count."
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AC-000035'
      when: win11stig_minimum_password_length < 14

- name: "MEDIUM | WN11-AC-000040 | PATCH | The built-in Microsoft password complexity filter must be enabled."
  when: wn11_ac_000040
  tags:
    - WN11-AC-000040
    - CAT2
    - CCI-000192
    - SRG-OS-000069-GPOS-00037
    - SV-253304r1016430_rule
    - V-253304
    - NIST800-53_IA-5_1_a
    - NIST800-53A_IA-5_1.1_v
    - NIST800-53R4_IA-5_1_a
  community.windows.win_security_policy:
    section: System Access
    key: PasswordComplexity
    value: 1

- name: "MEDIUM | WN11-AU-000005 | PATCH | The system must be configured to audit Account Logon - Credential Validation failures"
  when: wn11_au_000005
  tags:
    - WN11-AU-000005
    - CAT2
    - CCI-000172
    - SRG-OS-000458-GPOS-00203
    - SV-253306r991570_rule
    - V-253306
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000005 | AUDIT | The system must be configured to audit Account Logon - Credential Validation failures | Get current audit events"
      ansible.windows.win_shell: AuditPol /get /subcategory:"Credential Validation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000005_audit

    - name: "MEDIUM | WN11-AU-000005 | PATCH | The system must be configured to audit Account Logon - Credential Validation failures | Falures"
      when: "'Failure' not in wn11_au_000005_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Credential Validation" /failure:enable

- name: "MEDIUM | WN11-AU-000010 | PATCH | The system must be configured to audit Account Logon - Credential Validation successes."
  when: wn11_au_000010
  tags:
    - WN11-AU-000010
    - CAT2
    - CCI-000172
    - SRG-OS-000458-GPOS-00203
    - SV-253306r991570_rule
    - V-253307
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000010 | AUDIT | The system must be configured to audit Account Logon - Credential Validation successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Credential Validation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000010_audit

    - name: "MEDIUM | WN11-AU-000010 | PATCH | The system must be configured to audit Account Logon - Credential Validation successes. | Success"
      when: "'Success' not in wn11_au_000010_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Credential Validation" /success:enable

- name: "MEDIUM | WN11-AU-000030 | PATCH | The system must be configured to audit Account Management - Security Group Management successes."
  when: wn11_au_000030
  tags:
    - WN11-AU-000030
    - CAT2
    - CCI-1914
    - SRG-OS-000337-GPOS-00129
    - SV-253308r971541_rule
    - V-253308
    - NIST800-53R4_AU-12_3
  block:
    - name: "MEDIUM | WN11-AU-000030 | AUDIT | The system must be configured to audit Account Management - Security Group Management successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Security Group Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000030_audit

    - name: "MEDIUM | WN11-AU-000030 | PATCH | The system must be configured to audit Account Management - Security Group Management successes. | Success"
      when: "'Success' not in wn11_au_000030_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Security Group Management" /success:enable

- name: "MEDIUM | WN11-AU-000035 | PATCH | The system must be configured to audit Account Management - User Account Management failures."
  when: wn11_au_000035
  tags:
    - WN11-AU-000035
    - CAT2
    - CCI-001314
    - SRG-OS-000206-GPOS-00084
    - SV-253309r958566_rule
    - V-253309
    - NIST800-53_SI-11_c
    - NIST800-53A_SI-11.1_iv
    - NIST800-53R4_SI-11_b
  block:
    - name: "MEDIUM | WN11-AU-000035 | AUDIT | The system must be configured to audit Account Management - User Account Management failures. | Get Current Settings"
      ansible.windows.win_shell: AuditPol /get /subcategory:"User Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000035_audit

    - name: "MEDIUM | WN11-AU-000035 | PATCH | The system must be configured to audit Account Management - User Account Management failures. | Set Failures"
      when: "'Failure' not in wn11_au_000035_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"User Account Management" /failure:enable

- name: "MEDIUM | WN11-AU-000040 | PATCH | The system must be configured to audit Account Management - User Account Management Success."
  when: wn11_au_000040
  tags:
    - WN11-AU-000040
    - CAT2
    - CCI-001403
    - SRG-OS-000239-GPOS-00089
    - SV-253310r991551_rule
    - V-253310
    - NIST800-53_AC-2_4
    - NIST800-53A_AC-2_4.1_i&ii
    - NIST800-53R4_AC-2_4
  block:
    - name: "MEDIUM | WN11-AU-000040 | AUDIT | The system must be configured to audit Account Management - User Account Management Success. | Get Current Settings"
      ansible.windows.win_shell: AuditPol /get /subcategory:"User Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000040_audit

    - name: "MEDIUM | WN11-AU-000040 | PATCH | The system must be configured to audit Account Management - User Account Management Success. | Set Success"
      when: "'Success' not in wn11_au_000040_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"User Account Management" /success:enable

- name: "MEDIUM | WN11-AU-000045 | PATCH | The system must be configured to audit Detailed Tracking - PNP Activity successes."
  when: wn11_au_000045
  tags:
    - WN11-AU-000045
    - CAT2
    - CCI-000172
    - CCI-001814
    - SRG-OS-000365-GPOS-00152
    - SV-253311r1016432_rule
    - V-253311
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
    - NIST800-53R4_CM-5_1
  block:
    - name: "MEDIUM | WN11-AU-000045 | AUDIT | The system must be configured to audit Detailed Tracking - PNP Activity successes. | Get Current Settings"
      ansible.windows.win_shell: AuditPol /get /subcategory:"User Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000045_audit

    - name: "MEDIUM | WN11-AU-000045 | PATCH | The system must be configured to audit Detailed Tracking - PNP Activity successes. | Set Failures"
      when: "'Success' not in wn11_au_000045_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Plug and Play Events" /success:enable

- name: "MEDIUM | WN11-AU-000050 | PATCH | The system must be configured to audit Detailed Tracking - Process Creation successes."
  when: wn11_au_000050
  tags:
    - WN11-AU-000050
    - CAT2
    - CCI-000172
    - CCI-001814
    - SRG-OS-000064-GPOS-00033
    - SV-253312r1016433_rule
    - V-253312
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
    - NIST800-53R4_CM-5_1
  block:
    - name: "MEDIUM | WN11-AU-000050 | AUDIT | The system must be configured to audit Detailed Tracking - Process Creation successes. | Find Current Settings"
      ansible.windows.win_shell: AuditPol /get /subcategory:"Process Creation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000050_audit

    - name: "MEDIUM | WN11-AU-000050 | PATCH | The system must be configured to audit Detailed Tracking - Process Creation successes. | Apply Success"
      when: "'Success' not in wn11_au_000050_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Process Creation" /success:enable

- name: "MEDIUM | WN11-AU-000054 | PATCH | The system must be configured to audit Logon/Logoff - Account Lockout failures."
  when: wn11_au_000054
  tags:
    - WN11-AU-000054
    - CAT2
    - CCI-000172
    - SRG-OS-000470-GPOS-00214
    - SV-253313r991578_rule
    - V-253313
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000054 | AUDIT | The system must be configured to audit Logon/Logoff - Account Lockout failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Account Lockout" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000054_audit

    - name: "MEDIUM | WN11-AU-000054 | PATCH | The system must be configured to audit Logon/Logoff - Account Lockout failures. | Apply Failure."
      when: "'Failure' not in wn11_au_000054_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Account Lockout" /failure:enable

- name: "MEDIUM | WN11-AU-000060 | PATCH | The system must be configured to audit Logon/Logoff - Group Membership successes."
  when: wn11_au_000060
  tags:
    - WN11-AU-000060
    - CAT2
    - CCI-000172
    - SRG-OS-000458-GPOS-00203
    - SV-253314r991570_rule
    - V-253314
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000060 | AUDIT | The system must be configured to audit Logon/Logoff - Group Membership successes | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Group Membership" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000060_audit

    - name: "MEDIUM | WN11-AU-000060 | PATCH | The system must be configured to audit Logon/Logoff - Group Membership successes | Success"
      when: "'Success' not in wn11_au_000060_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Group Membership" /success:enable

- name: "MEDIUM | WN11-AU-000065 | PATCH | The system must be configured to audit Logon/Logoff - Logoff successes."
  when: wn11_au_000065
  tags:
    - WN11-AU-000065
    - CAT2
    - CCI-000067
    - SRG-OS-000032-GPOS-00013
    - SV-253315r958406_rule
    - V-253315
    - NIST800-53_AC-17_1
    - NIST800-53A_AC-17_1.1
    - NIST800-53R4_AC-17_1
  block:
    - name: "MEDIUM | WN11-AU-000065 | AUDIT | The system must be configured to audit Logon/Logoff - Logoff successes. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Logoff" -r | ConvertFrom-Csv | Select-Object -ExpandProperty "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000065_audit

    - name: "MEDIUM | WN11-AU-000065 | PATCH | The system must be configured to audit Logon/Logoff - Logoff successes. | Ensure Audit Logoff Events is set to Success"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Logoff" /success:enable
      when: "'Success' not in wn11_au_000065_audit.stdout"

- name: "MEDIUM | WN11-AU-000070 | PATCH | The system must be configured to audit Logon/Logoff - Logon failures."
  when: wn11_au_000070
  tags:
    - WN11-AU-000070
    - CAT2
    - CCI-000172
    - SRG-OS-000472-GPOS-00217
    - SV-253316r991581_rule
    - V-253316
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000070 | AUDIT | The system must be configured to audit Logon/Logoff - Logon failures. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000070_audit

    - name: "MEDIUM | WN11-AU-000070 | PATCH | The system must be configured to audit Logon/Logoff - Logon failures. | Failure"
      when: "'Failure' not in wn11_au_000070_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Logon" /failure:enable

- name: "MEDIUM | WN11-AU-000075 | PATCH | The system must be configured to audit Logon/Logoff - Logon successes."
  when: wn11_au_000075
  tags:
    - WN11-AU-000075
    - CAT2
    - CCI-000172
    - SRG-OS-000472-GPOS-00217
    - SV-253317r991581_rule
    - V-253317
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000075 | PATCH | The system must be configured to audit Logon/Logoff - Logon successes. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000075_audit

    - name: "MEDIUM | WN11-AU-000075 | PATCH | The system must be configured to audit Logon/Logoff - Logon successes. | Success"
      when: "'Success' not in wn11_au_000075_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Logon" /success:enable

- name: "MEDIUM | WN11-AU-000080 | PATCH | The system must be configured to audit Logon/Logoff - Special Logon successes."
  when: wn11_au_000080
  tags:
    - WN11-AU-000080
    - CAT2
    - CCI-000172
    - SRG-OS-000470-GPOS-00214
    - SV-253318r991578_rule
    - V-253318
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000080 | AUDIT | The system must be configured to audit Logon/Logoff - Special Logon successes. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Special Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000080_audit

    - name: "MEDIUM | WN11-AU-000080 | PATCH | The system must be configured to audit Logon/Logoff - Special Logon successes. | Success"
      when: "'Success' not in wn11_au_000080_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Special Logon" /success:enable

- name: "MEDIUM | WN11-AU-000081 | PATCH | Windows 11 must be configured to audit Object Access - File Share failures."
  when: wn11_au_000081
  tags:
    - WN11-AU-000081
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253319r991572_rule
    - V-253319
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000081 | AUDIT | Windows 11 must be configured to audit Object Access - File Share failures. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"File Share" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000081_audit

    - name: "MEDIUM | WN11-AU-000081 | PATCH | Windows 11 must be configured to audit Object Access - File Share failures. | Failures."
      when: "'Failure' not in wn11_au_000081_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"File Share" /failure:enable

- name: "MEDIUM | WN11-AU-000082 | PATCH | Windows 11 must be configured to audit Object Access - File Share successes."
  when: wn11_au_000082
  tags:
    - WN11-AU-000082
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253320r991572_rule
    - V-253320
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000082 | AUDIT | Windows 11 must be configured to audit Object Access - File Share successes. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"File Share" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000082_audit

    - name: "MEDIUM | WN11-AU-000082 | PATCH | Windows 11 must be configured to audit Object Access - File Share successes. | Successes."
      when: "'Success' not in wn11_au_000082_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"File Share" /success:enable

- name: "MEDIUM | WN11-AU-000083 | PATCH | Windows 11 must be configured to audit Object Access - Other Object Access Events successes."
  when: wn11_au_000083
  tags:
    - WN11-AU-000083
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253321r991572_rule
    - V-253321
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000083 | AUDIT | Windows 11 must be configured to audit Object Access - Other Object Access Events successes. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other Object Access Events" -r | ConvertFrom-Csv | Select-Object -ExpandProperty "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000083_audit

    - name: "MEDIUM | WN11-AU-000083 | AUDIT | Windows 11 must be configured to audit Object Access - Other Object Access Events successes. | Set To Success"
      when: "'Success' not in wn11_au_000083_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other Object Access Events" /success:enable

- name: "MEDIUM | WN11-AU-000084 | PATCH | Windows 11 must be configured to audit Object Access - Other Object Access Events failures."
  when: wn11_au_000084
  tags:
    - WN11-AU-000084
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253322r991572_rule
    - V-253322
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000084 | AUDIT | Windows 11 must be configured to audit Object Access - Other Object Access Events failures. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other Object Access Events" -r | ConvertFrom-Csv | Select-Object -ExpandProperty "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000084_audit

    - name: "MEDIUM | WN11-AU-000084 | PATCH | Windows 11 must be configured to audit Object Access - Other Object Access Events failures. | Set To Failure."
      when: "'Failure' not in wn11_au_000084_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other Object Access Events" /failure:enable

- name: "MEDIUM | WN11-AU-000085 | PATCH | The system must be configured to audit Object Access - Removable Storage failures."
  when: wn11_au_000085
  tags:
    - WN11-AU-000085
    - CAT2
    - CCI-000172
    - SRG-OS-000474-GPOS-00219
    - SV-253323r991583_rule
    - V-253323
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000085 | AUDIT | The system must be configured to audit Object Access - Removable Storage failures. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Removable Storage" -r | ConvertFrom-Csv | Select-Object -ExpandProperty "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000085_audit

    - name: "MEDIUM | WN11-AU-000085 | PATCH | The system must be configured to audit Object Access - Removable Storage failures. | Set To Failure."
      when: "'Failure' not in wn11_au_000085_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Removable Storage" /failure:enable

- name: "MEDIUM | WN11-AU-000090 | PATCH | The system must be configured to audit Object Access - Removable Storage successes."
  when: wn11_au_000090
  tags:
    - WN11-AU-000090
    - CAT2
    - CCI-000172
    - SRG-OS-000474-GPOS-00219
    - SV-253324r991583_rule
    - V-253324
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000090 | AUDIT | The system must be configured to audit Object Access - Removable Storage successes. | Get Current Audit Events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Removable Storage" -r | ConvertFrom-Csv | Select-Object -ExpandProperty "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000090_audit

    - name: "MEDIUM | WN11-AU-000090 | PATCH | The system must be configured to audit Object Access - Removable Storage successes. | Set To Success."
      when: "'Success' not in wn11_au_000090_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Removable Storage" /success:enable

- name: "MEDIUM | WN11-AU-000100 | PATCH | The system must be configured to audit Policy Change - Audit Policy Change successes."
  when: wn11_au_000100
  tags:
    - WN11-AU-000100
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253325r991572_rule
    - V-253325
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000100 | AUDIT | The system must be configured to audit Policy Change - Audit Policy Change successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Audit Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000100_audit

    - name: "MEDIUM | WN11-AU-000100 | PATCH | The system must be configured to audit Policy Change - Audit Policy Change successes. | Success"
      when: "'Success' not in wn11_au_000100_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Audit Policy Change" /success:enable

- name: "MEDIUM | WN11-AU-000105 | PATCH | The system must be configured to audit Policy Change - Authentication Policy Change successes."
  when: wn11_au_000105
  tags:
    - WN11-AU-000105
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253326r991572_rule
    - V-253326
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000105 | AUDIT | The system must be configured to audit Policy Change - Authentication Policy Change successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Authentication Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000105_audit

    - name: "MEDIUM | WN11-AU-000105 | PATCH | The system must be configured to audit Policy Change - Authentication Policy Change successes. | Success."
      when: "'Success' not in wn11_au_000105_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Authentication Policy Change" /success:enable

- name: "MEDIUM | WN11-AU-000107 | PATCH | The system must be configured to audit Policy Change - Authorization Policy Change successes."
  when: wn11_au_000107
  tags:
    - WN11-AU-000107
    - CAT2
    - CCI-000172
    - SRG-OS-000462-GPOS-00206
    - SV-253327r991572_rule
    - V-253327
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000107 | AUDIT | The system must be configured to audit Policy Change - Authorization Policy Change successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Authorization Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000107_audit

    - name: "MEDIUM | WN11-AU-000107 | AUDIT | The system must be configured to audit Policy Change - Authorization Policy Change successes. | Success"
      when: "'Success' not in wn11_au_000107_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Authorization Policy Change" /success:enable

- name: "MEDIUM | WN11-AU-000110 | PATCH | The system must be configured to audit Privilege Use - Sensitive Privilege Use failures."
  when: wn11_au_000110
  tags:
    - WN11-AU-000110
    - CAT2
    - CCI-000172
    - SRG-OS-000327-GPOS-00127
    - SV-253328r958732_rule
    - V-253328
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000110 | AUDIT | The system must be configured to audit Privilege Use - Sensitive Privilege Use failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Sensitive Privilege Use" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000110_audit

    - name: "MEDIUM | WN11-AU-000110 | PATCH | The system must be configured to audit Privilege Use - Sensitive Privilege Use failures. | Failure"
      when: "'Failure' not in wn11_au_000110_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Sensitive Privilege Use" /failure:enable

- name: "MEDIUM | WN11-AU-000115 | PATCH | The system must be configured to audit Privilege Use - Sensitive Privilege Use successes."
  when: wn11_au_000115
  tags:
    - WN11-AU-000115
    - CAT2
    - CCI-000172
    - SRG-OS-000466-GPOS-00210
    - SV-253329r991575_rule
    - V-253329
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000115 | AUDIT | The system must be configured to audit Privilege Use - Sensitive Privilege Use successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Sensitive Privilege Use" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000115_audit

    - name: "MEDIUM | WN11-AU-000115 | PATCH | The system must be configured to audit Privilege Use - Sensitive Privilege Use successes. | Success"
      when: "'Success' not in wn11_au_000115_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Sensitive Privilege Use" /success:enable

- name: "MEDIUM | WN11-AU-000120 | PATCH | The system must be configured to audit System - IPSec Driver failures."
  when: wn11_au_000120
  tags:
    - WN11-AU-000120
    - CAT2
    - CCI-000172
    - SRG-OS-000477-GPOS-00222
    - SV-253330r991586_rule
    - V-253330
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000120 | AUDIT | The system must be configured to audit System - IPSec Driver failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"IPsec Driver" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000120_audit

    - name: "MEDIUM | WN11-AU-000120 | PATCH | The system must be configured to audit System - IPSec Driver failures. | Failure"
      when: "'Failure' not in wn11_au_000120_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"IPsec Driver" /failure:enable

- name: "MEDIUM | WN11-AU-000130 | PATCH | The system must be configured to audit System - Other System Events successes."
  when: wn11_au_000130
  tags:
    - WN11-AU-000130
    - CAT2
    - CCI-000172
    - SRG-OS-000471-GPOS-00215
    - SV-253331r991579_rule
    - V-253331
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000130 | AUDIT | The system must be configured to audit System - Other System Events successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other System Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000130_audit

    - name: "MEDIUM | WN11-AU-000130 | PATCH | The system must be configured to audit System - Other System Events successes. | Success"
      when: "'Success' not in wn11_au_000130_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other System Events" /success:enable

- name: "MEDIUM | WN11-AU-000135 | PATCH | The system must be configured to audit System - Other System Events failures."
  when: wn11_au_000135
  tags:
    - WN11-AU-000135
    - CAT2
    - CCI-000172
    - SRG-OS-000471-GPOS-00215
    - SV-253332r991579_rule
    - V-253332
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000135 | AUDIT | The system must be configured to audit System - Other System Events failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other System Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000135_audit

    - name: "MEDIUM | WN11-AU-000135 | PATCH | The system must be configured to audit System - Other System Events failures. | Failure"
      when: "'Failure' not in wn11_au_000135_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other System Events" /failure:enable

- name: "MEDIUM | WN11-AU-000140 | PATCH | The system must be configured to audit System - Security State Change successes."
  when: wn11_au_000140
  tags:
    - WN11-AU-000140
    - CAT2
    - CCI-000172
    - SRG-OS-000466-GPOS-00210
    - SV-253333r991575_rule
    - V-253333
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000140 | AUDIT | The system must be configured to audit System - Security State Change successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Security State Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000140_audit

    - name: "MEDIUM | WN11-AU-000140 | PATCH | The system must be configured to audit System - Security State Change successes. | Success"
      when: "'Success' not in wn11_au_000140_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Security State Change" /success:enable

- name: "MEDIUM | WN11-AU-000150 | PATCH | The system must be configured to audit System - Security System Extension successes."
  when: wn11_au_000150
  tags:
    - WN11-AU-000150
    - CAT2
    - CCI-000172
    - SRG-OS-000466-GPOS-00210
    - SV-253334r991575_rule
    - V-253334
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000150 | AUDIT | The system must be configured to audit System - Security System Extension successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Security System Extension" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000150_audit

    - name: "MEDIUM | WN11-AU-000150 | PATCH | The system must be configured to audit System - Security System Extension successes. | Success"
      when: "'Success' not in wn11_au_000150_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Security System Extension" /success:enable

- name: "MEDIUM | WN11-AU-000155 | PATCH | The system must be configured to audit System - System Integrity failures."
  when: wn11_au_000155
  tags:
    - WN11-AU-000155
    - CAT2
    - CCI-000172
    - SRG-OS-000463-GPOS-00207
    - SV-253335r991573_rule
    - V-253335
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000155 | AUDIT | The system must be configured to audit System - System Integrity failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"System Integrity" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000155_audit

    - name: "MEDIUM | WN11-AU-000155 | PATCH | The system must be configured to audit System - System Integrity failures. | Failure"
      when: "'Failure' not in wn11_au_000155_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"System Integrity" /failure:enable

- name: "MEDIUM | WN11-AU-000160 | PATCH | The system must be configured to audit System - System Integrity successes."
  when: wn11_au_000160
  tags:
    - WN11-AU-000160
    - CAT2
    - CCI-000172
    - SRG-OS-000463-GPOS-00207
    - SV-253336r991573_rule
    - V-253336
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  block:
    - name: "MEDIUM | WN11-AU-000160 | AUDIT | The system must be configured to audit System - System Integrity successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"System Integrity" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000160_audit

    - name: "MEDIUM | WN11-AU-000160 | PATCH | The system must be configured to audit System - System Integrity successes. | Success"
      when: "'Success' not in wn11_au_000160_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"System Integrity" /success:enable

- name: "MEDIUM | WN11-AU-000500 | PATCH | The Application event log size must be configured to 32768 KB or greater."
  when: wn11_au_000500
  tags:
    - WN11-AU-000500
    - CAT2
    - CCI-001849
    - SRG-OS-000341-GPOS-00132
    - SV-253337r958752_rule
    - V-253337
    - NIST800-53R4_AU-4
  block:
    - name: "MEDIUM | WN11-AU-000500 | PATCH | The Application event log size must be configured to 32768 KB or greater. | Set Variable"
      when: win11stig_application_max_log_file_size >= 32768
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
        name: MaxSize
        data: "{{ win11stig_application_max_log_file_size }}"
        type: dword

    - name: "MEDIUM | WN11-AU-000500 | AUDIT | The Application event log size must be configured to 32768 KB or greater. | Warning Message"
      when: win11stig_application_max_log_file_size < 32768
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win11stig_application_max_log_file_size. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AU-000500 | AUDIT | The Application event log size must be configured to 32768 KB or greater. | Warn Count."
      when: win11stig_application_max_log_file_size < 32768
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AU-000500'

- name: "MEDIUM | WN11-AU-000505 | PATCH | The Security event log size must be configured to 1024000 KB or greater."
  when: wn11_au_000505
  tags:
    - WN11-AU-000505
    - CAT2
    - CCI-001849
    - SRG-OS-000341-GPOS-00132
    - SV-253338r958752_rule
    - V-253338
    - NIST800-53R4_AU-4
  block:
    - name: "MEDIUM | WN11-AU-000505 | PATCH | The Security event log size must be configured to 1024000 KB or greater. | Set Variable"
      when: win11stig_security_max_log_file_size >= 1024000
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
        name: MaxSize
        data: "{{ win11stig_security_max_log_file_size }}"
        type: dword

    - name: "MEDIUM | WN11-AU-000505 | AUDIT | The Security event log size must be configured to 1024000 KB or greater. | Warning Check For Variable Standards."
      when: win11stig_security_max_log_file_size < 1024000
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win11stig_security_max_log_file_size. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AU-000505 | AUDIT | The Security event log size must be configured to 1024000 KB or greater. | Warn Count."
      when: win11stig_security_max_log_file_size < 1024000
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AU-000505'

- name: "MEDIUM | WN11-AU-000510 | PATCH | The System event log size must be configured to 32768 KB or greater."
  when: wn11_au_000510
  tags:
    - WN11-AU-000510
    - CAT2
    - CCI-001849
    - SRG-OS-000341-GPOS-00132
    - SV-253339r958752_rule
    - V-253339
    - NIST800-53R4_AU-4
  block:
    - name: "MEDIUM | WN11-AU-000510 | PATCH | The System event log size must be configured to 32768 KB or greater. | Set Variable"
      when: win11stig_system_max_log_file_size >= 32768
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
        name: MaxSize
        data: "{{ win11stig_system_max_log_file_size }}"
        type: dword

    - name: "MEDIUM | WN11-AU-000510 | AUDIT | The System event log size must be configured to 32768 KB or greater. | Warning Check For Variable Standards."
      when: win11stig_system_max_log_file_size < 32768
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win11stig_system_max_log_file_size. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-AU-000510 | AUDIT | The System event log size must be configured to 32768 KB or greater. | Warn Count."
      when: win11stig_system_max_log_file_size < 32768
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AU-000510'

- name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts."
  when: wn11_au_000515
  tags:
    - WN11-AU-000515
    - CAT2
    - CCI-000162
    - SRG-OS-000057-GPOS-00027
    - SV-253340r958434_rule
    - V-253340
    - NIST800-53_AU-9
    - NIST800-53A_AU-9.1
    - NIST800-53R4_AU-9
  block:
    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Get Application Event Log File Location from Registry"
      ansible.windows.win_reg_stat:
        path: "HKLM:\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Application"
        name: "File"
      register: wn11_au_000515_detected_application_log

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Set a fact for the Application Event Log file location"
      ansible.builtin.set_fact:
        wn11_au_000515_application_event_log_location: "{{ wn11_au_000515_detected_application_log.value }}"

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Check if the log file location is default"
      ansible.builtin.set_fact:
        wn11_au_000515_is_default_location: "{{ wn11_au_000515_application_event_log_location == 'C:\\Windows\\system32\\winevt\\Logs\\Application.evtx' }}"

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Set the correct log file path based on default or non-default location"
      ansible.builtin.set_fact:
        wn11_au_000515_log_file_path: "{{ wn11_au_000515_application_event_log_location if wn11_au_000515_is_default_location == false else 'C:\\Windows\\system32\\winevt\\Logs\\Application.evtx' }}"

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Retrieve ACL entries for the Application event log"
      ansible.windows.win_shell: (Get-Acl "{{ wn11_au_000515_application_event_log_location }}").Access | ConvertTo-Json -Compress
      register: wn11_au_000515_app_event_log_acl_entries
      changed_when: false
      failed_when: false

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Parse ACL entries for further checks"
      ansible.builtin.set_fact:
        wn11_au_000515_parsed_acl_entries: "{{ wn11_au_000515_app_event_log_acl_entries.stdout | from_json }}"

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Set fact for authorized entries with proper rights (manual filtering)"
      ansible.builtin.set_fact:
        wn11_au_000515_authorized_entries: >-
          {%- set auth = [] -%}
          {%- for entry in wn11_au_000515_parsed_acl_entries -%}
            {%- if (entry.IdentityReference.Value in ['NT AUTHORITY\\SYSTEM', 'BUILTIN\\Administrators', 'NT SERVICE\\EventLog', 'NT Service\\Eventlog'] and entry.FileSystemRights == 2032127)
                  or (entry.IdentityReference.Value == 'APPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES' and entry.FileSystemRights == 1179817) -%}
              {%- set _ = auth.append(entry) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ auth }}

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Set fact for unauthorized accounts (or misconfigured authorized accounts)"
      ansible.builtin.set_fact:
        wn11_au_000515_unauthorized_accounts_with_extra_permissions: >-
          {{
            wn11_au_000515_parsed_acl_entries | map('to_json') | list
            | difference(wn11_au_000515_authorized_entries | map('to_json') | list)
            | map('from_json') | list
          }}

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Check for permissions when log location is default"
      when:
        - wn11_au_000515_is_default_location
        - >
          (wn11_au_000515_unauthorized_accounts_with_extra_permissions | length > 0) or
          (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | length == 0) or
          (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | length == 0) or
          (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | length == 0)
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "        Windows 11 Application Event Log ACL Compliance Check      "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "C:\\Windows\\System32\\winevt\\Logs\\Application.evtx"
          - ""
          - "{{ 'No unauthorized accounts detected' if wn11_au_000515_unauthorized_accounts_with_extra_permissions | length == 0 else 'Warning!! Unauthorized Accounts Detected:' }}"
          - "{{ wn11_au_000515_unauthorized_accounts_with_extra_permissions | map(attribute='IdentityReference') | list if wn11_au_000515_unauthorized_accounts_with_extra_permissions | length > 0 else '' }}"
          - ""
          - "Permissions of these unauthorized accounts:"
          - "{{ wn11_au_000515_unauthorized_accounts_with_extra_permissions | map(attribute='FileSystemRights') | list }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Checking Full Control for required accounts..."
          - ""
          - "{{ 'NT AUTHORITY\\SYSTEM does NOT have Full Control' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT AUTHORITY\\SYSTEM has Full Control as expected.' }}"
          - "{{ 'BUILTIN\\Administrators does NOT have Full Control' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'BUILTIN\\Administrators has Full Control as expected.' }}"
          - "{{ 'NT SERVICE\\EventLog does NOT have Full Control' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT SERVICE\\EventLog has Full Control as expected.' }}"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Check for permissions when log location is non-default"
      when:
        - not wn11_au_000515_is_default_location
        - >
          (wn11_au_000515_unauthorized_accounts_with_extra_permissions | length > 0) or
          (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "        Windows 11 Application Event Log ACL Compliance Check      "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "{{ wn11_au_000515_log_file_path }}"
          - ""
          - "{{ 'No unauthorized accounts detected' if wn11_au_000515_unauthorized_accounts_with_extra_permissions | length == 0 else 'Warning!! Unauthorized Accounts Detected:' }}"
          - "{{ wn11_au_000515_unauthorized_accounts_with_extra_permissions | map(attribute='IdentityReference') | list if wn11_au_000515_unauthorized_accounts_with_extra_permissions | length > 0 else '' }}"
          - ""
          - "Permissions of these unauthorized accounts:"
          - "{{ wn11_au_000515_unauthorized_accounts_with_extra_permissions | map(attribute='FileSystemRights') | list }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Checking Full Control for required accounts..."
          - ""
          - "{{ 'NT AUTHORITY\\SYSTEM does NOT have Full Control' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT AUTHORITY\\SYSTEM has Full Control as expected.' }}"
          - "{{ 'BUILTIN\\Administrators does NOT have Full Control' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'BUILTIN\\Administrators has Full Control as expected.' }}"
          - "{{ 'NT Service\\Eventlog does NOT have Full Control' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT Service\\Eventlog has Full Control as expected.' }}"
          - ""
          - "Checking if NT Service\\Eventlog has the correct format for non-default location..."
          - "{{ 'Warning!! NT SERVICE\\EventLog should be listed as NT Service\\Eventlog' if (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | list | length == 0) else 'NT Service\\Eventlog is correctly listed as NT Service\\Eventlog.' }}"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-AU-000515 | AUDIT | Windows 11 permissions for the Application event log must prevent access by non-privileged accounts. | Warn Count."
      when: >
        (
          (wn11_au_000515_is_default_location and
          (
            (wn11_au_000515_unauthorized_accounts_with_extra_permissions | length > 0) or
            (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
          ))
          or
          ((not wn11_au_000515_is_default_location) and
          (
            (wn11_au_000515_unauthorized_accounts_with_extra_permissions | length > 0) or
            (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000515_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
          ))
        )
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AU-000515'

- name: "MEDIUM | WN11-AU-000520 | PATCH | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts."
  when: wn11_au_000520
  tags:
    - WN11-AU-000520
    - CAT2
    - CCI-000162
    - SRG-OS-000057-GPOS-00027
    - SV-253341r958434_rule
    - V-253341
    - NIST800-53_AU-9
    - NIST800-53A_AU-9.1
    - NIST800-53R4_AU-9
  block:
    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Get Security Event Log File Location from Registry"
      ansible.windows.win_reg_stat:
        path: "HKLM:\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security"
        name: "File"
      register: wn11_au_000520_detected_security_log

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Set a fact for the Security Event Log file location"
      ansible.builtin.set_fact:
        wn11_au_000520_security_event_log_location: "{{ wn11_au_000520_detected_security_log.value }}"

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Check if the log file location is default"
      ansible.builtin.set_fact:
        wn11_au_000520_is_default_location: "{{ wn11_au_000520_security_event_log_location == 'C:\\Windows\\system32\\winevt\\Logs\\Security.evtx' }}"

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Set the correct log file path based on default or non-default location"
      ansible.builtin.set_fact:
        wn11_au_000520_log_file_path: "{{ wn11_au_000520_security_event_log_location if wn11_au_000520_is_default_location == false else 'C:\\Windows\\system32\\winevt\\Logs\\Security.evtx' }}"

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Retrieve ACL entries for the Security event log"
      ansible.windows.win_shell: (Get-Acl "{{ wn11_au_000520_security_event_log_location }}").Access | ConvertTo-Json -Compress
      register: wn11_au_000520_sec_event_log_acl_entries
      changed_when: false
      failed_when: false

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Parse ACL entries for further checks"
      ansible.builtin.set_fact:
        wn11_au_000520_parsed_acl_entries: "{{ wn11_au_000520_sec_event_log_acl_entries.stdout | from_json }}"

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Set fact for authorized entries with proper rights (manual filtering)"
      ansible.builtin.set_fact:
        wn11_au_000520_authorized_entries: >-
          {%- set auth = [] -%}
          {%- for entry in wn11_au_000520_parsed_acl_entries -%}
            {%- if (entry.IdentityReference.Value in ['NT AUTHORITY\\SYSTEM', 'BUILTIN\\Administrators', 'NT SERVICE\\EventLog', 'NT Service\\Eventlog'] and entry.FileSystemRights == 2032127)
                  or (entry.IdentityReference.Value == 'APPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES' and entry.FileSystemRights == 1179817) -%}
              {%- set _ = auth.append(entry) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ auth }}

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Set fact for unauthorized accounts (or misconfigured authorized accounts)"
      ansible.builtin.set_fact:
        wn11_au_000520_unauthorized_accounts_with_extra_permissions: >-
          {{
            wn11_au_000520_parsed_acl_entries | map('to_json') | list
            | difference(wn11_au_000520_authorized_entries | map('to_json') | list)
            | map('from_json') | list
          }}

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Check for permissions when log location is default"
      when:
        - wn11_au_000520_is_default_location
        - >
          (wn11_au_000520_unauthorized_accounts_with_extra_permissions | length > 0) or
          (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "        Windows 11 Security Event Log ACL Compliance Check           "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "C:\\Windows\\System32\\winevt\\Logs\\Security.evtx"
          - ""
          - "{{ 'No unauthorized accounts detected' if wn11_au_000520_unauthorized_accounts_with_extra_permissions | length == 0 else 'Warning!! Unauthorized Accounts Detected:' }}"
          - "{{ wn11_au_000520_unauthorized_accounts_with_extra_permissions | map(attribute='IdentityReference') | list if wn11_au_000520_unauthorized_accounts_with_extra_permissions | length > 0 else '' }}"
          - ""
          - "Permissions of these unauthorized accounts:"
          - "{{ wn11_au_000520_unauthorized_accounts_with_extra_permissions | map(attribute='FileSystemRights') | list }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Checking Full Control for required accounts..."
          - ""
          - "{{ 'NT AUTHORITY\\SYSTEM does NOT have Full Control' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT AUTHORITY\\SYSTEM has Full Control as expected.' }}"
          - "{{ 'BUILTIN\\Administrators does NOT have Full Control' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'BUILTIN\\Administrators has Full Control as expected.' }}"
          - "{{ 'NT SERVICE\\EventLog does NOT have Full Control' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT SERVICE\\EventLog has Full Control as expected.' }}"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Check for permissions when log location is non-default"
      when:
        - not wn11_au_000520_is_default_location
        - >
          (wn11_au_000520_unauthorized_accounts_with_extra_permissions | length > 0) or
          (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "        Windows 11 Security Event Log ACL Compliance Check           "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "{{ wn11_au_000520_log_file_path }}"
          - ""
          - "{{ 'No unauthorized accounts detected' if wn11_au_000520_unauthorized_accounts_with_extra_permissions | length == 0 else 'Warning!! Unauthorized Accounts Detected:' }}"
          - "{{ wn11_au_000520_unauthorized_accounts_with_extra_permissions | map(attribute='IdentityReference') | list if wn11_au_000520_unauthorized_accounts_with_extra_permissions | length > 0 else '' }}"
          - ""
          - "Permissions of these unauthorized accounts:"
          - "{{ wn11_au_000520_unauthorized_accounts_with_extra_permissions | map(attribute='FileSystemRights') | list }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Checking Full Control for required accounts..."
          - ""
          - "{{ 'NT AUTHORITY\\SYSTEM does NOT have Full Control' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT AUTHORITY\\SYSTEM has Full Control as expected.' }}"
          - "{{ 'BUILTIN\\Administrators does NOT have Full Control' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'BUILTIN\\Administrators has Full Control as expected.' }}"
          - "{{ 'NT Service\\Eventlog does NOT have Full Control' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT Service\\Eventlog has Full Control as expected.' }}"
          - ""
          - "Checking if NT Service\\Eventlog has the correct format for non-default location..."
          - "{{ 'Warning!! NT SERVICE\\EventLog should be listed as NT Service\\Eventlog' if (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | list | length == 0) else 'NT Service\\Eventlog is correctly listed as NT Service\\Eventlog.' }}"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-AU-000520 | AUDIT | Windows 11 permissions for the Security event log must prevent access by non-privileged accounts. | Warn Count."
      when: >
        (
          (wn11_au_000520_is_default_location and
          (
            (wn11_au_000520_unauthorized_accounts_with_extra_permissions | length > 0) or
            (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
          ))
          or
          ((not wn11_au_000520_is_default_location) and
          (
            (wn11_au_000520_unauthorized_accounts_with_extra_permissions | length > 0) or
            (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000520_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
          ))
        )
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AU-000520'

- name: "MEDIUM | WN11-AU-000525 | PATCH | Windows 11 permissions for the System event log must prevent access by non-privileged accounts."
  when: wn11_au_000525
  tags:
    - WN11-AU-000525
    - CAT2
    - CCI-000162
    - SRG-OS-000057-GPOS-00027
    - V-253342r958434_rule
    - V-253342
    - NIST800-53_AU-9
    - NIST800-53A_AU-9.1
    - NIST800-53R4_AU-9
  block:
    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Get System Event Log File Location from Registry"
      ansible.windows.win_reg_stat:
        path: "HKLM:\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\System"
        name: "File"
      register: wn11_au_000525_detected_system_log

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Set a fact for the System Event Log file location"
      ansible.builtin.set_fact:
        wn11_au_000525_system_event_log_location: "{{ wn11_au_000525_detected_system_log.value }}"

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Check if the log file location is default"
      ansible.builtin.set_fact:
        wn11_au_000525_is_default_location: "{{ wn11_au_000525_system_event_log_location == 'C:\\Windows\\system32\\winevt\\Logs\\System.evtx' }}"

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Set the correct log file path based on default or non-default location"
      ansible.builtin.set_fact:
        wn11_au_000525_log_file_path: "{{ wn11_au_000525_system_event_log_location if wn11_au_000525_is_default_location == false else 'C:\\Windows\\system32\\winevt\\Logs\\System.evtx' }}"

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Retrieve ACL entries for the System event log"
      ansible.windows.win_shell: (Get-Acl "{{ wn11_au_000525_system_event_log_location }}").Access | ConvertTo-Json -Compress
      register: wn11_au_000525_sys_event_log_acl_entries
      changed_when: false
      failed_when: false

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Parse ACL entries for further checks"
      ansible.builtin.set_fact:
        wn11_au_000525_parsed_acl_entries: "{{ wn11_au_000525_sys_event_log_acl_entries.stdout | from_json }}"

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Set fact for authorized entries with proper rights (manual filtering)"
      ansible.builtin.set_fact:
        wn11_au_000525_authorized_entries: >-
          {%- set auth = [] -%}
          {%- for entry in wn11_au_000525_parsed_acl_entries -%}
            {%- if (entry.IdentityReference.Value in ['NT AUTHORITY\\SYSTEM', 'BUILTIN\\Administrators', 'NT SERVICE\\EventLog', 'NT Service\\Eventlog'] and entry.FileSystemRights == 2032127)
                  or (entry.IdentityReference.Value == 'APPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES' and entry.FileSystemRights == 1179817) -%}
              {%- set _ = auth.append(entry) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ auth }}

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Set fact for unauthorized accounts (or misconfigured authorized accounts)"
      ansible.builtin.set_fact:
        wn11_au_000525_unauthorized_accounts_with_extra_permissions: >-
          {{
            wn11_au_000525_parsed_acl_entries | map('to_json') | list
            | difference(wn11_au_000525_authorized_entries | map('to_json') | list)
            | map('from_json') | list
          }}

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Check for permissions when log location is default"
      when:
        - wn11_au_000525_is_default_location
        - >
          (wn11_au_000525_unauthorized_accounts_with_extra_permissions | length > 0) or
          (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "        Windows 11 System Event Log ACL Compliance Check             "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "C:\\Windows\\system32\\winevt\\Logs\\System.evtx"
          - ""
          - "{{ 'No unauthorized accounts detected' if wn11_au_000525_unauthorized_accounts_with_extra_permissions | length == 0 else 'Warning!! Unauthorized Accounts Detected:' }}"
          - "{{ wn11_au_000525_unauthorized_accounts_with_extra_permissions | map(attribute='IdentityReference') | list if wn11_au_000525_unauthorized_accounts_with_extra_permissions | length > 0 else '' }}"
          - ""
          - "Permissions of these unauthorized accounts:"
          - "{{ wn11_au_000525_unauthorized_accounts_with_extra_permissions | map(attribute='FileSystemRights') | list }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Checking Full Control for required accounts..."
          - ""
          - "{{ 'NT AUTHORITY\\SYSTEM does NOT have Full Control' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT AUTHORITY\\SYSTEM has Full Control as expected.' }}"
          - "{{ 'BUILTIN\\Administrators does NOT have Full Control' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'BUILTIN\\Administrators has Full Control as expected.' }}"
          - "{{ 'NT SERVICE\\EventLog does NOT have Full Control' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT SERVICE\\EventLog has Full Control as expected.' }}"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Check for permissions when log location is non-default"
      when:
        - not wn11_au_000525_is_default_location
        - >
          (wn11_au_000525_unauthorized_accounts_with_extra_permissions | length > 0) or
          (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
          (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "        Windows 11 System Event Log ACL Compliance Check             "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "{{ wn11_au_000525_log_file_path }}"
          - ""
          - "{{ 'No unauthorized accounts detected' if wn11_au_000525_unauthorized_accounts_with_extra_permissions | length == 0 else 'Warning!! Unauthorized Accounts Detected:' }}"
          - "{{ wn11_au_000525_unauthorized_accounts_with_extra_permissions | map(attribute='IdentityReference') | list if wn11_au_000525_unauthorized_accounts_with_extra_permissions | length > 0 else '' }}"
          - ""
          - "Permissions of these unauthorized accounts:"
          - "{{ wn11_au_000525_unauthorized_accounts_with_extra_permissions | map(attribute='FileSystemRights') | list }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Checking Full Control for required accounts..."
          - ""
          - "{{ 'NT AUTHORITY\\SYSTEM does NOT have Full Control' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT AUTHORITY\\SYSTEM has Full Control as expected.' }}"
          - "{{ 'BUILTIN\\Administrators does NOT have Full Control' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'BUILTIN\\Administrators has Full Control as expected.' }}"
          - "{{ 'NT Service\\Eventlog does NOT have Full Control' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) else 'NT Service\\Eventlog has Full Control as expected.' }}"
          - ""
          - "Checking if NT Service\\Eventlog has the correct format for non-default location..."
          - "{{ 'Warning!! NT SERVICE\\EventLog should be listed as NT Service\\Eventlog' if (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | list | length == 0) else 'NT Service\\Eventlog is correctly listed as NT Service\\Eventlog.' }}"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-AU-000525 | AUDIT | Windows 11 permissions for the System event log must prevent access by non-privileged accounts. | Warn Count."
      when: >
        (
          (wn11_au_000525_is_default_location and
          (
            (wn11_au_000525_unauthorized_accounts_with_extra_permissions | length > 0) or
            (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT SERVICE\\EventLog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
          ))
          or
          ((not wn11_au_000525_is_default_location) and
          (
            (wn11_au_000525_unauthorized_accounts_with_extra_permissions | length > 0) or
            (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT AUTHORITY\\SYSTEM') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'BUILTIN\\Administrators') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0) or
            (wn11_au_000525_parsed_acl_entries | selectattr('IdentityReference.Value', 'equalto', 'NT Service\\Eventlog') | selectattr('FileSystemRights', 'equalto', 2032127) | list | length == 0)
          ))
        )
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-AU-000525'

- name: "MEDIUM | WN11-AU-000550 | PATCH | Windows 11 must be configured to audit Other Policy Change Events Successes."
  when: wn11_au_000550
  tags:
    - WN11-AU-000550
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253343r958412_rule
    - V-253343
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000550 | AUDIT | Windows 11 must be configured to audit Other Policy Change Events Successes | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other Policy Change Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000550_audit

    - name: "MEDIUM | WN11-AU-000550 | PATCH | Windows 11 must be configured to audit Other Policy Change Events Successes | Successes"
      when: "'Success' not in wn11_au_000550_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other Policy Change Events" /success:enable

- name: "MEDIUM | WN11-AU-000555 | PATCH | Windows 11 must be configured to audit Other Policy Change Events Failures."
  when: wn11_au_000555
  tags:
    - WN11-AU-000555
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253344r958412_rule
    - V-253344
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000555 | AUDIT | Windows 11 must be configured to audit Other Policy Change Events Failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other Policy Change Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000555_audit

    - name: "MEDIUM | WN11-AU-000555 | PATCH | Windows 11 must be configured to audit Other Policy Change Events Failures. | Failure"
      when: "'Failure' not in wn11_au_000555_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other Policy Change Events" /failure:enable

- name: "MEDIUM | WN11-AU-000560 | PATCH | Windows 11 must be configured to audit other Logon/Logoff Events Successes."
  when: wn11_au_000560
  tags:
    - WN11-AU-000560
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253345r958412_rule
    - V-253345
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000560 | AUDIT | Windows 11 must be configured to audit other Logon/Logoff Events Successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other Logon/Logoff Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000560_audit

    - name: "MEDIUM | WN11-AU-000560 | PATCH | Windows 11 must be configured to audit other Logon/Logoff Events Successes. | Apply Success."
      when: "'Success' not in wn11_au_000560_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other Logon/Logoff Events" /success:enable

- name: "MEDIUM | WN11-AU-000565 | PATCH | Windows 11 must be configured to audit other Logon/Logoff Events Failures."
  when: wn11_au_000565
  tags:
    - WN11-AU-000565
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253346r958412_rule
    - V-253346
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000565 | AUDIT | Windows 11 must be configured to audit other Logon/Logoff Events Failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Other Logon/Logoff Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000565_audit

    - name: "MEDIUM | WN11-AU-000565 | PATCH | Windows 11 must be configured to audit other Logon/Logoff Events Failures. | Apply Failure."
      when: "'Failure' not in wn11_au_000565_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Other Logon/Logoff Events" /failure:enable

- name: "MEDIUM | WN11-AU-000570 | PATCH | Windows 11 must be configured to audit Detailed File Share Failures."
  when: wn11_au_000570
  tags:
    - WN11-AU-000570
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253347r958412_rule
    - V-253347
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000570 | AUDIT | Windows 11 must be configured to audit Detailed File Share Failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Detailed File Share" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000570_audit

    - name: "MEDIUM | WN11-AU-000570 | PATCH | Windows 11 must be configured to audit Detailed File Share Failures. | Failure"
      when: "'Failure' not in wn11_au_000570_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Detailed File Share" /failure:enable

- name: "MEDIUM | WN11-AU-000575 | PATCH | Windows 11 must be configured to audit MPSSVC Rule-Level Policy Change Successes."
  when: wn11_au_000575
  tags:
    - WN11-AU-000575
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253348r958412_rule
    - V-253348
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000575 | AUDIT | Windows 11 must be configured to audit MPSSVC Rule-Level Policy Change Successes. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"MPSSVC Rule-Level Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000575_audit

    - name: "MEDIUM | WN11-AU-000575 | PATCH | Windows 11 must be configured to audit MPSSVC Rule-Level Policy Change Successes. | Success"
      when: "'Success' not in wn11_au_000575_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"MPSSVC Rule-Level Policy Change" /success:enable

- name: "MEDIUM | WN11-AU-000580 | PATCH | Windows 11 must be configured to audit MPSSVC Rule-Level Policy Change Failures."
  when: wn11_au_000580
  tags:
    - WN11-AU-000580
    - CAT2
    - CCI-000130
    - SRG-OS-000037-GPOS-00015
    - SV-253349r958412_rule
    - V-253349
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  block:
    - name: "MEDIUM | WN11-AU-000580 | AUDIT | Windows 11 must be configured to audit MPSSVC Rule-Level Policy Change Failures. | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"MPSSVC Rule-Level Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000580_audit

    - name: "MEDIUM | WN11-AU-000580 | PATCH | Windows 11 must be configured to audit MPSSVC Rule-Level Policy Change Failures. | Failure"
      when: "'Failure' not in wn11_au_000580_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"MPSSVC Rule-Level Policy Change" /failure:enable

- name: "MEDIUM | WN11-CC-000005 | PATCH | Camera access from the lock screen must be disabled."
  when: wn11_cc_000005
  tags:
    - WN11-CC-000005
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253350r958478_rule
    - V-253350
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
    name: NoLockScreenCamera
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000007 | PATCH | Windows 11 must cover or disable the built-in or attached camera when not in use."
  when: wn11_cc_000007
  tags:
    - WN11-CC-000007
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253351r958478_rule
    - V-253351
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  block:
    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Skip hardening if win11stig_ignore_camera_hardening is true."
      when:
        - win11stig_ignore_camera_hardening
        - win11stig_allowed_to_use_camera
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "            Camera Security Hardening Warning Summary               "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "Warning!! Camera security hardening has been set to true!"
          - "win11stig_ignore_camera_hardening: true"
          - ""
          - "Warning!! The system is allowed to use the camera has been set to true!"
          - "win11stig_allowed_to_use_camera: true"
          - ""
          - "This system is classified as a mobile device or an approved VTC suite."
          - "Ensure physical security measures are in place."
          - "For a built-in camera, the camera must be protected by a camera cover"
          - "(e.g. laptop camera cover slide) when not in use."
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Check if a camera is installed."
      when: not win11stig_ignore_camera_hardening
      ansible.windows.win_shell: |
        Get-PnpDevice | Where-Object {
            ($_.Class -eq "Camera" -or $_.Class -eq "Imaging" -or $_.Class -eq "Image") -and
            ($_.Name -match 'Camera|Webcam|FaceTime|Integrated|Built-in')
        } | Select-Object Name, Status, @{N='LocationPath'; E={ if ($_.LocationPath) { $_.LocationPath } else { 'N/A' } }} | ConvertTo-Json -Depth 10
      changed_when: false
      failed_when: false
      register: wn11_cc_000007_camera_status

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Set default value for camera detection"
      ansible.builtin.set_fact:
        wn11_cc_000007_detected_cameras: []
        wn11_cc_000007_builtin_cameras: []
        wn11_cc_000007_usb_cameras: []

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Parse detected cameras."
      when:
        - not win11stig_ignore_camera_hardening
        - wn11_cc_000007_camera_status.stdout | default('') | length > 0
      ansible.builtin.set_fact:
        wn11_cc_000007_detected_cameras: "{{ wn11_cc_000007_camera_status.stdout | from_json | default([]) }}"

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Identify built-in non-USB cameras."
      when: not win11stig_ignore_camera_hardening
      ansible.builtin.set_fact:
        wn11_cc_000007_builtin_cameras: "{{ wn11_cc_000007_detected_cameras | selectattr('LocationPath', 'search', '^(?!USB)') | selectattr('Name', 'search', '(?i)Camera|Webcam|FaceTime|Integrated|Built-in') | list }}"

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Identify USB external cameras."
      when: not win11stig_ignore_camera_hardening
      ansible.builtin.set_fact:
        wn11_cc_000007_usb_cameras: "{{ wn11_cc_000007_detected_cameras | selectattr('LocationPath', 'search', '^USB') | selectattr('Name', 'search', '(?i)Camera|Webcam|FaceTime|Integrated|Built-in') | list }}"

    - name: "MEDIUM | WN11-CC-000007 | PATCH | Windows 11 must cover or disable the built-in or attached camera when not in use. | Disable all cameras via registry if camera use is not allowed."
      when:
        - not win11stig_ignore_camera_hardening
        - not win11stig_allowed_to_use_camera
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\webcam
        name: Deny
        type: string
        data: Deny

    - name: "MEDIUM | WN11-CC-000007 | PATCH | Windows 11 must cover or disable the built-in or attached camera when not in use. | Disable built-in camera via registry if camera use is allowed."
      when:
        - not win11stig_ignore_camera_hardening
        - win11stig_allowed_to_use_camera
        - wn11_cc_000007_builtin_cameras | length > 0
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\webcam
        name: Deny
        type: string
        data: Deny

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Warn if USB camera is plugged in manual disconnection required."
      when:
        - not win11stig_ignore_camera_hardening
        - win11stig_allowed_to_use_camera
        - wn11_cc_000007_usb_cameras | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! An external (USB) camera is connected!"
          - "You must manually disconnect the camera when not in use"
          - "or cover it to be in compliance."

    - name: "MEDIUM | WN11-CC-000007 | AUDIT | Windows 11 must cover or disable the built-in or attached camera when not in use. | Warn Count."
      when: >-
        (not win11stig_ignore_camera_hardening and win11stig_allowed_to_use_camera and wn11_cc_000007_usb_cameras | length > 0) or
        (win11stig_ignore_camera_hardening and win11stig_allowed_to_use_camera)
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000007'

- name: "MEDIUM | WN11-CC-000010 | PATCH | The display of slide shows on the lock screen must be disabled."
  when: wn11_cc_000010
  tags:
    - WN11-CC-000010
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253352r958478_rule
    - V-253352
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
    name: NoLockScreenSlideshow
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000020 | PATCH | IPv6 source routing must be configured to highest protection."
  when: wn11_cc_000020
  tags:
    - WN11-CC-000020
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253353r991589_rule
    - V-253353
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters
    name: DisableIpSourceRouting
    data: 2
    type: dword

- name: "MEDIUM | WN11-CC-000025 | PATCH | The system must be configured to prevent IP source routing."
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters
    name: DisableIPSourceRouting
    data: 2
    type: dword
  when: wn11_cc_000025
  tags:
    - WN11-CC-000025
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253354r991589_rule
    - V-253354
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b

- name: "MEDIUM | WN11-CC-000037 | PATCH | Local administrator accounts must have their privileged token filtered to prevent elevated privileges from being used over the network on domain systems."
  when:
    - wn11_cc_000037
    - discovered_domain_joined
  tags:
    - WN11-CC-000037
    - CAT2
    - CCI-001084
    - SRG-OS-000134-GPOS-00068
    - SV-253357r958518_rule
    - V-253357
    - NIST800-53_SC-3
    - NIST800-53A_SC-3.1_ii
    - NIST800-53R4_SC-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: LocalAccountTokenFilterPolicy
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000038 | PATCH | WDigest Authentication must be disabled."
  when: wn11_cc_000038
  tags:
    - WN11-CC-000038
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253358r958478_rule
    - V-253358
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\Wdigest
    name: UseLogonCredential
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000039 | PATCH | Run as different user must be removed from context menus."
  when: wn11_cc_000039
  tags:
    - WN11-CC-000039
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253359r958478_rule
    - V-253359
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Classes\{{ item }}\shell\runasuser
    name: SuppressionPolicy
    data: 4096
    type: dword
  with_items:
    - batfile
    - cmdfile
    - exefile
    - mscfile

- name: "MEDIUM | WN11-CC-000040 | PATCH | Insecure logons to an SMB server must be disabled."
  when: wn11_cc_000040
  tags:
    - WN11-CC-000040
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253360r991589_rule
    - V-253360
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation
    name: AllowInsecureGuestAuth
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000044 | PATCH | Internet connection sharing must be disabled."
  when: wn11_cc_000044
  tags:
    - WN11-CC-000044
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253361r958478_rule
    - V-253361
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections
    name: NC_ShowSharedAccessUI
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000050 | PATCH | Hardened UNC Paths must be defined to require mutual authentication and integrity for at least the SYSVOL and NETLOGON shares."
  when:
    - wn11_cc_000050
    - discovered_domain_joined
  tags:
    - WN11-CC-000050
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253362r991589_rule
    - V-253362
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths
    name: "{{ item }}"
    data: RequireMutualAuthentication=1, RequireIntegrity=1
    type: string
  with_items:
    - \\*\SYSVOL
    - \\*\NETLOGON

- name: "MEDIUM | WN11-CC-000052 | PATCH | Windows 11 must be configured to prioritize ECC Curves with longer key lengths first."
  when: wn11_cc_000052
  tags:
    - WN11-CC-000052
    - CAT2
    - CCI-000803
    - SRG-OS-000120-GPOS-00061
    - SV-253363r971535_rule
    - V-253363
    - NIST800-53_IA-7
    - NIST800-53A_IA-7.1
    - NIST800-53R4_IA-7
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Cryptography\Configuration\SSL\00010002
    name: EccCurves
    data: NistP384 NistP256
    type: multistring

- name: "MEDIUM | WN11-CC-000055 | PATCH | Simultaneous connections to the Internet or a Windows domain must be limited."
  when: wn11_cc_000055
  tags:
    - WN11-CC-000055
    - CAT2
    - CCI-002418
    - SRG-OS-000481-GPOS-00481
    - SV-253364r958358_rule
    - V-253364
    - NIST800-53R4_SC-8
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy
    name: fMinimizeConnections
    data: 3
    type: dword

- name: "MEDIUM | WN11-CC-000060 | PATCH | Connections to non-domain networks when connected to a domain authenticated network must be blocked."
  when:
    - wn11_cc_000060
    - discovered_domain_joined
  tags:
    - WN11-CC-000060
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253365r991589_rule
    - V-253365
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy
    name: fBlockNonDomain
    data: 1
    type: dword

# This functionality has been removed in Windows 11 v1803 and newer and is not applicable to those newer versions
# Add the following to the when statement for Windows 11 ansible_distribution_version <= "10.0.1803.0"
- name: "MEDIUM | WN11-CC-000065 | PATCH | Wi-Fi Sense must be disabled."
  when: wn11_cc_000065
  tags:
    - WN11-CC-000065
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253366r991589_rule
    - V-253366
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config
    name: AutoConnectAllowedOEM
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000066 | PATCH | Command line data must be included in process creation events."
  when: wn11_cc_000066
  tags:
    - WN11-CC-000066
    - CAT2
    - CCI-000135
    - SRG-OS-000042-GPOS-00020
    - SV-253367r958422_rule
    - V-253367
    - NIST800-53_AU-3_1
    - NIST800-53A_AU-3_1.1_ii
    - NIST800-53R4_AU-3_1
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Audit
    name: ProcessCreationIncludeCmdLine_Enabled
    data: 1
    type: dword

# This control is not applicable to Windows 11 version 1507 and 1607
# Add the following to the when statement for Windows 11
#     - ansible_distribution_version != "10.0.1507.0" or
#       ansible_distribution_version != "10.0.1607.0"
- name: "MEDIUM | WN11-CC-000068 | PATCH | Windows 11 must be configured to enable Remote host allows delegation of non-exportable credentials."
  when: wn11_cc_000068
  tags:
    - WN11-CC-000068
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253368r991589_rule
    - V-253368
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation
    name: AllowProtectedCreds
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000070 | PATCH | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection."
  when:
    - wn11_cc_000070
    - not discovered_vdi_non_persistent
  tags:
    - WN11-CC-000070
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253369r991589_rule
    - V-253369
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000070 | PATCH | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Set virtualization-based Security enabled."
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard
        name: EnableVirtualizationBasedSecurity
        data: 1
        type: dword

    - name: "MEDIUM | WN11-CC-000070 | PATCH | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Set Variable For Secure Boot."
      when: win11stig_enable_virtualization_based_security == 1 or win11stig_enable_virtualization_based_security == 3
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard
        name: RequirePlatformSecurityFeatures
        data: "{{ win11stig_enable_virtualization_based_security }}"
        type: dword

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Warning Check For Variable Standards."
      when:
        - win11stig_enable_virtualization_based_security != 1
        - win11stig_enable_virtualization_based_security != 3
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_enable_virtualization_based_security. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Warning Count."
      when:
        - win11stig_enable_virtualization_based_security != 1
        - win11stig_enable_virtualization_based_security != 3
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000070'

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Check Secure Boot status"
      ansible.windows.win_shell: Confirm-SecureBootUEFI
      changed_when: false
      failed_when: false
      register: wn11_cc_000070_secure_boot_status

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Check Virtualization-Based Security (VBS) status"
      ansible.windows.win_shell: (Get-CimInstance -ClassName Win32_DeviceGuard -Namespace root\Microsoft\Windows\DeviceGuard).VirtualizationBasedSecurityStatus
      changed_when: false
      failed_when: false
      register: wn11_cc_000070_vbs_status

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Check if Device Guard is running"
      ansible.windows.win_shell: (Get-CimInstance -ClassName Win32_DeviceGuard -Namespace root\Microsoft\Windows\DeviceGuard).SecurityServicesRunning
      changed_when: false
      failed_when: false
      register: wn11_cc_000070_device_guard_status

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Check if Hyper-V is installed"
      ansible.windows.win_shell: Get-WindowsOptionalFeature -FeatureName Microsoft-Hyper-V-All -Online | Select-Object -ExpandProperty State
      changed_when: false
      failed_when: false
      register: wn11_cc_000070_hyper_v_status

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Check if CPU supports DMA Protection (IOMMU)"
      ansible.windows.win_shell: (Get-CimInstance -ClassName Win32_DeviceGuard -Namespace root\Microsoft\Windows\DeviceGuard).AvailableSecurityProperties
      changed_when: false
      failed_when: false
      register: wn11_cc_000070_dma_protection_status

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Display results and warnings"
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════"
          - "   Virtualization-Based Security (VBS) Check Results   "
          - "═══════════════════════════════════════════════════════"
          - "Secure Boot Enabled   : {{ 'Yes' if wn11_cc_000070_secure_boot_status.stdout == 'True' else 'No (Finding)' }}"
          - "VBS Running           : {{ 'Yes' if wn11_cc_000070_vbs_status.stdout | int == 2 else 'No (Finding)' }}"
          - "Device Guard Running  : {{ 'Yes' if '1' in wn11_cc_000070_device_guard_status.stdout else 'No (Finding)' }}"
          - "Hyper-V Installed     : {{ 'Yes' if 'Enabled' in wn11_cc_000070_hyper_v_status.stdout else 'No (Finding)' }}"
          - "DMA Protection        : {{ 'Yes' if '3' in wn11_cc_000070_dma_protection_status.stdout else 'No (Hardware Limitation?)' }}"
          - "═══════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-CC-000070 | AUDIT | Virtualization-based Security must be enabled on Windows 11 with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Warning Count."
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000070'

- name: "MEDIUM | WN11-CC-000080 | PATCH | Virtualization-based protection of code integrity must be enabled."
  when:
    - wn11_cc_000080
    - not discovered_vdi_non_persistent
  tags:
    - WN11-CC-000080
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253371r991589_rule
    - V-253371
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000080 | PATCH | Virtualization-based protection of code integrity must be enabled. | Set registry settings."
      when: win11stig_hypervisor_enforce_code_integrity == 1 or win11stig_hypervisor_enforce_code_integrity == 2
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard\
        name: HypervisorEnforcedCodeIntegrity
        data: "{{ win11stig_hypervisor_enforce_code_integrity }}"
        type: dword

    - name: "MEDIUM | WN11-CC-000080 | AUDIT | Virtualization-based protection of code integrity must be enabled. | Warning Check For Variable Standards."
      when:
        - win11stig_hypervisor_enforce_code_integrity != 1
        - win11stig_hypervisor_enforce_code_integrity != 2
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_hypervisor_enforce_code_integrity. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-CC-000080 | AUDIT | Virtualization-based protection of code integrity must be enabled. | Warning Count."
      when:
        - win11stig_hypervisor_enforce_code_integrity != 1
        - win11stig_hypervisor_enforce_code_integrity != 2
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000080'

- name: "MEDIUM | WN11-CC-000085 | PATCH | Early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers."
  when: wn11_cc_000085
  tags:
    - WN11-CC-000085
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253372r991589_rule
    - V-253372
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000085 | PATCH | Early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers. | Apply registry settings."
      when: win11stig_boot_driver_init_policy == 1 or win11stig_boot_driver_init_policy == 3 or win11stig_boot_driver_init_policy == 8
      ansible.windows.win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch
        name: DriverLoadPolicy
        data: "{{ win11stig_boot_driver_init_policy }}"
        type: dword

    - name: "MEDIUM | WN11-CC-000085 | AUDIT | Early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers. | Warning Check For Variable Standards."
      when:
        - win11stig_boot_driver_init_policy != 1
        - win11stig_boot_driver_init_policy != 3
        - win11stig_boot_driver_init_policy != 8
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_boot_driver_init_policy. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-CC-000085 | AUDIT | Early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers. | Warning Count."
      when:
        - win11stig_boot_driver_init_policy != 1
        - win11stig_boot_driver_init_policy != 3
        - win11stig_boot_driver_init_policy != 8
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000085'

- name: "MEDIUM | WN11-CC-000090 | PATCH | Group Policy objects must be reprocessed even if they have not changed."
  when: wn11_cc_000090
  tags:
    - WN11-CC-000090
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253373r991589_rule
    - V-253373
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}
    name: NoGPOListChanges
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000100 | PATCH | Downloading print driver packages over HTTP must be prevented."
  when: wn11_cc_000100
  tags:
    - WN11-CC-000100
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253374r958478_rule
    - V-253374
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
    name: DisableWebPnPDownload
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000105 | PATCH | Web publishing and online ordering wizards must be prevented from downloading a list of providers."
  when: wn11_cc_000105
  tags:
    - WN11-CC-000105
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253375r958478_rule
    - V-253375
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
    name: NoWebServices
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000110 | PATCH | Printing over HTTP must be prevented."
  when: wn11_cc_000110
  tags:
    - WN11-CC-000110
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253376r958478_rule
    - V-253376
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
    name: DisableHTTPPrinting
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000115 | PATCH | Systems must at least attempt device authentication using certificates."
  when:
    - wn11_cc_000115
    - discovered_domain_joined
  tags:
    - WN11-CC-000115
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253377r991589_rule
    - V-253377
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters
    name: DevicePKInitEnabled
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000120 | PATCH | The network selection user interface (UI) must not be displayed on the logon screen."
  when: wn11_cc_000120
  tags:
    - WN11-CC-000120
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253378r958478_rule
    - V-253378
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
    name: DontDisplayNetworkSelectionUI
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000130 | PATCH | Local users on domain-joined computers must not be enumerated."
  when:
    - wn11_cc_000130
    - discovered_domain_joined
  tags:
    - WN11-CC-000130
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253379r958478_rule
    - V-253379
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
    name: EnumerateLocalUsers
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000145 | PATCH | Users must be prompted for a password on resume from sleep (on battery)."
  when: wn11_cc_000145
  tags:
    - WN11-CC-000145
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00156
    - SV-253380r1016434_rule
    - V-253380
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
    name: DCSettingIndex
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000150 | PATCH | The user must be prompted for a password on resume from sleep (plugged in)."
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
    name: ACSettingIndex
    data: 1
    type: dword
  when: wn11_cc_000150
  tags:
    - WN11-CC-000150
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00156
    - SV-253381r1016435_rule
    - V-253381
    - NIST800-53R4_IA-11

- name: "MEDIUM | WN11-CC-000165 | PATCH | Unauthenticated RPC clients must be restricted from connecting to the RPC server."
  when: wn11_cc_000165
  tags:
    - WN11-CC-000165
    - CAT2
    - CCI-001967
    - SRG-OS-000379-GPOS-00164
    - SV-253383r971545_rule
    - V-253383
    - NIST800-53R4_IA-3_1
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Rpc
    name: RestrictRemoteClients
    data: 1
    type: dword

# Windows 11 v1507 LTSB version does not include this setting and this control is NA to those systems
# - ansible_distribution_version != "10.0.1507.0"
- name: "MEDIUM | WN11-CC-000195 | PATCH | Enhanced anti-spoofing for facial recognition must be enabled on Window 11."
  when: wn11_cc_000195
  tags:
    - WN11-CC-000195
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253389r991589_rule
    - V-253389
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Biometrics\FacialFeatures
    name: EnhancedAntiSpoofing
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000200 | PATCH | Administrator accounts must not be enumerated during elevation."
  when: wn11_cc_000200
  tags:
    - WN11-CC-000200
    - CAT2
    - CCI-001084
    - SRG-OS-000134-GPOS-00068
    - SV-253391r958518_rule
    - V-253391
    - NIST800-53_SC-3
    - NIST800-53A_SC-3.1_ii
    - NIST800-53R4_SC-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI
    name: EnumerateAdministrators
    data: 0
    type: dword

# Windows 11 v1507 LTSB version does not include this setting and this control is NA to those systems
# - ansible_distribution_version >= "10.0.1709.0"
- name: "MEDIUM | WN11-CC-000204 | PATCH | If Enhanced diagnostic data is enabled it must be limited to the minimum required to support Windows Analytics."
  when: wn11_cc_000204
  tags:
    - WN11-CC-000204
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253392r991589_rule
    - V-253392
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000204 | AUDIT | If Enhanced diagnostic data is enabled it must be limited to the minimum required to support Windows Analytics. | Get current Telemetry setting."
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
        name: AllowTelemetry
      register: wn11_cc_000204_telemetry_value

    - name: "MEDIUM | WN11-CC-000204 | PATCH | If Enhanced diagnostic data is enabled it must be limited to the minimum required to support Windows Analytics. | Set Registry If Set To Full."
      when:
        - wn11_cc_000204_telemetry_value.exists | default(false)
        - wn11_cc_000204_telemetry_value.value | int == 2
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
        name: LimitEnhancedDiagnosticDataWindowsAnalytics
        data: 1
        type: dword

- name: "MEDIUM | WN11-CC-000205 | PATCH | Windows Telemetry must not be configured to Full."
  when: wn11_cc_000205
  tags:
    - WN11-CC-000205
    - CAT2
    - CCI-001312
    - SRG-OS-000205-GPOS-00083
    - SV-253393r958564_rule
    - V-253393
    - NIST800-53_SI-11_b
    - NIST800-53A_SI-11.1_iii
    - NIST800-53R4_SI-11_a
  block:
    - name: "MEDIUM | WN11-CC-000205 | PATCH | Windows Telemetry must not be configured to Full. | Set Registry Setting"
      when: win11stig_allow_telemetry_value == 0 or win11stig_allow_telemetry_value == 1
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
        name: AllowTelemetry
        data: "{{ win11stig_allow_telemetry_value }}"
        type: dword

    - name: "MEDIUM | WN11-CC-000205 | AUDIT | Windows Telemetry must not be configured to Full. | Warning Check For Variable Standards."
      when:
        - win11stig_allow_telemetry_value != 0
        - win11stig_allow_telemetry_value != 1
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_allow_telemetry_value. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-CC-000205 | AUDIT | Windows Telemetry must not be configured to Full. | Warning Count."
      when:
        - win11stig_allow_telemetry_value != 0
        - win11stig_allow_telemetry_value != 1
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000205'

- name: "MEDIUM | WN11-CC-000210 | PATCH | The Windows Defender SmartScreen for Explorer must be enabled."
  when: wn11_cc_000210
  tags:
    - WN11-CC-000210
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253395r958478_rule
    - V-253395
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  block:
    - name: "MEDIUM | WN11-CC-000210 | PATCH | The Windows Defender SmartScreen for Explorer must be enabled. | SmartScreen enable"
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
        name: EnableSmartScreen
        data: 1
        type: dword

    - name: "MEDIUM | WN11-CC-000210 | PATCH | The Windows Defender SmartScreen for Explorer must be enabled. | Block ShellSmartScreen"
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
        name: ShellSmartScreenLevel
        data: Block
        type: string

- name: "MEDIUM | WN11-CC-000215 | PATCH | Explorer Data Execution Prevention must be enabled."
  when: wn11_cc_000215
  tags:
    - WN11-CC-000215
    - CAT2
    - CCI-002824
    - SRG-OS-000433-GPOS-00192
    - SV-253396r958928_rule
    - V-253396
    - NIST800-53R4_SI-16
  block:
    - name: "MEDIUM | WN11-CC-000215 | AUDIT | Explorer Data Execution Prevention must be enabled. | Get current setting."
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
        name: NoDataExecutionPrevention
      register: wn11_cc_000215_no_data_execution_prevention

    - name: "MEDIUM | WN11-CC-000215 | PATCH | Explorer Data Execution Prevention must be enabled. | Apply if it exists."
      when: wn11_cc_000215_no_data_execution_prevention.exists | default(false)
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
        name: NoDataExecutionPrevention
        data: 0
        type: dword

- name: "MEDIUM | WN11-CC-000225 | PATCH | File Explorer shell protocol must run in protected mode."
  when: wn11_cc_000225
  tags:
    - WN11-CC-000225
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253398r991589_rule
    - V-253398
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
    name: PreXPSP2ShellProtocolBehavior
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000252 | PATCH | Windows 11 must be configured to disable Windows Game Recording and Broadcasting."
  when:
    - wn11_cc_000252
    - not (discovered_displayversion.exists | default(false) and discovered_displayversion.value is search("LTSC"))
  tags:
    - WN11-CC-000252
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253399r958478_rule
    - V-253399
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR
    name: AllowGameDVR
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000255 | PATCH | The use of a hardware security device with Windows Hello for Business must be enabled."
  when:
    - wn11_cc_000255
    - discovered_vdi_persistent
  tags:
    - WN11-CC-000255
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253400r991589_rule
    - V-253400
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\PassportForWork
    name: RequireSecurityDevice
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000260 | PATCH | Windows 11 must be configured to require a minimum pin length of six characters or greater."
  when: wn11_cc_000260
  tags:
    - WN11-CC-000260
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253401r991589_rule
    - V-253401
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000260 | PATCH | Windows 11 must be configured to require a minimum pin length of six characters or greater. | Apply Registry Setting."
      when: win11stig_min_pin_length >= 6
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\PassportForWork\PINComplexity
        name: MinimumPINLength
        data: "{{ win11stig_min_pin_length }}"
        type: dword

    - name: "MEDIUM | WN11-CC-000260 | AUDIT | Windows 11 must be configured to require a minimum pin length of six characters or greater. | Warning Check For Variable Standards."
      when: win11stig_min_pin_length < 6
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_min_pin_length. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-CC-000260 | AUDIT | Windows 11 must be configured to require a minimum pin length of six characters or greater. | Warning Count."
      when: win11stig_min_pin_length < 6
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000260'

- name: "MEDIUM | WN11-CC-000270 | PATCH | Passwords must not be saved in the Remote Desktop Client."
  when: wn11_cc_000270
  tags:
    - WN11-CC-000270
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00156
    - SV-253402r1016436_rule
    - V-253402
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
    name: DisablePasswordSaving
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000275 | PATCH | Local drives must be prevented from sharing with Remote Desktop Session Hosts."
  when: wn11_cc_000275
  tags:
    - WN11-CC-000275
    - CAT2
    - CCI-001090
    - SRG-OS-000138-GPOS-00069
    - SV-253403r958524_rule
    - V-253403
    - NIST800-53_SC-4
    - NIST800-53A_SC-4.1
    - NIST800-53R4_SC-4
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
    name: fDisableCdm
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000280 | PATCH | Remote Desktop Services must always prompt a client for passwords upon connection."
  when: wn11_cc_000280
  tags:
    - WN11-CC-000280
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00156
    - SV-253404r1016437_rule
    - V-253404
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
    name: fPromptForPassword
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000285 | PATCH | The Remote Desktop Session Host must require secure RPC communications."
  when: wn11_cc_000285
  tags:
    - WN11-CC-000285
    - CAT2
    - CCI-001453
    - SRG-OS-000250-GPOS-00093
    - SV-253405r991554_rule
    - V-253405
    - NIST800-53_AC-17_2
    - NIST800-53A_AC-17_2.1
    - NIST800-53R4_AC-17_2
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
    name: fEncryptRPCTraffic
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000290 | PATCH | Remote Desktop Services must be configured with the client connection encryption set to the required level."
  when: wn11_cc_000290
  tags:
    - WN11-CC-000290
    - CAT2
    - CCI-000068
    - SRG-OS-000033-GPOS-00014
    - SV-253406r958408_rule
    - V-253406
    - NIST800-53_AC-17_2
    - NIST800-53A_AC-17_2.1
    - NIST800-53R4_AC-17_2
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
    name: MinEncryptionLevel
    data: 3
    type: dword

- name: "MEDIUM | WN11-CC-000295 | PATCH | Attachments must be prevented from being downloaded from RSS feeds."
  when: wn11_cc_000295
  tags:
    - WN11-CC-000295
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253407r991589_rule
    - V-253407
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
    name: DisableEnclosureDownload
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000300 | PATCH | Basic authentication for RSS feeds over HTTP must not be used."
  when: wn11_cc_000300
  tags:
    - WN11-CC-000300
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253408r958478_rule
    - V-253408
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  block:
    - name: "MEDIUM | WN11-CC-000300 | AUDIT | Basic authentication for RSS feeds over HTTP must not be used. | Get current setting."
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
        name: AllowBasicAuthInClear
      register: wn11_cc_000300_allow_basic_auth_in_clear

    - name: "MEDIUM | WN11-CC-000300 | PATCH | Basic authentication for RSS feeds over HTTP must not be used. | Apply if it exists."
      when: wn11_cc_000300_allow_basic_auth_in_clear.exists | default(false)
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
        name: AllowBasicAuthInClear
        data: 0
        type: dword

- name: "MEDIUM | WN11-CC-000305 | PATCH | Indexing of encrypted files must be turned off."
  when: wn11_cc_000305
  tags:
    - WN11-CC-000305
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253409r958478_rule
    - V-253409
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search
    name: AllowIndexingEncryptedStoresOrItems
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000310 | PATCH | Users must be prevented from changing installation options."
  when: wn11_cc_000310
  tags:
    - WN11-CC-000310
    - CAT2
    - CCI-001812
    - SRG-OS-000362-GPOS-00149
    - SV-253410r1016438_rule
    - V-253410
    - NIST800-53R4_CM-11_2
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
    name: EnableUserControl
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000320 | PATCH | Users must be notified if a web-based program attempts to install software."
  when: wn11_cc_000320
  tags:
    - WN11-CC-000320
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253412r991589_rule
    - V-253412
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000320 | AUDIT | Users must be notified if a web-based program attempts to install software. | Get current setting."
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
        name: SafeForScripting
      register: wn11_cc_000320_safe_for_scripting

    - name: "MEDIUM | WN11-CC-000320 | PATCH | Users must be notified if a web-based program attempts to install software. | Get current setting."
      when: wn11_cc_000320_safe_for_scripting.exists | default(false)
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
        name: SafeForScripting
        data: 0
        type: dword

- name: "MEDIUM | WN11-CC-000325 | PATCH | Automatically signing in the last interactive user after a system-initiated restart must be disabled."
  when: wn11_cc_000325
  tags:
    - WN11-CC-000325
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00229
    - SV-253413r991591_rule
    - V-253413
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: DisableAutomaticRestartSignOn
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000326 | PATCH | PowerShell script block logging must be enabled on Windows 11."
  when: wn11_cc_000326
  tags:
    - WN11-CC-000326
    - CAT2
    - CCI-000135
    - SRG-OS-000042-GPOS-00020
    - SV-253414r958422_rule
    - V-253414
    - NIST800-53_AU-3_1
    - NIST800-53A_AU-3_1.1_ii
    - NIST800-53R4_AU-3_1
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging
    name: EnableScriptBlockLogging
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000327 | PATCH | PowerShell Transcription must be enabled on Windows 11."
  when: wn11_cc_000327
  tags:
    - WN11-CC-000327
    - CAT2
    - CCI-000134
    - SRG-OS-000041-GPOS-00019
    - SV-253415r958420_rule
    - V-253415
    - NIST800-53_AU-3
    - NIST800-53A_AU-3.1
    - NIST800-53R4_AU-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\Transcription
    name: EnableTranscripting
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000335 | PATCH | The Windows Remote Management (WinRM) client must not allow unencrypted traffic."
  when:
    - wn11_cc_000335
    - not win_skip_for_test
  tags:
    - WN11-CC-000335
    - CAT2
    - CCI-002890
    - SRG-OS-000393-GPOS-00173
    - SV-253417r958848_rule
    - V-253417
    - NIST800-53R4_MA-4_6
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
    name: AllowUnencryptedTraffic
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000350 | PATCH | The Windows Remote Management (WinRM) service must not allow unencrypted traffic."
  when:
    - wn11_cc_000350
    - not win_skip_for_test
  tags:
    - WN11-CC-000350
    - CAT2
    - CCI-003123
    - SRG-OS-000393-GPOS-00174
    - SV-253419r958850_rule
    - V-253419
    - NIST800-53R4_MA-4_6
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
    name: AllowUnencryptedTraffic
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000355 | PATCH | The Windows Remote Management (WinRM) service must not store RunAs credentials."
  when: wn11_cc_000355
  tags:
    - WN11-CC-000355
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00156
    - SV-253420r1016440_rule
    - V-253420
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
    name: DisableRunAs
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000360 | PATCH | The Windows Remote Management (WinRM) client must not use Digest authentication."
  when: wn11_cc_000360
  tags:
    - WN11-CC-000360
    - CAT2
    - CCI-000877
    - SRG-OS-000125-GPOS-00065
    - SV-253421r958510_rule
    - V-253421
    - NIST800-53_MA-4_c
    - NIST800-53A_MA-4.1_iv
    - NIST800-53R4_MA-4_c
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
    name: AllowDigest
    data: 0
    type: dword

# If "Allow voice activation” policy is configured to disallow applications to be activated with voice for all users this control is NA
# - ansible_distribution_version >= "10.0.1903.0"
- name: "MEDIUM | WN11-CC-000365 | PATCH | Windows 11 must be configured to prevent Windows apps from being activated by voice while the system is locked."
  when: wn11_cc_000365
  tags:
    - WN11-CC-000365
    - CAT2
    - CCI-000056
    - SRG-OS-000028-GPOS-00009
    - SV-253422r958400_rule
    - V-253422
    - NIST800-53_AC-11_b
    - NIST800-53A_AC-11.1_iii
    - NIST800-53R4_AC-11_b
  block:
    - name: "MEDIUM | WN11-CC-000365 | AUDIT | Windows 11 must be configured to prevent Windows apps from being activated by voice while the system is locked. | Check for LetAppsActivateWithVoice"
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy\
        name: LetAppsActivateWithVoice
      register: wn11_cc_000365_let_apps_activate_with_voice

    - name: "MEDIUM | WN11-CC-000365 | PATCH | Windows 11 must be configured to prevent Windows apps from being activated by voice while the system is locked. | Apply Registry Setting"
      when:
        - not wn11_cc_000365_let_apps_activate_with_voice.exists | default(false) or wn11_cc_000365_let_apps_activate_with_voice.value | int != 2
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy
        name: LetAppsActivateWithVoiceAboveLock
        data: 2
        type: dword

- name: "MEDIUM | WN11-CC-000370 | PATCH | The convenience PIN for Windows 11 must be disabled."
  when: wn11_cc_000370
  tags:
    - WN11-CC-000370
    - CAT2
    - CCI-000381
    - SRG-OS-000095-GPOS-00049
    - SV-253423r958478_rule
    - V-253423
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows\System
    name: AllowDomainPINLogon
    data: 0
    type: dword

- name: "MEDIUM | WN11-CC-000385 | PATCH | Windows Ink Workspace must be configured to disallow access above the lock."
  when: wn11_cc_000385
  tags:
    - WN11-CC-000385
    - CAT2
    - CCI-000381
    - SRG-OS-000031-GPOS-00012
    - SV-253424r958404_rule
    - V-253424
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\WindowsInkWorkspace
    name: AllowWindowsInkWorkspace
    data: 1
    type: dword

- name: "MEDIUM | WN11-EP-000310 | PATCH | Windows 11 Kernel (Direct Memory Access) DMA Protection must be enabled."
  when: wn11_ep_000310
  tags:
    - WN11-EP-000310
    - CAT2
    - CCI-000172
    - SRG-OS-000471-GPOS-00216
    - SV-253426r991580_rule
    - V-253426
    - NIST800-53_AU-12_c
    - NIST800-53A_AU-12.1_iv
    - NIST800-53R4_AU-12_c
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows\Kernel DMA Protection
    name: DeviceEnumerationPolicy
    data: 0
    type: dword

- name: "MEDIUM | WN11-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store."
  when: wn11_pk_000005
  tags:
    - WN11-PK-000005
    - CAT2
    - CCI-000185
    - SRG-OS-000066-GPOS-00034
    - SV-253427r958448_rule
    - V-253427
    - NIST800-53_IA-5_2
    - NIST800-53A_IA-5_2.1
    - NIST800-53R4_IA-5_2_a
  block:
    - name: "MEDIUM | WN11-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 3."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:LocalMachine\root |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 3, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "D73CA91102A2204A36459ED32213B467D7CE97FB" -and
                        $_.NotAfter -eq (Get-Date "12/30/2029") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: DoD Root CA 3"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000005_root_3_check

    - name: "MEDIUM | WN11-PK-000006 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 4."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:LocalMachine\root |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 4, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "B8269F25DBD937ECAFD4C35A9838571723F2D026" -and
                        $_.NotAfter -eq (Get-Date "07/25/2032") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: DoD Root CA 4"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000005_root_4_check

    - name: "MEDIUM | WN11-PK-000007 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 5."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:LocalMachine\root |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 5, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "4ECB5CC3095670454DA1CBD410FC921F46B8564B" -and
                        $_.NotAfter -eq (Get-Date "06/14/2041") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: DoD Root CA 5"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000005_root_5_check

    - name: "MEDIUM | WN11-PK-000008 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 6."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:LocalMachine\root |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 6, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "D37ECF61C0B4ED88681EF3630C4E2FC787B37AEF" -and
                        $_.NotAfter -eq (Get-Date "01/24/2053") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: DoD Root CA 6"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000005_root_6_check

    - name: "MEDIUM | WN11-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Display results and warnings"
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════"
          - "        DoD Root CA Certificates Check Results         "
          - "═══════════════════════════════════════════════════════"
          - "DoD Root CA 3   : {{ 'Valid' if wn11_pk_000005_root_3_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "DoD Root CA 4   : {{ 'Valid' if wn11_pk_000005_root_4_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "DoD Root CA 5   : {{ 'Valid' if wn11_pk_000005_root_5_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "DoD Root CA 6   : {{ 'Valid' if wn11_pk_000005_root_6_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "═══════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Warn Count."
      when:
        - wn11_pk_000005_root_3_check.rc != 0 or
          wn11_pk_000005_root_4_check.rc != 0 or
          wn11_pk_000005_root_5_check.rc != 0 or
          wn11_pk_000005_root_6_check.rc != 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-PK-000005'

- name: "MEDIUM | WN11-PK-000010 | AUDIT | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems."
  when: wn11_pk_000010
  tags:
    - WN11-PK-000010
    - CAT2
    - CCI-000185
    - SRG-OS-000066-GPOS-00034
    - SV-253428r958448_rule
    - V-253428
    - NIST800-53_IA-5_2
    - NIST800-53A_IA-5_2.1
    - NIST800-53R4_IA-5_2_a
  block:
    - name: "MEDIUM | WN11-PK-000010 | AUDIT | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Check For ECA Root CA 4."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:LocalMachine\root |
        Where-Object { $_.Subject -eq "CN=ECA Root CA 4, OU=ECA, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "73E8BB08E337D6A5A6AEF90CFFDD97D9176CB582" -and
                        $_.NotAfter -eq (Get-Date "12/30/2029") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: ECA Root CA 4"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000010_eca_root_4_check

    - name: "MEDIUM | WN11-PK-000010 | AUDIT | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Display results and warnings"
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════"
          - "          ECA Root CA Certificates Check Result        "
          - "═══════════════════════════════════════════════════════"
          - "ECA Root CA 4   : {{ 'Valid' if wn11_pk_000010_eca_root_4_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "═══════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-PK-000010 | AUDIT | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Warn Count."
      when: wn11_pk_000010_eca_root_4_check.rc != 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-PK-000010'

- name: "MEDIUM | WN11-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems."
  when: wn11_pk_000015
  tags:
    - WN11-PK-000015
    - CAT2
    - CCI-002470
    - SRG-OS-000066-GPOS-00034
    - SV-253429r958448_rule
    - V-253429
    - NIST800-53R4_SC-25_5
  block:
    - name: "MEDIUM | WN11-PK-000015 | AUDIT | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Check For DoD Root CA 3 (Expiring 11/16/2024)."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:Localmachine\disallowed |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 3, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Issuer -eq "CN=DoD Interoperability Root CA 2, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "49CBE933151872E17C8EAE7F0ABA97FB610F6477" -and
                        $_.NotAfter -eq (Get-Date "11/16/2024") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Issuer: $($cert.Issuer) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: DoD Root CA 3 (Expiring 11/16/2024)"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000015_dod_root_3_2024_check

    - name: "MEDIUM | WN11-PK-000015 | AUDIT | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Check For DoD Root CA 3 (Expired 1/22/2022)."
      ansible.windows.win_shell: |
        Get-ChildItem -Path Cert:Localmachine\disallowed |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 3, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Issuer -eq "CN=DoD Interoperability Root CA 2, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "AC06108CA348CC03B53795C64BF84403C1DBD341" -and
                        $_.NotAfter -eq (Get-Date "1/22/2022") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Issuer: $($cert.Issuer) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: DoD Root CA 3 (Expired 1/22/2022)"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000015_dod_root_3_2022_check

    - name: "MEDIUM | WN11-PK-000015 | AUDIT | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Display results and warnings"
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════"
          - "        DoD Root CA 3 Certificates Check Results       "
          - "═══════════════════════════════════════════════════════"
          - "DoD Root CA 3 (Expiring 11/16/2024) : {{ 'Valid' if wn11_pk_000015_dod_root_3_2024_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "DoD Root CA 3 (Expired 1/22/2022)   : {{ 'Valid' if wn11_pk_000015_dod_root_3_2022_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "═══════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-PK-000015 | AUDIT | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warn Count."
      when: wn11_pk_000015_dod_root_3_2024_check.rc != 0 or wn11_pk_000015_dod_root_3_2022_check.rc != 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-PK-000010'

- name: "MEDIUM | WN11-PK-000020 | AUDIT | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems."
  when: wn11_pk_000020
  tags:
    - WN11-PK-000020
    - CAT2
    - CCI-002470
    - SRG-OS-000403-GPOS-00182
    - SV-253430r958868_rule
    - V-253430
    - NIST800-53R4_SC-25_5
  block:
    - name: "MEDIUM | WN11-PK-000020 | AUDIT | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Check For DoD Root CA 3 (Expiring 07/18/2025)."
      ansible.windows.win_shell: |
        $cert = Get-ChildItem -Path Cert:LocalMachine\disallowed |
        Where-Object { $_.Subject -eq "CN=DoD Root CA 3, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Issuer -eq "CN=US DoD CCEB Interoperability Root CA 2, OU=PKI, OU=DoD, O=U.S. Government, C=US" -and
                        $_.Thumbprint -eq "9B74964506C7ED9138070D08D5F8B969866560C8" -and
                        $_.NotAfter -eq (Get-Date "07/18/2025 09:56:22 AM") }

        if ($cert) {
            Write-Output "Found: $($cert.Subject) | Issuer: $($cert.Issuer) | Thumbprint: $($cert.Thumbprint) | Expiration: $($cert.NotAfter)"
        } else {
            Write-Output "Missing or Incorrect Certificate: US DoD CCEB Interoperability Root CA Cross-Certificate"
            exit 1
        }
      changed_when: false
      failed_when: false
      register: wn11_pk_000020_dod_cceb_root_ca_check

    - name: "MEDIUM | WN11-PK-000020 | AUDIT | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Display results and warnings"
      ansible.builtin.debug:
        msg:
          - "═════════════════════════════════════════════════════════════════════════"
          - "         US DoD CCEB Interoperability Root CA Cross-Cert Check           "
          - "═════════════════════════════════════════════════════════════════════════"
          - "US DoD CCEB Interoperability Root CA 2 : {{ 'Valid' if wn11_pk_000020_dod_cceb_root_ca_check.rc == 0 else 'Not Valid (Finding)' }}"
          - "═════════════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-PK-000020 | AUDIT | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warn Count."
      when: wn11_pk_000020_dod_cceb_root_ca_check.rc != 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-PK-000020'

- name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained."
  when: wn11_rg_000005
  tags:
    - WN11-RG-000005
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253431r958726_rule
    - V-253431
    - NIST800-53R4_AC-6_10
  block:
    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Get actual ACL for HKLM:\\SOFTWARE"
      ansible.windows.win_shell: (Get-Acl -Path "HKLM:\SYSTEM").Access | Select-Object IdentityReference, RegistryRights, AccessControlType, IsInherited, InheritanceFlags, PropagationFlags | ConvertTo-Json -Depth 10
      changed_when: false
      failed_when: false
      register: wn11_rg_000005_software_acl_raw

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Parse actual ACL entries"
      ansible.builtin.set_fact:
        wn11_rg_000005_software_acl_extras: "{{ wn11_rg_000005_software_acl_raw.stdout | from_json }}"

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Initialize normalized ACL list"
      ansible.builtin.set_fact:
        wn11_rg_000005_actual_software_acl_normalized: []

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Normalize each ACL entry for comparison (STIG-aware)"
      vars:
        wn11_rg_000005_software_registry_rights_map:
          1: "QueryValues"
          2: "SetValue"
          4: "CreateSubKey"
          8: "EnumerateSubKeys"
          16: "Notify"
          32: "CreateLink"
          65536: "Delete"
          131072: "ReadPermissions"
          131078: "WriteKey"
          131097: "ReadKey"
          262144: "ChangePermissions"
          524288: "TakeOwnership"
          983103: "FullControl"
        wn11_rg_000005_software_access_control_type_map:
          0: "Allow"
          1: "Deny"
        wn11_rg_000005_software_inheritance_flags_map:
          0: "None"
          1: "ContainerInherit"
          2: "ObjectInherit"
        wn11_rg_000005_software_propagation_flags_map:
          0: "None"
          1: "NoPropagateInherit"
          2: "InheritOnly"
        wn11_rg_000005_software_normalized_acl_entry:
          IdentityReference: "{{ item.IdentityReference.Value }}"
          RegistryRights: "{{ wn11_rg_000005_software_registry_rights_map[item.RegistryRights] | default(item.RegistryRights) }}"
          AccessControlType: "{{ wn11_rg_000005_software_access_control_type_map[item.AccessControlType] | default(item.AccessControlType) }}"
          IsInherited: "{{ item.IsInherited }}"
          InheritanceFlags: "{{ wn11_rg_000005_software_inheritance_flags_map[item.InheritanceFlags] | default(item.InheritanceFlags) }}"
          PropagationFlags: "{{ wn11_rg_000005_software_propagation_flags_map[item.PropagationFlags] | default(item.PropagationFlags) }}"
      ansible.builtin.set_fact:
        wn11_rg_000005_actual_software_acl_normalized: "{{ wn11_rg_000005_actual_software_acl_normalized + [wn11_rg_000005_software_normalized_acl_entry] }}"
      loop: "{{ wn11_rg_000005_software_acl_extras }}"

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Compare expected vs actual ACLs (missing or incorrect)"
      ansible.builtin.set_fact:
        wn11_rg_000005_software_acl_diff: "{{ win11stig_expected_software_acl | difference(wn11_rg_000005_actual_software_acl_normalized) }}"

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Check for unexpected ACL entries (excluding known identities)"
      ansible.builtin.set_fact:
        wn11_rg_000005_software_acl_extras: >-
          {{
            wn11_rg_000005_actual_software_acl_normalized
            | difference(win11stig_expected_software_acl)
            | rejectattr('IdentityReference', 'in', win11stig_expected_software_acl | map(attribute='IdentityReference') | list)
            | list
          }}

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Get actual ACL for HKLM:\\SYSTEM"
      ansible.windows.win_shell: >
        (Get-Acl -Path "HKLM:\SYSTEM").Access |
        Select-Object IdentityReference, RegistryRights, AccessControlType, IsInherited, InheritanceFlags, PropagationFlags |
        ConvertTo-Json -Depth 10
      changed_when: false
      failed_when: false
      register: wn11_rg_000005_system_acl_raw

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Parse actual ACL entries"
      ansible.builtin.set_fact:
        wn11_rg_000005_system_acl_entries: "{{ wn11_rg_000005_system_acl_raw.stdout | from_json }}"

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Initialize normalized ACL list"
      ansible.builtin.set_fact:
        wn11_rg_000005_actual_system_acl_normalized: []

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Normalize each ACL entry for comparison (STIG-aware)"
      vars:
        wn11_rg_000005_system_registry_rights_map:
          1: "QueryValues"
          2: "SetValue"
          4: "CreateSubKey"
          8: "EnumerateSubKeys"
          16: "Notify"
          32: "CreateLink"
          65536: "Delete"
          131072: "ReadPermissions"
          131078: "WriteKey"
          131097: "ReadKey"
          262144: "ChangePermissions"
          524288: "TakeOwnership"
          983103: "FullControl"
        wn11_rg_000005_system_access_control_type_map:
          0: "Allow"
          1: "Deny"
        wn11_rg_000005_system_inheritance_flags_map:
          0: "None"
          1: "ContainerInherit"
          2: "ObjectInherit"
        wn11_rg_000005_system_propagation_flags_map:
          0: "None"
          1: "NoPropagateInherit"
          2: "InheritOnly"
        wn11_rg_000005_system_normalized_acl_entry:
          IdentityReference: "{{ item.IdentityReference.Value }}"
          RegistryRights: "{{ wn11_rg_000005_system_registry_rights_map[item.RegistryRights] | default(item.RegistryRights) }}"
          AccessControlType: "{{ wn11_rg_000005_system_access_control_type_map[item.AccessControlType] | default(item.AccessControlType) }}"
          IsInherited: "{{ item.IsInherited | bool }}"
          InheritanceFlags: "{{ wn11_rg_000005_system_inheritance_flags_map[item.InheritanceFlags] | default(item.InheritanceFlags) }}"
          PropagationFlags: "{{ wn11_rg_000005_system_propagation_flags_map[item.PropagationFlags] | default(item.PropagationFlags) }}"
      ansible.builtin.set_fact:
        wn11_rg_000005_actual_system_acl_normalized: >-
          {{
            wn11_rg_000005_actual_system_acl_normalized + [wn11_rg_000005_system_normalized_acl_entry]
          }}
      loop: "{{ wn11_rg_000005_system_acl_entries }}"

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Compare expected vs actual ACLs (missing or incorrect)"
      ansible.builtin.set_fact:
        wn11_rg_000005_system_acl_diff: >-
          {{
            win11stig_expected_system_acl | difference(wn11_rg_000005_actual_system_acl_normalized)
          }}

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Check for unexpected ACL entries (excluding known identities)"
      ansible.builtin.set_fact:
        wn11_rg_000005_system_acl_extras: >-
          {{
            wn11_rg_000005_actual_system_acl_normalized
            | difference(win11stig_expected_system_acl)
            | rejectattr('IdentityReference', 'in', win11stig_expected_system_acl | map(attribute='IdentityReference') | list)
            | list
          }}

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Display ACL Compliance Results for SOFTWARE and SYSTEM"
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════"
          - "            Windows Registry ACL STIG Compliance Check             "
          - "═══════════════════════════════════════════════════════════════════"
          - ""
          - "HKLM:\\SOFTWARE"
          - ""
          - "{{ 'No missing ACL entries' if wn11_rg_000005_software_acl_diff | length == 0 else 'Missing or incorrect ACL entries:' }}"
          - "{{ wn11_rg_000005_software_acl_diff if wn11_rg_000005_software_acl_diff | length > 0 else '' }}"
          - ""
          - "{{ 'No unexpected ACL entries' if wn11_rg_000005_software_acl_extras | length == 0 else 'Unexpected ACL entries:' }}"
          - "{{ wn11_rg_000005_software_acl_extras if wn11_rg_000005_software_acl_extras | length > 0 else '' }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "HKLM:\\SYSTEM"
          - ""
          - "{{ 'No missing ACL entries' if wn11_rg_000005_system_acl_diff | length == 0 else 'Missing or incorrect ACL entries:' }}"
          - "{{ wn11_rg_000005_system_acl_diff if wn11_rg_000005_system_acl_diff | length > 0 else '' }}"
          - ""
          - "{{ 'No unexpected ACL entries' if wn11_rg_000005_system_acl_extras | length == 0 else 'Unexpected ACL entries:' }}"
          - "{{ wn11_rg_000005_system_acl_extras if wn11_rg_000005_system_acl_extras | length > 0 else '' }}"
          - ""
          - "───────────────────────────────────────────────────────────────────"
          - ""
          - "Warning!! Accessing HKLM:\\SECURITY Hive Permissions."
          - ""
          - "You cannot retrieve ACLs or permissions for the HKLM:\\SECURITY registry hive using PowerShell"
          - "from a regular user or even an administrator account. The SECURITY hive is protected by the Windows"
          - "operating system and can only be accessed by the SYSTEM account. Attempting to access it using PowerShell"
          - "commands like Get-Acl, reg save, or Copy-Item from a standard or admin session will result in Access is"
          - "denied” or similar errors — even with elevated privileges."
          - "To successfully retrieve ACLs from HKLM:\\SECURITY, you must:"
          - "   - Run PowerShell as the SYSTEM user (e.g., using PsExec or a Scheduled Task)"
          - "   - Export the hive using a SYSTEM-level task, then load and inspect it offline"
          - "   - Use trusted forensic tools (e.g., KAPE, Velociraptor) that operate under SYSTEM-level permissions"
          - ""
          - "═══════════════════════════════════════════════════════════════════"

    - name: "MEDIUM | WN11-RG-000005 | AUDIT | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Add Warn Count."
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-RG-000005'

- name: "MEDIUM | WN11-SO-000005 | PATCH | The built-in administrator account must be disabled."
  when:
    - wn11_so_000005
    - not win_skip_for_test
  tags:
    - WN11-SO-000005
    - CAT2
    - CCI-000764
    - SRG-OS-000104-GPOS-00051
    - SV-253432r958482_rule
    - V-253432
    - NIST800-53_IA-2
    - NIST800-53A_IA-2.1
    - NIST800-53R4_IA-2
  community.windows.win_security_policy:
    section: System Access
    key: EnableAdminAccount
    value: 0

- name: "MEDIUM | WN11-SO-000010 | PATCH | The built-in guest account must be disabled."
  when: wn11_so_000010
  tags:
    - WN11-SO-000010
    - CAT2
    - CCI-000804
    - SRG-OS-000121-GPOS-00062
    - SV-253433r958504_rule
    - V-253433
    - NIST800-53_IA-8
    - NIST800-53A_IA-8.1
    - NIST800-53R4_IA-8
  community.windows.win_security_policy:
    section: System Access
    key: EnableGuestAccount
    value: 0

- name: "MEDIUM | WN11-SO-000015 | PATCH | Local accounts with blank passwords must be restricted to prevent access from the network."
  when: wn11_so_000015
  tags:
    - WN11-SO-000015
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253434r991589_rule
    - V-253434
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
    name: LimitBlankPasswordUse
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000020 | PATCH | The built-in administrator account must be renamed."
  when: wn11_so_000020
  tags:
    - WN11-SO-000020
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253435r991589_rule
    - V-253435
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-SO-000020 | PATCH | The built-in administrator account must be renamed. | Change Admin Name."
      when: "'adminchangethis' not in win11stig_admin_username"
      community.windows.win_security_policy:
        section: System Access
        key: NewAdministratorName
        value: "{{ win11stig_admin_username }}"

    - name: "MEDIUM | WN11-SO-000020 | AUDIT | The built-in administrator account must be renamed. | Warning Msg For Default Variable Not Edited."
      when: "'adminchangethis' in win11stig_admin_username"
      ansible.builtin.debug:
        msg:
          - "Warning!! You have not changed the default admin username in win11stig_admin_username please"
          - "make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-SO-000020 | AUDIT | The built-in administrator account must be renamed. | Add Warn Count."
      when: "'adminchangethis' in win11stig_admin_username"
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-SO-000020'

- name: "MEDIUM | WN11-SO-000025 | PATCH | The built-in guest account must be renamed."
  when: wn11_so_000025
  tags:
    - WN11-SO-000025
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253436r991589_rule
    - V-253436
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-SO-000025 | PATCH | The built-in guest account must be renamed. | Change Guest Name."
      when: "'guestchangethis' not in win11stig_guest_username"
      community.windows.win_security_policy:
        section: System Access
        key: NewGuestName
        value: "{{ win11stig_guest_username }}"

    - name: "MEDIUM | WN11-SO-000025 | AUDIT | The built-in guest account must be renamed. | Warning Msg For Default Variable Not Edited."
      when: "'guestchangethis' in win11stig_guest_username"
      ansible.builtin.debug:
        msg:
          - "Warning!! You have not changed the default guest name in win11stig_guest_username please"
          - "make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-SO-000025 | AUDIT | The built-in guest account must be renamed. | Add Warn Count."
      when: "'guestchangethis' in win11stig_guest_username"
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-SO-000025'

- name: "MEDIUM | WN11-SO-000030 | PATCH | Audit policy using subcategories must be enabled"
  when: wn11_so_000030
  tags:
    - WN11-SO-000030
    - CAT2
    - CCI-000169
    - SRG-OS-000062-GPOS-00031
    - SV-253437r958442_rule
    - V-253437
    - NIST800-53_AU-12_a
    - NIST800-53A_AU-12.1_ii
    - NIST800-53R4_AU-12_a
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
    name: SCENoApplyLegacyAuditPolicy
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000035 | PATCH | Outgoing secure channel traffic must be encrypted or signed."
  when: wn11_so_000035
  tags:
    - WN11-SO-000035
    - CAT2
    - CCI-002418
    - CCI-002421
    - SRG-OS-000423-GPOS-00187
    - SV-253438r958908_rule
    - V-253438
    - NIST800-53R4_SC-8
    - NIST800-53R4_SC-8_1
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
    name: RequireSignOrSeal
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000040 | PATCH | Outgoing secure channel traffic must be encrypted when possible."
  when: wn11_so_000040
  tags:
    - WN11-SO-000040
    - CAT2
    - CCI-002418
    - CCI-002421
    - SRG-OS-000423-GPOS-00187
    - SV-253439r958908_rule
    - V-253439
    - NIST800-53R4_SC-8
    - NIST800-53R4_SC-8_1
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
    name: SealSecureChannel
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000045 | PATCH | Outgoing secure channel traffic must be signed when possible."
  when: wn11_so_000045
  tags:
    - WN11-SO-000045
    - CAT2
    - CCI-002418
    - CCI-002421
    - SRG-OS-000423-GPOS-00187
    - SV-253440r958908_rule
    - V-253440
    - NIST800-53R4_SC-8
    - NIST800-53R4_SC-8_1
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
    name: SignSecureChannel
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000060 | PATCH | The system must be configured to require a strong session key."
  when: wn11_so_000060
  tags:
    - WN11-SO-000060
    - CAT2
    - CCI-002418
    - SRG-OS-000423-GPOS-00187
    - SV-253443r958908_rule
    - V-253443
    - NIST800-53R4_SC-8
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
    name: RequireStrongKey
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000070 | PATCH | The machine inactivity limit must be set to 15 minutes, locking the system with the screensaver."
  when: wn11_so_000070
  tags:
    - WN11-SO-000070
    - CAT2
    - CCI-001133
    - CCI-002361
    - SRG-OS-000279-GPOS-00109
    - SV-253444r958636_rule
    - V-253444
    - NIST800-53_SC-10
    - NIST800-53A_SC-10.1_ii
    - NIST800-53R4_SC-10
    - NIST800-53R4_AC-12
  block:
    - name: "MEDIUM | WN11-SO-000070 | PATCH | The machine inactivity limit must be set to 15 minutes, locking the system with the screensaver. | Set Registry Variable."
      when:
        - win11stig_inactivity_timeout_seconds <= 900
        - win11stig_inactivity_timeout_seconds > 0
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
        name: InactivityTimeoutSecs
        data: "{{ win11stig_inactivity_timeout_seconds }}"
        type: dword

    - name: "MEDIUM | WN11-SO-000070 | AUDIT | The machine inactivity limit must be set to 15 minutes, locking the system with the screensaver. | Warning Check For Variable Standards."
      when: win11stig_inactivity_timeout_seconds > 900 or win11stig_inactivity_timeout_seconds == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of seconds set for win11stig_inactivity_timeout_seconds. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-SO-000070 | AUDIT | The machine inactivity limit must be set to 15 minutes, locking the system with the screensaver. | Warn Count."
      when: win11stig_inactivity_timeout_seconds > 900 or win11stig_inactivity_timeout_seconds == 0
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-SO-000070'

- name: "MEDIUM | WN11-SO-000075 | PATCH | The required legal notice must be configured to display before console logon."
  when: wn11_so_000075
  tags:
    - WN11-SO-000075
    - CAT2
    - CCI-000044
    - CCI-000048
    - CCI-000050
    - SRG-OS-000024-GPOS-00007
    - SV-253445r958392_rule
    - V-253445
    - NIST800-53_AC-7_a
    - NIST800-53_AC-8_a
    - NIST800-53_AC-8_b
    - NIST800-53A_AC-7.1_ii
    - NIST800-53A_AC-8.1_ii
    - NIST800-53A_AC-8.1_iii
    - NIST800-53R4_AC-7_a
    - NIST800-53R4_AC-8_a
    - NIST800-53R4_AC-8_b
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: LegalNoticeText
    data: "{{ win11stig_legal_notice }}"
    type: string

- name: "MEDIUM | WN11-SO-000095 | PATCH | The Smart Card removal option must be configured to Force Logoff or Lock Workstation."
  when: wn11_so_000095
  tags:
    - WN11-SO-000095
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253448r991589_rule
    - V-253448
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-SO-000095 | PATCH | The Smart Card removal option must be configured to Force Logoff or Lock Workstation. | Apply Variable To Registry."
      when:
        - win11stig_sc_remove_option >= 1
        - win11stig_sc_remove_option <= 2
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon
        name: SCRemoveOption
        data: "{{ win11stig_sc_remove_option }}"
        type: string

    - name: "MEDIUM | WN11-SO-000095 | AUDIT | The Smart Card removal option must be configured to Force Logoff or Lock Workstation. | Warning Check For Variable Standards."
      when: win11stig_sc_remove_option < 1 or win11stig_sc_remove_option > 2
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win11stig_sc_remove_option. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "MEDIUM | WN11-SO-000095 | AUDIT | The Smart Card removal option must be configured to Force Logoff or Lock Workstation. | Warn Count."
      when: win11stig_sc_remove_option < 1 or win11stig_sc_remove_option > 2
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: 'WN11-SO-000095'

- name: "MEDIUM | WN11-SO-000100 | PATCH | The Windows SMB client must be configured to always perform SMB packet signing."
  when: wn11_so_000100
  tags:
    - WN11-SO-000100
    - CAT2
    - CCI-002418
    - SRG-OS-000423-GPOS-00187
    - SV-253449r958908_rule
    - V-253449
    - NIST800-53R4_SC-8
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
    name: RequireSecuritySignature
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000110 | PATCH | Unencrypted passwords must not be sent to third-party SMB Servers."
  when: wn11_so_000110
  tags:
    - WN11-SO-000110
    - CAT2
    - CCI-000197
    - SRG-OS-000074-GPOS-00042
    - SV-253450r987796_rule
    - V-253450
    - NIST800-53_IA-5_1_c
    - NIST800-53A_IA-5_1.1_v
    - NIST800-53R4_IA-5_1_c
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
    name: EnablePlainTextPassword
    data: 0
    type: dword

- name: "MEDIUM | WN11-SO-000120 | PATCH | The Windows SMB server must be configured to always perform SMB packet signing."
  when: wn11_so_000120
  tags:
    - WN11-SO-000120
    - CAT2
    - CCI-002418
    - SRG-OS-000423-GPOS-00187
    - SV-253451r958908_rule
    - V-253451
    - NIST800-53R4_SC-8
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
    name: RequireSecuritySignature
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000160 | PATCH | The system must be configured to prevent anonymous users from having the same rights as the Everyone group."
  when: wn11_so_000160
  tags:
    - WN11-SO-000160
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253455r991589_rule
    - V-253455
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
    name: EveryoneIncludesAnonymous
    data: 0
    type: dword

- name: "MEDIUM | WN11-SO-000167 | PATCH | Remote calls to the Security Account Manager (SAM) must be restricted to Administrators."
  when: wn11_so_000167
  tags:
    - WN11-SO-000167
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253457r958726_rule
    - V-253457
    - NIST800-53R4_AC-6_10
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
    name: RestrictRemoteSAM
    data: O:BAG:BAD:(A;;RC;;;BA)
    type: string

- name: "MEDIUM | WN11-SO-000180 | PATCH | NTLM must be prevented from falling back to a Null session."
  when: wn11_so_000180
  tags:
    - WN11-SO-000180
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253458r991589_rule
    - V-253458
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\LSA\MSV1_0
    name: allownullsessionfallback
    data: 0
    type: dword

- name: "MEDIUM | WN11-SO-000185 | PATCH | PKU2U authentication using online identities must be prevented."
  when: wn11_so_000185
  tags:
    - WN11-SO-000185
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253459r991589_rule
    - V-253459
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\LSA\pku2u
    name: AllowOnlineID
    data: 0
    type: dword

- name: "MEDIUM | WN11-SO-000190 | PATCH | Kerberos encryption types must be configured to prevent the use of DES and RC4 encryption suites."
  when: wn11_so_000190
  tags:
    - WN11-SO-000190
    - CAT2
    - CCI-000803
    - SRG-OS-000120-GPOS-00061
    - SV-253460r971535_rule
    - V-253460
    - NIST800-53_IA-7
    - NIST800-53A_IA-7.1
    - NIST800-53R4_IA-7
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters
    name: SupportedEncryptionTypes
    data: 2147483640
    type: dword

- name: "MEDIUM | WN11-SO-000210 | PATCH | The system must be configured to the required LDAP client signing level."
  when: wn11_so_000210
  tags:
    - WN11-SO-000210
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253463r991589_rule
    - V-253463
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LDAP
    name: LDAPClientIntegrity
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000215 | PATCH | The system must be configured to meet the minimum session security requirement for NTLM SSP based clients."
  when: wn11_so_000215
  tags:
    - WN11-SO-000215
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253464r991589_rule
    - V-253464
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
    name: NTLMMinClientSec
    data: 537395200
    type: dword

- name: "MEDIUM | WN11-SO-000220 | PATCH | The system must be configured to meet the minimum session security requirement for NTLM SSP based servers."
  when: wn11_so_000220
  tags:
    - WN11-SO-000220
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253465r991589_rule
    - V-253465
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
    name: NTLMMinServerSec
    data: 537395200
    type: dword

- name: "MEDIUM | WN11-SO-000230 | PATCH | The system must be configured to use FIPS-compliant algorithms for encryption, hashing, and signing."
  when:
    - wn11_so_000230
    - not win_skip_for_test
  tags:
    - WN11-SO-000230
    - CAT2
    - CCI-002450
    - SRG-OS-000478-GPOS-00223
    - SV-253466r959006_rule
    - V-253466
    - NIST800-53R4_SC-13
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\FIPSAlgorithmPolicy
    name: Enabled
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000245 | PATCH | User Account Control approval mode for the built-in Administrator must be enabled."
  when: wn11_so_000245
  tags:
    - WN11-SO-000245
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00157
    - SV-253468r1016442_rule
    - V-253468
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: FilterAdministratorToken
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000250 | PATCH | User Account Control must, at minimum, prompt administrators for consent on the secure desktop."
  when: wn11_so_000250
  tags:
    - WN11-SO-000250
    - CAT2
    - CCI-001084
    - SRG-OS-000134-GPOS-00068
    - SV-253469r958518_rule
    - V-253469
    - NIST800-53_SC-3
    - NIST800-53A_SC-3.1_ii
    - NIST800-53R4_SC-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: ConsentPromptBehaviorAdmin
    data: 2
    type: dword

- name: "MEDIUM | WN11-SO-000251 | PATCH | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts."
  when:
    - wn11_so_000251
  tags:
    - WN11-SO-000251
    - CAT2
    - CCI-000765
    - SRG-OS-000105-GPOS-00052
    - SV-253470r958484_rule
    - V-253470
    - NIST800-53_IA-2_1
    - NIST800-53A_IA-2_1.1
    - NIST800-53R4_IA-2_1
  block:
    - name: "MEDIUM | WN11-SO-000251 | PATCH | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Ensure Smart Card Readers Registry Key Exists"
      when: discovered_domain_joined
      ansible.windows.win_regedit:
        path: HKLM\SOFTWARE\Microsoft\Cryptography\Calais\Readers
        state: present

    - name: "MEDIUM | WN11-SO-000251 | PATCH | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Ensure Smart Cards Registry Key Exists"
      when: discovered_domain_joined
      ansible.windows.win_regedit:
        path: HKLM\SOFTWARE\Microsoft\Cryptography\Calais\SmartCards
        state: present

    - name: "MEDIUM | WN11-SO-000251 | AUDIT | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Check Smart Card Readers Registry Key"
      when: discovered_domain_joined
      ansible.windows.win_reg_stat:
        path: HKLM\SOFTWARE\Microsoft\Cryptography\Calais\Readers
      register: wn11_so_000251_smartcard_readers_check

    - name: "MEDIUM | WN11-SO-000251 | AUDIT | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Check Smart Cards Registry Key"
      when: discovered_domain_joined
      ansible.windows.win_reg_stat:
        path: HKLM\SOFTWARE\Microsoft\Cryptography\Calais\SmartCards
      register: wn11_so_000251_smartcards_check

    - name: "MEDIUM | WN11-SO-000251 | AUDIT | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Determine if Registry Keys are Populated"
      when: discovered_domain_joined
      ansible.builtin.set_fact:
        wn11_so_000251_smart_card_compliant: "{{
          wn11_so_000251_smartcard_readers_check.exists and wn11_so_000251_smartcards_check.exists and
          (wn11_so_000251_smartcard_readers_check.values | length > 0) and
          (wn11_so_000251_smartcards_check.values | length > 0) }}"

    - name: "MEDIUM | WN11-SO-000251 | AUDIT | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Display Compliance Results (Populated)"
      when:
        - discovered_domain_joined
        - wn11_so_000251_smart_card_compliant
      ansible.builtin.debug:
        msg:
          - "Warning!! Compliance Check Passed: Smart Card registry keys are present and populated."
          - "Please verify the settings meet your company standards for compliance."
          - "═══════════════════════════════════════════════════════"
          - "    Smartcard Readers Check Current Registry Values    "
          - "═══════════════════════════════════════════════════════"
          - "{{ wn11_so_000251_smartcard_readers_check.stdout_lines }}"
          - "═══════════════════════════════════════════════════════"
          - "          Smartcard Current Registry Values            "
          - "═══════════════════════════════════════════════════════"
          - "{{ wn11_so_000251_smartcards_check.stdout_lines }}"

    - name: "MEDIUM | WN11-SO-000251 | AUDIT | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Display Non-Compliance Results (Keys Exist but Are Not Populated)"
      when:
        - discovered_domain_joined
        - wn11_so_000251_smartcard_readers_check.exists or wn11_so_000251_smartcards_check.exists
        - not wn11_so_000251_smart_card_compliant
      ansible.builtin.debug:
        msg:
          - "Warning!! Smart Card registry keys are present but are NOT populated."
          - "This is a finding! Ensure these registry keys have valid settings."
          - "═══════════════════════════════════════════════════════"
          - "    Smartcard Readers Check Current Registry Values    "
          - "═══════════════════════════════════════════════════════"
          - "{{ wn11_so_000251_smartcard_readers_check.stdout_lines if wn11_so_000251_smartcard_readers_check.stdout_lines else 'Not Valid (Finding)' }}"
          - "═══════════════════════════════════════════════════════"
          - "          Smartcard Current Registry Values            "
          - "═══════════════════════════════════════════════════════"
          - "{{ wn11_so_000251_smartcards_check.stdout_lines if wn11_so_000251_smartcards_check.stdout_lines else 'Not Valid (Finding)' }}"

    - name: "MEDIUM | WN11-SO-000251 | AUDIT | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Warning Message."
      when: not discovered_domain_joined
      ansible.builtin.debug:
        msg:
          - "Warning!!"
          - "Check Text: If the system is not a member of a domain, this is Not Applicable."
          - "Fix Text: For nondomain joined systems, configuring Windows Hello for sign-on"
          - "options would be suggested based on the organization's needs and capabilities."
          - "We have decided to add this warning as a precaution based on STIG recommendations."

    - name: "MEDIUM | WN11-SO-000251 | PATCH | Windows 11 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Warn Count."
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-SO-000251'

- name: "MEDIUM | WN11-SO-000255 | PATCH | User Account Control must automatically deny elevation requests for standard users."
  when: wn11_so_000255
  tags:
    - WN11-SO-000255
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00157
    - SV-253471r1016443_rule
    - V-253471
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: ConsentPromptBehaviorUser
    data: 0
    type: dword

- name: "MEDIUM | WN11-SO-000260 | PATCH | User Account Control must be configured to detect application installations and prompt for elevation."
  when: wn11_so_000260
  tags:
    - WN11-SO-000260
    - CAT2
    - CCI-001084
    - SRG-OS-000134-GPOS-00068
    - SV-253472r958518_rule
    - V-253472
    - NIST800-53_SC-3
    - NIST800-53A_SC-3.1_ii
    - NIST800-53R4_SC-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: EnableInstallerDetection
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000265 | PATCH | User Account Control must only elevate UIAccess applications that are installed in secure locations."
  when: wn11_so_000265
  tags:
    - WN11-SO-000265
    - CAT2
    - CCI-001084
    - SRG-OS-000134-GPOS-00068
    - SV-253473r958518_rule
    - V-253473
    - NIST800-53_SC-3
    - NIST800-53A_SC-3.1_ii
    - NIST800-53R4_SC-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: EnableSecureUIAPaths
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000270 | PATCH | User Account Control must run all administrators in Admin Approval Mode, enabling UAC."
  when: wn11_so_000270
  tags:
    - WN11-SO-000270
    - CAT2
    - CCI-002038
    - SRG-OS-000373-GPOS-00157
    - SV-253474r1016444_rule
    - V-253474
    - NIST800-53R4_IA-11
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: EnableLUA
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000275 | PATCH | User Account Control must virtualize file and registry write failures to per-user locations."
  when: wn11_so_000275
  tags:
    - WN11-SO-000275
    - CAT2
    - CCI-001084
    - SRG-OS-000134-GPOS-00068
    - SV-253475r958518_rule
    - V-253475
    - NIST800-53_SC-3
    - NIST800-53A_SC-3.1_ii
    - NIST800-53R4_SC-3
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: EnableVirtualization
    data: 1
    type: dword

- name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days."
  when: wn11_so_000280
  tags:
    - WN11-SO-000280
    - CAT2
    - CCI-000199
    - SRG-OS-000076-GPOS-00044
    - SV-253476r1016445_rule
    - V-253476
    - NIST800-53_IA-5_1_d
    - NIST800-53A_IA-5_1.1_v
    - NIST800-53R4_IA-5_1_d
  block:
    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Find the built-in Administrator account (RID 500)"
      ansible.windows.win_shell: |
        $admin = Get-WmiObject Win32_UserAccount | Where-Object { $_.SID -match '-500$' }
        if ($admin) { $admin.Name } else { "Not Found" }
      changed_when: false
      failed_when: false
      register: wn11_so_000280_local_admin_name

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Set Local Administrator Name Fact"
      ansible.builtin.set_fact:
        wn11_so_000280_local_admin_username: "{{ wn11_so_000280_local_admin_name.stdout | trim }}"

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Check if Local Administrator Account is Enabled"
      when: wn11_so_000280_local_admin_username != "Not Found"
      ansible.windows.win_shell: Get-LocalUser -Name "{{ wn11_so_000280_local_admin_username }}" | Select-Object Name, Enabled, PasswordLastSet | ConvertTo-Json
      changed_when: false
      failed_when: false
      register: wn11_so_000280_local_admin_check

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Local Administrator Check Result"
      when: wn11_so_000280_local_admin_username != "Not Found"
      ansible.builtin.set_fact:
        wn11_so_000280_enabled_local_admin: "{{ (wn11_so_000280_local_admin_check.stdout | from_json) if wn11_so_000280_local_admin_check.stdout | length > 0 else {} }}"

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Display Detected Local Administrator Status"
      ansible.builtin.debug:
        msg: "Detected Local Admin Account: {{ wn11_so_000280_local_admin_username }} | Enabled: {{ wn11_so_000280_enabled_local_admin.Enabled | default('Unknown') }}"

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Mark as Not Applicable if the Local Administrator account is missing or disabled"
      when: wn11_so_000280_local_admin_username == "Not Found" or not wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.builtin.debug:
        msg: "Warning !! This control is Not Applicable: No enabled local Administrator account found."

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Check if Administrator password is older than this many days {{ wn11stig_pass_age_administrator }}"
      when: wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.windows.win_shell: |
        Get-LocalUser -Name * | Where SID -like S-1-5-21-*-500 |
        Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn11stig_pass_age_administrator }}))} |
        Select Name,PasswordLastSet
      changed_when: false
      failed_when: false
      register: password_age_check

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Check if password age exceeds the required limit"
      when: wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.builtin.set_fact:
        wn11_so_000280_password_compliant: "{{ password_age_check.stdout | trim == '' }}"

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Display Password Compliance Status"
      when: wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.builtin.debug:
        msg:
          - "Password Compliance: {{ wn11_so_000280_password_compliant }}"
          - "Detected Accounts (if any): {{ password_age_check.stdout_lines }}"

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Check if LAPS is enabled in Group Policy"
      when: wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd
        name: AdmPwdEnabled
      register: wn11_so_000280_laps_enabled

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Set LAPS Compliance Fact"
      when: wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.builtin.set_fact:
        wn11_so_000280_laps_compliant: "{{ wn11_so_000280_laps_enabled.exists and wn11_so_000280_laps_enabled.value == 1 }}"

    - name: "MEDIUM | WN11-SO-000280 | AUDIT | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Local Administrator Password Age & LAPS Compliance"
      when: wn11_so_000280_enabled_local_admin.Enabled | default(false)
      ansible.builtin.debug:
        msg:
          - "{{ 'Warning!! The built-in Administrator password has not been changed in over ' ~ wn11stig_pass_age_administrator ~ ' days.' if not wn11_so_000280_password_compliant else 'Password is compliant.' }}"
          - "{{ 'Detected Accounts: ' ~ password_age_check.stdout_lines | join(', ') if not wn11_so_000280_password_compliant else '' }}"
          - "{{ 'Warning!! Windows LAPS is NOT enabled! This is a finding.' if not wn11_so_000280_laps_compliant else 'LAPS is enabled and compliant.' }}"

    - name: "MEDIUM | WN11-SO-000280 | PATCH | Passwords for enabled local Administrator accounts must be changed at least every 60 days. | Warn Count."
      when: >-
        (wn11_so_000280_local_admin_username == "Not Found" or
        not wn11_so_000280_enabled_local_admin.Enabled | default(false) or
        wn11_so_000280_enabled_local_admin.Enabled | default(false))
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-SO-000280'

- name: "MEDIUM | WN11-UC-000020 | PATCH | Zone information must be preserved when saving attachments."
  when: wn11_uc_000020
  tags:
    - WN11-UC-000020
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-253478r991589_rule
    - V-253478
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_regedit:
    path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Attachments
    name: SaveZoneInformation
    data: 2
    type: dword

- name: "MEDIUM | WN11-UR-000005 | PATCH | The Access Credential Manager as a trusted caller user right must not be assigned to any groups or accounts."
  when: wn11_ur_000005
  tags:
    - WN11-UR-000005
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253479r958726_rule
    - V-253479
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeTrustedCredManAccessPrivilege
    users: []

- name: "MEDIUM | WN11-UR-000010 | PATCH | The Access this computer from the network user right must only be assigned to the Administrators and Remote Desktop Users groups."
  when: wn11_ur_000010
  tags:
    - WN11-UR-000010
    - CAT2
    - CCI-000213
    - SRG-OS-000080-GPOS-00048
    - SV-253480r958472_rule
    - V-253480
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
  block:
    - name: "MEDIUM | WN11-UR-000010 | PATCH | The Access this computer from the network user right must only be assigned to the Administrators and Remote Desktop Users groups. | Set Accounts And Groups"
      ansible.windows.win_user_right:
        name: SeNetworkLogonRight
        action: set
        users: "{{ ['Administrators', 'Remote Desktop Users'] + (win11stig_additional_network_logon_users_or_groups | default([])) }}"

    - name: "MEDIUM | WN11-UR-000010 | AUDIT | The Access this computer from the network user right must only be assigned to the Administrators and Remote Desktop Users groups. | Warning Message."
      when: win11stig_additional_network_logon_users_or_groups | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! Additional users or groups have been assigned the Access this computer from the network user right."
          - "If a domain application account such as for a management tool requires this user right, this would not be a finding."
          - "Vendor documentation must support the requirement for having the user right."
          - "The requirement must be documented with the ISSO."
          - "The application account, managed at the domain level, must meet requirements for application account passwords,"
          - "such as length and frequency of changes as defined in the Windows Server STIGs."
          - "Assigned Users/Groups:"
          - "{{ win11stig_additional_network_logon_users_or_groups }}"

    - name: "MEDIUM | WN11-UR-000010 | AUDIT | The Access this computer from the network user right must only be assigned to the Administrators and Remote Desktop Users groups. | Warn Count."
      when: win11stig_additional_network_logon_users_or_groups | length > 0
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-UR-000010'

- name: "MEDIUM | WN11-UR-000025 | PATCH | The Allow log on locally user right must only be assigned to the Administrators and Users groups."
  when: wn11_ur_000025
  tags:
    - WN11-UR-000025
    - CAT2
    - CCI-000213
    - SRG-OS-000080-GPOS-00048
    - SV-253482r958472_rule
    - V-253482
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
  ansible.windows.win_user_right:
    name: SeInteractiveLogonRight
    action: set
    users:
      - Administrators
      - Users

- name: "MEDIUM | WN11-UR-000030 | PATCH | The Back up files and directories user right must only be assigned to the Administrators group."
  when: wn11_ur_000030
  tags:
    - WN11-UR-000030
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253483r958726_rule
    - V-253483
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeBackupPrivilege
    users: Administrators
    action: set

# Older Windows 11 Version Items
# ansible_distribution_version < "10.0.1909.0"
#             users:
#               - Administrators
#               - LOCAL SERVICE
# If it is greater then or equal add the following.
#               - NT SERVICE\autotimesvc
- name: "MEDIUM | WN11-UR-000035 | PATCH | The Change the system time user right must only be assigned to Administrators and Local Service."
  when: wn11_ur_000035
  tags:
    - WN11-UR-000035
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253484r958726_rule
    - V-253484
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeSystemtimePrivilege
    action: set
    users:
      - Administrators
      - LOCAL SERVICE

- name: "MEDIUM | WN11-UR-000040 | PATCH | The Create a pagefile user right must only be assigned to the Administrators group."
  when: wn11_ur_000040
  tags:
    - WN11-UR-000040
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253485r958726_rule
    - V-253485
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeCreatePagefilePrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000050 | PATCH | The Create global objects user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  when: wn11_ur_000050
  tags:
    - WN11-UR-000050
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253487r958726_rule
    - V-253487
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeCreateGlobalPrivilege
    action: set
    users:
      - Administrators
      - LOCAL SERVICE
      - NETWORK SERVICE
      - SERVICE

- name: "MEDIUM | WN11-UR-000055 | PATCH | The Create permanent shared objects user right must not be assigned to any groups or accounts."
  when: wn11_ur_000055
  tags:
    - WN11-UR-000055
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253488r958726_rule
    - V-253488
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeCreatePermanentPrivilege
    users: []

- name: "MEDIUM | WN11-UR-000060 | PATCH | The Create symbolic links user right must only be assigned to the Administrators group."
  when: wn11_ur_000060
  tags:
    - WN11-UR-000060
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253489r958726_rule
    - V-253489
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeCreateSymbolicLinkPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000070 | PATCH | The Deny access to this computer from the network user right on workstations must be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems."
  when: wn11_ur_000070
  tags:
    - WN11-UR-000070
    - CAT2
    - CCI-000213
    - SRG-OS-000080-GPOS-00048
    - SV-253491r958472_rule
    - V-253491
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
  block:
    - name: "MEDIUM | WN11-UR-000070 | PATCH | The Deny access to this computer from the network user right on workstations must be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Domain member systems"
      when: discovered_domain_joined
      ansible.windows.win_user_right:
        name: SeDenyNetworkLogonRight
        action: set
        users:
          - Guests
          - Enterprise Admins
          - Domain Admins
          - Local account

    - name: "MEDIUM | WN11-UR-000070 | PATCH | The Deny access to this computer from the network user right on workstations must be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Non-Domain systems"
      when: not discovered_domain_joined
      ansible.windows.win_user_right:
        name: SeDenyNetworkLogonRight
        users: Guests
        action: set

- name: "MEDIUM | WN11-UR-000075 | PATCH | The Deny log on as a batch job user right on domain-joined workstations must be configured to prevent access from highly privileged domain accounts."
  when:
    - wn11_ur_000075
    - discovered_domain_joined
  tags:
    - WN11-UR-000075
    - CAT2
    - CCI-000213
    - SRG-OS-000080-GPOS-00048
    - SV-253492r958472_rule
    - V-253492
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
  ansible.windows.win_user_right:
    name: SeDenyBatchLogonRight
    action: set
    users:
      - Enterprise Admin
      - Domain Admin

- name: "MEDIUM | WN11-UR-000080 | PATCH | The Deny log on as a service user right on Windows 11 domain-joined workstations must be configured to prevent access from highly privileged domain accounts."
  when:
    - wn11_ur_000080
    - discovered_domain_joined
  tags:
    - WN11-UR-000080
    - CAT2
    - CCI-000213
    - SRG-OS-000080-GPOS-00048
    - SV-253493r958472_rule
    - V-253493
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
  ansible.windows.win_user_right:
    name: SeDenyServiceLogonRight
    users:
      - Enterprise Admin
      - Domain Admin
    action: set

- name: "MEDIUM | WN11-UR-000085 | PATCH | The Deny log on locally user right on workstations must be configured to prevent access from highly privileged domain accounts on domain systems and unauthenticated access on all systems."
  when: wn11_ur_000085
  tags:
    - WN11-UR-000085
    - CAT2
    - CCI-000213
    - SRG-OS-000080-GPOS-00048
    - SV-253494r958472_rule
    - V-253494
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
  block:
    - name: "MEDIUM | WN11-UR-000085 | PATCH | The Deny log on locally user right on workstations must be configured to prevent access from highly privileged domain accounts on domain systems and unauthenticated access on all systems. | Domain member systems"
      when: discovered_domain_joined
      ansible.windows.win_user_right:
        name: SeDenyInteractiveLogonRight
        action: set
        users:
          - Guests
          - Enterprise Admins
          - Domain Admins

    - name: "MEDIUM | WN11-UR-000085 | PATCH | The Deny log on locally user right on workstations must be configured to prevent access from highly privileged domain accounts on domain systems and unauthenticated access on all systems. | Non-Domain systems"
      ansible.windows.win_user_right:
        name: SeDenyInteractiveLogonRight
        users: Guests
        action: set
      when: not discovered_domain_joined

- name: "MEDIUM | WN11-UR-000090 | PATCH | The Deny log on through Remote Desktop Services user right on Windows 11 workstations must at a minimum be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems."
  when: wn11_ur_000090
  tags:
    - WN11-UR-000090
    - CAT2
    - CCI-000213
    - CCI-002314
    - SRG-OS-000080-GPOS-00048
    - SV-253495r958472_rule
    - V-253495
    - NIST800-53_AC-3
    - NIST800-53A_AC-3.1
    - NIST800-53R4_AC-3
    - NIST800-53R4_AC-17_1
  block:
    - name: "MEDIUM | WN11-UR-000090 | PATCH | The Deny log on through Remote Desktop Services user right on Windows 11 workstations must at a minimum be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Domain memeber systems"
      ansible.windows.win_user_right:
        name: SeDenyRemoteInteractiveLogonRight
        action: set
        users:
          - Guests
          - Enterprise Admins
          - Domain Admins
          - Local account
      when: discovered_domain_joined

    - name: "MEDIUM | WN11-UR-000090 | PATCH | The Deny log on through Remote Desktop Services user right on Windows 11 workstations must at a minimum be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Non-Domain systems"
      ansible.windows.win_user_right:
        name: SeDenyRemoteInteractiveLogonRight
        users: Guests
        action: set
      when: not discovered_domain_joined

- name: "MEDIUM | WN11-UR-000095 | PATCH | The Enable computer and user accounts to be trusted for delegation user right must not be assigned to any groups or accounts."
  when: wn11_ur_000095
  tags:
    - WN11-UR-000095
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253496r958726_rule
    - V-253496
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_user_right:
    name: SeEnableDelegationPrivilege
    users: []

- name: "MEDIUM | WN11-UR-000100 | PATCH | The Force shutdown from a remote system user right must only be assigned to the Administrators group."
  when: wn11_ur_000100
  tags:
    - WN11-UR-000100
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253497r958726_rule
    - V-253497
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_user_right:
    name: SeRemoteShutdownPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000110 | PATCH | The Impersonate a client after authentication user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  when: wn11_ur_000110
  tags:
    - WN11-UR-000110
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253498r958726_rule
    - V-253498
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_user_right:
    name: SeImpersonatePrivilege
    action: set
    users:
      - Administrators
      - LOCAL SERVICE
      - NETWORK SERVICE
      - SERVICE

- name: "MEDIUM | WN11-UR-000120 | PATCH | The Load and unload device drivers user right must only be assigned to the Administrators group."
  when: wn11_ur_000120
  tags:
    - WN11-UR-000120
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253499r958726_rule
    - V-253499
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_user_right:
    name: SeLoadDriverPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000125 | PATCH | The Lock pages in memory user right must not be assigned to any groups or accounts."
  when: wn11_ur_000125
  tags:
    - WN11-UR-000125
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253500r958726_rule
    - V-253500
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  ansible.windows.win_user_right:
    name: SeLockMemoryPrivilege
    action: set
    users: []

- name: "MEDIUM | WN11-UR-000130 | PATCH | The Manage auditing and security log user right must only be assigned to the Administrators group."
  when: wn11_ur_000130
  tags:
    - WN11-UR-000130
    - CAT2
    - CCI-000162
    - CCI-000171
    - SRG-OS-000057-GPOS-00027
    - SV-253501r958434_rule
    - V-253501
    - NIST800-53_AU-9
    - NIST800-53_AU-12_b
    - NIST800-53A_AU-9.1
    - NIST800-53A_AU-12.1_iii
    - NIST800-53R4_AU-9
    - NIST800-53R4_AU-12_b
  ansible.windows.win_user_right:
    name: SeSecurityPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000140 | PATCH | The Modify firmware environment values user right must only be assigned to the Administrators group."
  when: wn11_ur_000140
  tags:
    - WN11-UR-000140
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253502r958726_rule
    - V-253502
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeSystemEnvironmentPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000145 | PATCH | The Perform volume maintenance tasks user right must only be assigned to the Administrators group."
  when: wn11_ur_000145
  tags:
    - WN11-UR-000145
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253503r958726_rule
    - V-253503
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeManageVolumePrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000150 | PATCH | The Profile single process user right must only be assigned to the Administrators group."
  when: wn11_ur_000150
  tags:
    - WN11-UR-000150
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253504r958726_rule
    - V-253504
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeProfileSingleProcessPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000160 | PATCH | The Restore files and directories user right must only be assigned to the Administrators group."
  when: wn11_ur_000160
  tags:
    - WN11-UR-000160
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253505r958726_rule
    - V-253505
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeRestorePrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-UR-000165 | PATCH | The Take ownership of files or other objects user right must only be assigned to the Administrators group."
  when: wn11_ur_000165
  tags:
    - WN11-UR-000165
    - CAT2
    - CCI-002235
    - SRG-OS-000324-GPOS-00125
    - SV-253506r958726_rule
    - V-253506
    - NIST800-53R4_AC-6_10
  ansible.windows.win_user_right:
    name: SeTakeOwnershipPrivilege
    users: Administrators
    action: set

- name: "MEDIUM | WN11-CC-000391 | PATCH | Internet Explorer must be disabled for Windows 11."
  when: wn11_cc_000391
  tags:
    - WN11-CC-000391
    - CAT2
    - CCI-000366
    - SRG-OS-000185-GPOS-00079
    - SV-256893r958552_rule
    - V-256893
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000391 | AUDIT | Internet Explorer must be disabled for Windows 11. | Get Windows Edition"
      ansible.windows.win_shell: (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion").EditionID
      changed_when: false
      failed_when: false
      register: wn11_cc_000391_os_edition_check

    - name: "MEDIUM | WN11-CC-000391 | PATCH | Internet Explorer must be disabled for Windows 11. | Set fact"
      ansible.builtin.set_fact:
        wn11_cc_000391_is_semi_annual_channel: "{{ wn11_cc_000391_os_edition_check.stdout not in ['EnterpriseS', 'IoTEnterprise', 'ServerDatacenter', 'ServerStandard'] }}"

    - name: "MEDIUM | WN11-CC-000391 | PATCH | Internet Explorer must be disabled for Windows 11. | Disable IE11 as a standalone browser"
      when: wn11_cc_000391_is_semi_annual_channel
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Main
        name: DisableIE
        data: 1
        type: dword

    - name: "MEDIUM | WN11-CC-000391 | PATCH | Internet Explorer must be disabled for Windows 11. | Remove IE11 Windows Feature"
      when:
        - wn11_cc_000391_is_semi_annual_channel
        - win11stig_remove_internet_explorer_11
      ansible.windows.win_feature:
        name: Internet-Explorer-Optional-amd64
        state: absent

- name: "MEDIUM | WN11-00-000395 | PATCH | Windows 11 must not have portproxy enabled or in use."
  when: wn11_00_000395
  tags:
    - WN11-00-000395
    - CAT2
    - CCI-000381
    - SRG-OS-000480-GPOS-00227
    - SV-257592r991589_rule
    - V-257592
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_ii
    - NIST800-53R4_CM-7_a
  block:
    - name: "MEDIUM | WN11-00-000395 | AUDIT | Windows 11 must not have portproxy enabled or in use. | Check registry for portproxy entries"
      ansible.windows.win_reg_stat:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\PortProxy\v4tov4\tcp
      register: wn11_00_000395_portproxy_registry_check

    - name: "MEDIUM | WN11-00-000395 | AUDIT | Windows 11 must not have portproxy enabled or in use. | Get active portproxy rules"
      ansible.windows.win_shell: netsh interface portproxy show all
      register: wn11_00_000395_portproxy_netsh_output
      changed_when: false

    - name: "MEDIUM | WN11-00-000395 | AUDIT | Windows 11 must not have portproxy enabled or in use. | Get portproxy rules"
      when: wn11_00_000395_portproxy_netsh_output.stdout_lines | length > 0 and win11stig_delete_each_portproxy and not win11stig_reset_portproxy
      ansible.builtin.set_fact:
        wn11_00_000395_portproxy_rules: >-
          {{
            wn11_00_000395_portproxy_netsh_output.stdout_lines
            | select('match', '^\s*\d{1,3}.*:\d+\s+\d{1,3}.*:\d+')
            | map('regex_replace', '\s+', ' ')
            | map('split', ' ')
            | map('extract', [0,1])
            | list
          }}

    - name: "MEDIUM | WN11-00-000395 | PATCH | Windows 11 must not have portproxy enabled or in use. | Delete individual portproxy rules STIG-compliant method."
      when:
        - win11stig_delete_each_portproxy
        - wn11_00_000395_portproxy_rules is defined
      ansible.windows.win_shell: netsh interface portproxy delete v4tov4 tcp {{ item[0] }}
      loop: "{{ wn11_00_000395_portproxy_rules }}"

    - name: "MEDIUM | WN11-00-000395 | PATCH | Windows 11 must not have portproxy enabled or in use. | Reset all portproxy rules."
      when:
        - win11stig_reset_portproxy
        - not win11stig_delete_each_portproxy
        - wn11_00_000395_portproxy_registry_check.exists or (wn11_00_000395_portproxy_netsh_output.stdout_lines | reject('equalto', '') | list | length > 0)
      ansible.windows.win_shell: netsh interface portproxy reset

    - name: "MEDIUM | WN11-00-000395 | AUDIT | Windows 11 must not have portproxy enabled or in use. | Portproxy Compliance Status with Rule Details"
      when:
        - not win11stig_reset_portproxy
        - not win11stig_delete_each_portproxy
      ansible.builtin.debug:
        msg:
          - "Registry Key Present: {{ wn11_00_000395_portproxy_registry_check.exists }}"
          - "Portproxy Rules Detected: {{ wn11_00_000395_portproxy_netsh_output.stdout_lines | reject('equalto', '') | list | length }}"
          - "{{ 'Finding: Portproxy is enabled or in use.' if (wn11_00_000395_portproxy_registry_check.exists or (wn11_00_000395_portproxy_netsh_output.stdout_lines | reject('equalto', '') | list | length > 0)) else 'Compliant: Portproxy is not in use.' }}"
          - "═══════════════ Current Portproxy Rules (if any) ═══════════════"
          - "{{ wn11_00_000395_portproxy_netsh_output.stdout_lines | reject('equalto', '') | list | default(['None']) }}"

    - name: "MEDIUM | WN11-00-000395 | AUDIT | Windows 11 must not have portproxy enabled or in use. | Warn Count."
      when: wn11_00_000395_portproxy_registry_check.exists or (wn11_00_000395_portproxy_netsh_output.stdout_lines | reject('equalto', '') | list | length > 0)
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-00-000395'

- name: "MEDIUM | WN11-AU-000585 | PATCH | Windows 11 must have command line process auditing events enabled for failures."
  when: wn11_au_000585
  tags:
    - WN11-AU-000585
    - CAT2
    - CCI-002234
    - SRG-OS-000037-GPOS-00015
    - SV-257770r958412_rule
    - V-257770
    - NIST800-53R4_AC-6_9
  block:
    - name: "MEDIUM | WN11-AU-000585 | AUDIT | Windows 11 must have command line process auditing events enabled for failures | Ensure Include command line in process creation events is set to Enabled"
      ansible.windows.win_regedit:
        path: HKLM:\Software\Microsoft\Windows\Currentversion\Policies\System\Audit
        name: ProcessCreationIncludeCmdLine_Enabled
        data: 1
        type: dword

    - name: "MEDIUM | WN11-AU-000585 | AUDIT | Windows 11 must have command line process auditing events enabled for failures | Get current audit events."
      ansible.windows.win_shell: AuditPol /get /subcategory:"Process Creation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
      changed_when: false
      failed_when: false
      register: wn11_au_000585_audit

    - name: "MEDIUM | WN11-AU-000585 | PATCH | Windows 11 must have command line process auditing events enabled for failures | Failure"
      when: "'Failure' not in wn11_au_000585_audit.stdout"
      ansible.windows.win_shell: AuditPol /set /subcategory:"Process Creation" /failure:enable

- name: "MEDIUM | WN11-00-000125 | PATCH | Copilot in Windows must be disabled for Windows 11"
  when: wn11_00_000125
  tags:
    - WN11-00-000125
    - CAT2
    - CCI-000382
    - SRG-OS-000096-GPOS-00050
    - SV-268317r1016371_rule
    - V-268317
    - NIST800-53_CM-7
    - NIST800-53A_CM-7.1_iii
    - NIST800-53R4_CM-7_b
  ansible.windows.win_regedit:
    path: HKCU:\Software\Policies\Microsoft\Windows\WindowsCopilot
    name: TurnOffWindowsCopilot
    data: 1
    type: dword

- name: "MEDIUM | WN11-CC-000063 | AUDIT | Windows 11 systems must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance."
  when: wn11_cc_000063
  tags:
    - WN11-CC-000063
    - CAT2
    - CCI-000366
    - SRG-OS-000480-GPOS-00227
    - SV-268318r1028268_rule
    - V-268318
    - NIST800-53_CM-6_b
    - NIST800-53A_CM-6.1_iv
    - NIST800-53R4_CM-6_b
  block:
    - name: "MEDIUM | WN11-CC-000063 | AUDIT | Windows 11 systems must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance. | Check if system is receiving GPO using gpresult"
      ansible.windows.win_shell: gpresult /R
      changed_when: false
      failed_when: false
      register: wn11_cc_000063_gpresult_check

    - name: "MEDIUM | WN11-CC-000063 | AUDIT | Windows 11 systems must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance. | Check if device is MDM enrolled via registry"
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\Microsoft\Enrollments
      register: wn11_cc_000063_mdm_registry_check

    - name: "MEDIUM | WN11-CC-000063 | AUDIT | Windows 11 systems must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance. | Set fact for managed system"
      ansible.builtin.set_fact:
        wn11_cc_000063_system_managed: "{{ 'Group Policy Objects' in wn11_cc_000063_gpresult_check.stdout or wn11_cc_000063_mdm_registry_check.exists }}"

    - name: "MEDIUM | WN11-CC-000063 | AUDIT | Windows 11 systems must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance. | Management Compliance Result"
      when: not wn11_cc_000063_system_managed
      ansible.builtin.debug:
        msg:
          - "Warning!! The system must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance."
          - "Configure the Windows 11 system to use either Group Policy or an approved MDM product to enforce STIG compliance."

    - name: "MEDIUM | WN11-CC-000063 | AUDIT | Windows 11 systems must use either Group Policy or an approved Mobile Device Management (MDM) product to enforce STIG compliance. | Warn Count."
      when: not wn11_cc_000063_system_managed
      ansible.builtin.import_tasks: warning_facts.yml
      vars:
        warn_control_id: 'WN11-CC-000063'
